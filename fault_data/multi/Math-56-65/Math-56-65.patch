diff --git a/defects4j.build.properties b/defects4j.build.properties
index 19ea0f8..0121fc3 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=65
+d4j.classes.instrument=org/apache/commons/math/ConvergenceException.class,org/apache/commons/math/ConvergenceException\$*.class,org/apache/commons/math/FunctionEvaluationException.class,org/apache/commons/math/FunctionEvaluationException\$*.class,org/apache/commons/math/MathException.class,org/apache/commons/math/MathException\$*.class,org/apache/commons/math/MathRuntimeException.class,org/apache/commons/math/MathRuntimeException\$*.class,org/apache/commons/math/MaxEvaluationsExceededException.class,org/apache/commons/math/MaxEvaluationsExceededException\$*.class,org/apache/commons/math/MaxIterationsExceededException.class,org/apache/commons/math/MaxIterationsExceededException\$*.class,org/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction.class,org/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction\$*.class,org/apache/commons/math/analysis/MultivariateMatrixFunction.class,org/apache/commons/math/analysis/MultivariateMatrixFunction\$*.class,org/apache/commons/math/analysis/MultivariateVectorialFunction.class,org/apache/commons/math/analysis/MultivariateVectorialFunction\$*.class,org/apache/commons/math/exception/DimensionMismatchException.class,org/apache/commons/math/exception/DimensionMismatchException\$*.class,org/apache/commons/math/exception/Localizable.class,org/apache/commons/math/exception/Localizable\$*.class,org/apache/commons/math/exception/MathArithmeticException.class,org/apache/commons/math/exception/MathArithmeticException\$*.class,org/apache/commons/math/exception/MathIllegalArgumentException.class,org/apache/commons/math/exception/MathIllegalArgumentException\$*.class,org/apache/commons/math/exception/MathIllegalNumberException.class,org/apache/commons/math/exception/MathIllegalNumberException\$*.class,org/apache/commons/math/exception/MathRuntimeException.class,org/apache/commons/math/exception/MathRuntimeException\$*.class,org/apache/commons/math/exception/MathThrowable.class,org/apache/commons/math/exception/MathThrowable\$*.class,org/apache/commons/math/exception/NonMonotonousSequenceException.class,org/apache/commons/math/exception/NonMonotonousSequenceException\$*.class,org/apache/commons/math/exception/NotFiniteNumberException.class,org/apache/commons/math/exception/NotFiniteNumberException\$*.class,org/apache/commons/math/exception/NotPositiveException.class,org/apache/commons/math/exception/NotPositiveException\$*.class,org/apache/commons/math/exception/NotStrictlyPositiveException.class,org/apache/commons/math/exception/NotStrictlyPositiveException\$*.class,org/apache/commons/math/exception/NullArgumentException.class,org/apache/commons/math/exception/NullArgumentException\$*.class,org/apache/commons/math/exception/NumberIsTooLargeException.class,org/apache/commons/math/exception/NumberIsTooLargeException\$*.class,org/apache/commons/math/exception/NumberIsTooSmallException.class,org/apache/commons/math/exception/NumberIsTooSmallException\$*.class,org/apache/commons/math/exception/OutOfRangeException.class,org/apache/commons/math/exception/OutOfRangeException\$*.class,org/apache/commons/math/exception/util/Localizable.class,org/apache/commons/math/exception/util/Localizable\$*.class,org/apache/commons/math/linear/AbstractFieldMatrix.class,org/apache/commons/math/linear/AbstractFieldMatrix\$*.class,org/apache/commons/math/linear/AbstractRealMatrix.class,org/apache/commons/math/linear/AbstractRealMatrix\$*.class,org/apache/commons/math/linear/AnyMatrix.class,org/apache/commons/math/linear/AnyMatrix\$*.class,org/apache/commons/math/linear/Array2DRowFieldMatrix.class,org/apache/commons/math/linear/Array2DRowFieldMatrix\$*.class,org/apache/commons/math/linear/Array2DRowRealMatrix.class,org/apache/commons/math/linear/Array2DRowRealMatrix\$*.class,org/apache/commons/math/linear/BigMatrix.class,org/apache/commons/math/linear/BigMatrix\$*.class,org/apache/commons/math/linear/BlockFieldMatrix.class,org/apache/commons/math/linear/BlockFieldMatrix\$*.class,org/apache/commons/math/linear/BlockRealMatrix.class,org/apache/commons/math/linear/BlockRealMatrix\$*.class,org/apache/commons/math/linear/DecompositionSolver.class,org/apache/commons/math/linear/DecompositionSolver\$*.class,org/apache/commons/math/linear/FieldMatrix.class,org/apache/commons/math/linear/FieldMatrix\$*.class,org/apache/commons/math/linear/FieldMatrixPreservingVisitor.class,org/apache/commons/math/linear/FieldMatrixPreservingVisitor\$*.class,org/apache/commons/math/linear/FieldVector.class,org/apache/commons/math/linear/FieldVector\$*.class,org/apache/commons/math/linear/InvalidMatrixException.class,org/apache/commons/math/linear/InvalidMatrixException\$*.class,org/apache/commons/math/linear/LUDecomposition.class,org/apache/commons/math/linear/LUDecomposition\$*.class,org/apache/commons/math/linear/LUDecompositionImpl.class,org/apache/commons/math/linear/LUDecompositionImpl\$*.class,org/apache/commons/math/linear/MatrixIndexException.class,org/apache/commons/math/linear/MatrixIndexException\$*.class,org/apache/commons/math/linear/MatrixUtils.class,org/apache/commons/math/linear/MatrixUtils\$*.class,org/apache/commons/math/linear/NonSquareMatrixException.class,org/apache/commons/math/linear/NonSquareMatrixException\$*.class,org/apache/commons/math/linear/RealMatrix.class,org/apache/commons/math/linear/RealMatrix\$*.class,org/apache/commons/math/linear/RealMatrixChangingVisitor.class,org/apache/commons/math/linear/RealMatrixChangingVisitor\$*.class,org/apache/commons/math/linear/RealMatrixPreservingVisitor.class,org/apache/commons/math/linear/RealMatrixPreservingVisitor\$*.class,org/apache/commons/math/linear/RealVector.class,org/apache/commons/math/linear/RealVector\$*.class,org/apache/commons/math/linear/SingularMatrixException.class,org/apache/commons/math/linear/SingularMatrixException\$*.class,org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.class,org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer\$*.class,org/apache/commons/math/optimization/OptimizationException.class,org/apache/commons/math/optimization/OptimizationException\$*.class,org/apache/commons/math/optimization/SimpleVectorialValueChecker.class,org/apache/commons/math/optimization/SimpleVectorialValueChecker\$*.class,org/apache/commons/math/optimization/VectorialConvergenceChecker.class,org/apache/commons/math/optimization/VectorialConvergenceChecker\$*.class,org/apache/commons/math/optimization/VectorialPointValuePair.class,org/apache/commons/math/optimization/VectorialPointValuePair\$*.class,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.class,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer\$*.class,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.class,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer\$*.class,org/apache/commons/math/util/FastMath.class,org/apache/commons/math/util/FastMath\$*.class,org/apache/commons/math/util/MathUtils.class,org/apache/commons/math/util/MathUtils\$*.class,org/apache/commons/math/util/MultidimensionalCounter.class,org/apache/commons/math/util/MultidimensionalCounter\$*.class
 d4j.classes.modified=org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer
 d4j.classes.relevant=org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction,org.apache.commons.math.analysis.MultivariateMatrixFunction,org.apache.commons.math.analysis.MultivariateVectorialFunction,org.apache.commons.math.ConvergenceException,org.apache.commons.math.exception.Localizable,org.apache.commons.math.FunctionEvaluationException,org.apache.commons.math.linear.AbstractFieldMatrix,org.apache.commons.math.linear.AbstractRealMatrix,org.apache.commons.math.linear.AnyMatrix,org.apache.commons.math.linear.Array2DRowFieldMatrix,org.apache.commons.math.linear.Array2DRowRealMatrix,org.apache.commons.math.linear.BigMatrix,org.apache.commons.math.linear.BlockFieldMatrix,org.apache.commons.math.linear.BlockRealMatrix,org.apache.commons.math.linear.DecompositionSolver,org.apache.commons.math.linear.FieldMatrix,org.apache.commons.math.linear.FieldMatrixPreservingVisitor,org.apache.commons.math.linear.FieldVector,org.apache.commons.math.linear.InvalidMatrixException,org.apache.commons.math.linear.LUDecomposition,org.apache.commons.math.linear.LUDecompositionImpl,org.apache.commons.math.linear.MatrixIndexException,org.apache.commons.math.linear.MatrixUtils,org.apache.commons.math.linear.NonSquareMatrixException,org.apache.commons.math.linear.RealMatrix,org.apache.commons.math.linear.RealMatrixChangingVisitor,org.apache.commons.math.linear.RealMatrixPreservingVisitor,org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.SingularMatrixException,org.apache.commons.math.MathException,org.apache.commons.math.MathRuntimeException,org.apache.commons.math.MaxEvaluationsExceededException,org.apache.commons.math.MaxIterationsExceededException,org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer,org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer,org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer,org.apache.commons.math.optimization.OptimizationException,org.apache.commons.math.optimization.SimpleVectorialValueChecker,org.apache.commons.math.optimization.VectorialConvergenceChecker,org.apache.commons.math.optimization.VectorialPointValuePair
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/math/util/MultidimensionalCounterTest.java b/src/test/java/org/apache/commons/math/util/MultidimensionalCounterTest.java
index 827030d..a3110b9 100644
--- a/src/test/java/org/apache/commons/math/util/MultidimensionalCounterTest.java
+++ b/src/test/java/org/apache/commons/math/util/MultidimensionalCounterTest.java
@@ -121,20 +121,32 @@ public class MultidimensionalCounterTest {
 
     @Test
     public void testIterationConsistency() {
-        final MultidimensionalCounter c = new MultidimensionalCounter(2, 3, 2);
+        final MultidimensionalCounter c = new MultidimensionalCounter(2, 3, 4);
         final int[][] expected = new int[][] {
             { 0, 0, 0 },
             { 0, 0, 1 },
+            { 0, 0, 2 },
+            { 0, 0, 3 },
             { 0, 1, 0 },
             { 0, 1, 1 },
+            { 0, 1, 2 },
+            { 0, 1, 3 },
             { 0, 2, 0 },
             { 0, 2, 1 },
+            { 0, 2, 2 },
+            { 0, 2, 3 },
             { 1, 0, 0 },
             { 1, 0, 1 },
+            { 1, 0, 2 },
+            { 1, 0, 3 },
             { 1, 1, 0 },
             { 1, 1, 1 },
+            { 1, 1, 2 },
+            { 1, 1, 3 },
             { 1, 2, 0 },
-            { 1, 2, 1 }
+            { 1, 2, 1 },
+            { 1, 2, 2 },
+            { 1, 2, 3 }
         };
 
         final int totalSize = c.getSize();
