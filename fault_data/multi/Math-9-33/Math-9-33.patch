diff --git a/defects4j.build.properties b/defects4j.build.properties
index 8a3e32f..b7b84f9 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=33
+d4j.classes.instrument=org/apache/commons/math3/analysis/BivariateFunction.class,org/apache/commons/math3/analysis/BivariateFunction\$*.class,org/apache/commons/math3/exception/DimensionMismatchException.class,org/apache/commons/math3/exception/DimensionMismatchException\$*.class,org/apache/commons/math3/exception/MathArithmeticException.class,org/apache/commons/math3/exception/MathArithmeticException\$*.class,org/apache/commons/math3/exception/MathIllegalArgumentException.class,org/apache/commons/math3/exception/MathIllegalArgumentException\$*.class,org/apache/commons/math3/exception/MathIllegalNumberException.class,org/apache/commons/math3/exception/MathIllegalNumberException\$*.class,org/apache/commons/math3/exception/MathIllegalStateException.class,org/apache/commons/math3/exception/MathIllegalStateException\$*.class,org/apache/commons/math3/exception/MathInternalError.class,org/apache/commons/math3/exception/MathInternalError\$*.class,org/apache/commons/math3/exception/MathParseException.class,org/apache/commons/math3/exception/MathParseException\$*.class,org/apache/commons/math3/exception/MaxCountExceededException.class,org/apache/commons/math3/exception/MaxCountExceededException\$*.class,org/apache/commons/math3/exception/MultiDimensionMismatchException.class,org/apache/commons/math3/exception/MultiDimensionMismatchException\$*.class,org/apache/commons/math3/exception/NoDataException.class,org/apache/commons/math3/exception/NoDataException\$*.class,org/apache/commons/math3/exception/NonMonotonicSequenceException.class,org/apache/commons/math3/exception/NonMonotonicSequenceException\$*.class,org/apache/commons/math3/exception/NotFiniteNumberException.class,org/apache/commons/math3/exception/NotFiniteNumberException\$*.class,org/apache/commons/math3/exception/NotPositiveException.class,org/apache/commons/math3/exception/NotPositiveException\$*.class,org/apache/commons/math3/exception/NotStrictlyPositiveException.class,org/apache/commons/math3/exception/NotStrictlyPositiveException\$*.class,org/apache/commons/math3/exception/NullArgumentException.class,org/apache/commons/math3/exception/NullArgumentException\$*.class,org/apache/commons/math3/exception/NumberIsTooLargeException.class,org/apache/commons/math3/exception/NumberIsTooLargeException\$*.class,org/apache/commons/math3/exception/NumberIsTooSmallException.class,org/apache/commons/math3/exception/NumberIsTooSmallException\$*.class,org/apache/commons/math3/exception/OutOfRangeException.class,org/apache/commons/math3/exception/OutOfRangeException\$*.class,org/apache/commons/math3/exception/ZeroException.class,org/apache/commons/math3/exception/ZeroException\$*.class,org/apache/commons/math3/exception/util/ExceptionContextProvider.class,org/apache/commons/math3/exception/util/ExceptionContextProvider\$*.class,org/apache/commons/math3/exception/util/Localizable.class,org/apache/commons/math3/exception/util/Localizable\$*.class,org/apache/commons/math3/geometry/Space.class,org/apache/commons/math3/geometry/Space\$*.class,org/apache/commons/math3/geometry/Vector.class,org/apache/commons/math3/geometry/Vector\$*.class,org/apache/commons/math3/geometry/euclidean/threed/Line.class,org/apache/commons/math3/geometry/euclidean/threed/Line\$*.class,org/apache/commons/math3/geometry/euclidean/threed/Vector3D.class,org/apache/commons/math3/geometry/euclidean/threed/Vector3D\$*.class,org/apache/commons/math3/geometry/partitioning/Embedding.class,org/apache/commons/math3/geometry/partitioning/Embedding\$*.class,org/apache/commons/math3/linear/AbstractFieldMatrix.class,org/apache/commons/math3/linear/AbstractFieldMatrix\$*.class,org/apache/commons/math3/linear/AbstractRealMatrix.class,org/apache/commons/math3/linear/AbstractRealMatrix\$*.class,org/apache/commons/math3/linear/AnyMatrix.class,org/apache/commons/math3/linear/AnyMatrix\$*.class,org/apache/commons/math3/linear/Array2DRowFieldMatrix.class,org/apache/commons/math3/linear/Array2DRowFieldMatrix\$*.class,org/apache/commons/math3/linear/Array2DRowRealMatrix.class,org/apache/commons/math3/linear/Array2DRowRealMatrix\$*.class,org/apache/commons/math3/linear/ArrayRealVector.class,org/apache/commons/math3/linear/ArrayRealVector\$*.class,org/apache/commons/math3/linear/BlockFieldMatrix.class,org/apache/commons/math3/linear/BlockFieldMatrix\$*.class,org/apache/commons/math3/linear/BlockRealMatrix.class,org/apache/commons/math3/linear/BlockRealMatrix\$*.class,org/apache/commons/math3/linear/FieldMatrix.class,org/apache/commons/math3/linear/FieldMatrix\$*.class,org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.class,org/apache/commons/math3/linear/FieldMatrixPreservingVisitor\$*.class,org/apache/commons/math3/linear/FieldVector.class,org/apache/commons/math3/linear/FieldVector\$*.class,org/apache/commons/math3/linear/MatrixDimensionMismatchException.class,org/apache/commons/math3/linear/MatrixDimensionMismatchException\$*.class,org/apache/commons/math3/linear/MatrixUtils.class,org/apache/commons/math3/linear/MatrixUtils\$*.class,org/apache/commons/math3/linear/NonSquareMatrixException.class,org/apache/commons/math3/linear/NonSquareMatrixException\$*.class,org/apache/commons/math3/linear/OpenMapRealMatrix.class,org/apache/commons/math3/linear/OpenMapRealMatrix\$*.class,org/apache/commons/math3/linear/RealLinearOperator.class,org/apache/commons/math3/linear/RealLinearOperator\$*.class,org/apache/commons/math3/linear/RealMatrix.class,org/apache/commons/math3/linear/RealMatrix\$*.class,org/apache/commons/math3/linear/RealMatrixChangingVisitor.class,org/apache/commons/math3/linear/RealMatrixChangingVisitor\$*.class,org/apache/commons/math3/linear/RealMatrixPreservingVisitor.class,org/apache/commons/math3/linear/RealMatrixPreservingVisitor\$*.class,org/apache/commons/math3/linear/RealVector.class,org/apache/commons/math3/linear/RealVector\$*.class,org/apache/commons/math3/linear/RealVectorFormat.class,org/apache/commons/math3/linear/RealVectorFormat\$*.class,org/apache/commons/math3/linear/SparseRealMatrix.class,org/apache/commons/math3/linear/SparseRealMatrix\$*.class,org/apache/commons/math3/optimization/GoalType.class,org/apache/commons/math3/optimization/GoalType\$*.class,org/apache/commons/math3/optimization/PointValuePair.class,org/apache/commons/math3/optimization/PointValuePair\$*.class,org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.class,org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer\$*.class,org/apache/commons/math3/optimization/linear/LinearConstraint.class,org/apache/commons/math3/optimization/linear/LinearConstraint\$*.class,org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.class,org/apache/commons/math3/optimization/linear/LinearObjectiveFunction\$*.class,org/apache/commons/math3/optimization/linear/LinearOptimizer.class,org/apache/commons/math3/optimization/linear/LinearOptimizer\$*.class,org/apache/commons/math3/optimization/linear/NoFeasibleSolutionException.class,org/apache/commons/math3/optimization/linear/NoFeasibleSolutionException\$*.class,org/apache/commons/math3/optimization/linear/Relationship.class,org/apache/commons/math3/optimization/linear/Relationship\$*.class,org/apache/commons/math3/optimization/linear/SimplexSolver.class,org/apache/commons/math3/optimization/linear/SimplexSolver\$*.class,org/apache/commons/math3/optimization/linear/SimplexTableau.class,org/apache/commons/math3/optimization/linear/SimplexTableau\$*.class,org/apache/commons/math3/optimization/linear/UnboundedSolutionException.class,org/apache/commons/math3/optimization/linear/UnboundedSolutionException\$*.class,org/apache/commons/math3/util/CompositeFormat.class,org/apache/commons/math3/util/CompositeFormat\$*.class,org/apache/commons/math3/util/FastMath.class,org/apache/commons/math3/util/FastMath\$*.class,org/apache/commons/math3/util/MathArrays.class,org/apache/commons/math3/util/MathArrays\$*.class,org/apache/commons/math3/util/MathUtils.class,org/apache/commons/math3/util/MathUtils\$*.class,org/apache/commons/math3/util/Pair.class,org/apache/commons/math3/util/Pair\$*.class,org/apache/commons/math3/util/Precision.class,org/apache/commons/math3/util/Precision\$*.class
 d4j.classes.modified=org.apache.commons.math3.optimization.linear.SimplexTableau
 d4j.classes.relevant=org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.exception.DimensionMismatchException,org.apache.commons.math3.exception.MathArithmeticException,org.apache.commons.math3.exception.MathIllegalArgumentException,org.apache.commons.math3.exception.MathIllegalNumberException,org.apache.commons.math3.exception.MathIllegalStateException,org.apache.commons.math3.exception.MathParseException,org.apache.commons.math3.exception.MaxCountExceededException,org.apache.commons.math3.exception.MultiDimensionMismatchException,org.apache.commons.math3.exception.NoDataException,org.apache.commons.math3.exception.NotFiniteNumberException,org.apache.commons.math3.exception.NotStrictlyPositiveException,org.apache.commons.math3.exception.NullArgumentException,org.apache.commons.math3.exception.NumberIsTooLargeException,org.apache.commons.math3.exception.NumberIsTooSmallException,org.apache.commons.math3.exception.OutOfRangeException,org.apache.commons.math3.exception.util.ExceptionContextProvider,org.apache.commons.math3.exception.util.Localizable,org.apache.commons.math3.exception.ZeroException,org.apache.commons.math3.linear.AbstractFieldMatrix,org.apache.commons.math3.linear.AbstractRealMatrix,org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.Array2DRowFieldMatrix,org.apache.commons.math3.linear.Array2DRowRealMatrix,org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.BlockFieldMatrix,org.apache.commons.math3.linear.BlockRealMatrix,org.apache.commons.math3.linear.FieldMatrix,org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,org.apache.commons.math3.linear.FieldVector,org.apache.commons.math3.linear.MatrixDimensionMismatchException,org.apache.commons.math3.linear.MatrixUtils,org.apache.commons.math3.linear.NonSquareMatrixException,org.apache.commons.math3.linear.OpenMapRealMatrix,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrixChangingVisitor,org.apache.commons.math3.linear.RealMatrixPreservingVisitor,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVectorFormat,org.apache.commons.math3.linear.SparseRealMatrix,org.apache.commons.math3.optimization.GoalType,org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer,org.apache.commons.math3.optimization.linear.LinearConstraint,org.apache.commons.math3.optimization.linear.LinearObjectiveFunction,org.apache.commons.math3.optimization.linear.LinearOptimizer,org.apache.commons.math3.optimization.linear.NoFeasibleSolutionException,org.apache.commons.math3.optimization.linear.Relationship,org.apache.commons.math3.optimization.linear.SimplexSolver,org.apache.commons.math3.optimization.linear.SimplexTableau,org.apache.commons.math3.optimization.linear.UnboundedSolutionException,org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.util.CompositeFormat,org.apache.commons.math3.util.FastMath,org.apache.commons.math3.util.MathUtils,org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Precision
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java b/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java
index de76fe2..f7b991e 100644
--- a/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java
+++ b/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java
@@ -126,5 +126,20 @@ public class LineTest {
                             1.0e-10);
         Assert.assertNull(l.intersection(new Line(new Vector3D(0, -4, 0), new Vector3D(1, -4, 0))));
     }
+    @Test
+    public void testRevert() {
+        
+        // setup
+        Line line = new Line(new Vector3D(1653345.6696423641, 6170370.041579291, 90000),
+                             new Vector3D(1650757.5050732433, 6160710.879908984, 0.9));
+        Vector3D expected = line.getDirection().negate();
+
+        // action
+        Line reverted = line.revert();
+
+        // verify
+        Assert.assertArrayEquals(expected.toArray(), reverted.getDirection().toArray(), 0);
+
+    }
 
 }
