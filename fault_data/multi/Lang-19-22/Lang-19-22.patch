diff --git a/defects4j.build.properties b/defects4j.build.properties
index bd70995..f1d6c34 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=22
+d4j.classes.instrument=org/apache/commons/lang3/math/Fraction.class,org/apache/commons/lang3/math/Fraction\$*.class,org/apache/commons/lang3/text/translate/AggregateTranslator.class,org/apache/commons/lang3/text/translate/AggregateTranslator\$*.class,org/apache/commons/lang3/text/translate/CharSequenceTranslator.class,org/apache/commons/lang3/text/translate/CharSequenceTranslator\$*.class,org/apache/commons/lang3/text/translate/NumericEntityUnescaper.class,org/apache/commons/lang3/text/translate/NumericEntityUnescaper\$*.class
 d4j.classes.modified=org.apache.commons.lang3.math.Fraction
 d4j.classes.relevant=org.apache.commons.lang3.math.Fraction
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java b/src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java
index 269bd6e..118eb6b 100644
--- a/src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java
+++ b/src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java
@@ -33,5 +33,21 @@ public class NumericEntityUnescaperTest extends TestCase {
         String result = neu.translate(input);
         assertEquals("Failed to unescape numeric entities supplementary characters", expected, result);
     }
+    public void testUnfinishedEntity() {
+        NumericEntityUnescaper neu = new NumericEntityUnescaper();
+        String input = "Test &#x30 not test";
+        String expected = "Test \u0030 not test";
+
+        String result = neu.translate(input);
+        assertEquals("Failed to support unfinished entities (i.e. missing semi-colon", expected, result);
+    }
+    public void testOutOfBounds() {
+        NumericEntityUnescaper neu = new NumericEntityUnescaper();
+
+        assertEquals("Failed to ignore when last character is &", "Test &", neu.translate("Test &"));
+        assertEquals("Failed to ignore when last character is &", "Test &#", neu.translate("Test &#"));
+        assertEquals("Failed to ignore when last character is &", "Test &#x", neu.translate("Test &#x"));
+        assertEquals("Failed to ignore when last character is &", "Test &#X", neu.translate("Test &#X"));
+    }
 
 }
