<coverage branch-rate="0.0" branches-covered="0" branches-valid="1371" complexity="3.2920110192837466" line-rate="0.0" lines-covered="0" lines-valid="2803" timestamp="1623819855494" version="2.0.3">
	<sources>
		<source>src/main/java</source>
	</sources>
	<packages>
		<package branch-rate="1.0" complexity="1.0" line-rate="1.0" name="org.apache.commons.math.analysis">
			<classes>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/DifferentiableUnivariateFunction.java" line-rate="1.0" name="org.apache.commons.math.analysis.DifferentiableUnivariateFunction">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/UnivariateFunction.java" line-rate="1.0" name="org.apache.commons.math.analysis.UnivariateFunction">
					<methods>
					</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="2.6315789473684212" line-rate="0.0" name="org.apache.commons.math.analysis.solvers">
			<classes>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/solvers/AbstractUnivariateRealSolver.java" line-rate="0.0" name="org.apache.commons.math.analysis.solvers.AbstractUnivariateRealSolver">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="0.0" filename="org/apache/commons/math/analysis/solvers/AllowedSolution.java" line-rate="0.0" name="org.apache.commons.math.analysis.solvers.AllowedSolution">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0869565217391304" filename="org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java" line-rate="0.0" name="org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java" line-rate="1.0" name="org.apache.commons.math.analysis.solvers.BaseUnivariateRealSolver">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java" line-rate="1.0" name="org.apache.commons.math.analysis.solvers.BracketedUnivariateRealSolver">
					<methods>
					</methods>
					</class>
				<class branch-rate="0.0" complexity="6.555555555555555" filename="org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java" line-rate="0.0" name="org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="6.555555555555555" filename="org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java" line-rate="0.0" name="org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver$1">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="0.0" filename="org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java" line-rate="1.0" name="org.apache.commons.math.analysis.solvers.UnivariateRealSolver">
					<methods>
					</methods>
					</class>
				<class branch-rate="0.0" complexity="4.416666666666667" filename="org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java" line-rate="0.0" name="org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="1.0425531914893618" line-rate="0.0" name="org.apache.commons.math.exception">
			<classes>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/exception/DimensionMismatchException.java" line-rate="0.0" name="org.apache.commons.math.exception.DimensionMismatchException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/exception/MathArithmeticException.java" line-rate="0.0" name="org.apache.commons.math.exception.MathArithmeticException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/exception/MathIllegalArgumentException.java" line-rate="0.0" name="org.apache.commons.math.exception.MathIllegalArgumentException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/exception/MathIllegalNumberException.java" line-rate="0.0" name="org.apache.commons.math.exception.MathIllegalNumberException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/exception/MathIllegalStateException.java" line-rate="0.0" name="org.apache.commons.math.exception.MathIllegalStateException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/exception/MathInternalError.java" line-rate="0.0" name="org.apache.commons.math.exception.MathInternalError">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/exception/MaxCountExceededException.java" line-rate="0.0" name="org.apache.commons.math.exception.MaxCountExceededException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/exception/NoBracketingException.java" line-rate="0.0" name="org.apache.commons.math.exception.NoBracketingException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/exception/NotFiniteNumberException.java" line-rate="0.0" name="org.apache.commons.math.exception.NotFiniteNumberException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/exception/NotStrictlyPositiveException.java" line-rate="0.0" name="org.apache.commons.math.exception.NotStrictlyPositiveException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/exception/NullArgumentException.java" line-rate="0.0" name="org.apache.commons.math.exception.NullArgumentException">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.25" filename="org/apache/commons/math/exception/NumberIsTooLargeException.java" line-rate="0.0" name="org.apache.commons.math.exception.NumberIsTooLargeException">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.25" filename="org/apache/commons/math/exception/NumberIsTooSmallException.java" line-rate="0.0" name="org.apache.commons.math.exception.NumberIsTooSmallException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/exception/TooManyEvaluationsException.java" line-rate="0.0" name="org.apache.commons.math.exception.TooManyEvaluationsException">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="1.0" complexity="1.0" line-rate="1.0" name="org.apache.commons.math.exception.util">
			<classes>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/exception/util/ExceptionContextProvider.java" line-rate="1.0" name="org.apache.commons.math.exception.util.ExceptionContextProvider">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/exception/util/Localizable.java" line-rate="1.0" name="org.apache.commons.math.exception.util.Localizable">
					<methods>
					</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="1.7142857142857142" line-rate="0.0" name="org.apache.commons.math.ode">
			<classes>
				<class branch-rate="0.0" complexity="2.1666666666666665" filename="org/apache/commons/math/ode/AbstractIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.AbstractIntegrator">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="2.1666666666666665" filename="org/apache/commons/math/ode/AbstractIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.AbstractIntegrator$1">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.8" filename="org/apache/commons/math/ode/EquationsMapper.java" line-rate="0.0" name="org.apache.commons.math.ode.EquationsMapper">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.7222222222222223" filename="org/apache/commons/math/ode/ExpandableStatefulODE.java" line-rate="0.0" name="org.apache.commons.math.ode.ExpandableStatefulODE">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.7222222222222223" filename="org/apache/commons/math/ode/ExpandableStatefulODE.java" line-rate="0.0" name="org.apache.commons.math.ode.ExpandableStatefulODE$SecondaryComponent">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/FirstOrderDifferentialEquations.java" line-rate="1.0" name="org.apache.commons.math.ode.FirstOrderDifferentialEquations">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/FirstOrderIntegrator.java" line-rate="1.0" name="org.apache.commons.math.ode.FirstOrderIntegrator">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/ODEIntegrator.java" line-rate="1.0" name="org.apache.commons.math.ode.ODEIntegrator">
					<methods>
					</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="1.0" complexity="1.0" line-rate="0.0" name="org.apache.commons.math.ode.events">
			<classes>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/events/EventHandler.java" line-rate="1.0" name="org.apache.commons.math.ode.events.EventHandler">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/events/EventHandler.java" line-rate="0.0" name="org.apache.commons.math.ode.events.EventHandler$Action">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="3.0697674418604652" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff">
			<classes>
				<class branch-rate="0.0" complexity="3.076923076923077" filename="org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.75" filename="org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="3.7777777777777777" filename="org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="2.727272727272727" filename="org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="3.5" filename="org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="1.4047619047619047" line-rate="0.0" name="org.apache.commons.math.ode.sampling">
			<classes>
				<class branch-rate="0.0" complexity="1.5666666666666667" filename="org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java" line-rate="0.0" name="org.apache.commons.math.ode.sampling.AbstractStepInterpolator">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/sampling/StepHandler.java" line-rate="1.0" name="org.apache.commons.math.ode.sampling.StepHandler">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/sampling/StepInterpolator.java" line-rate="1.0" name="org.apache.commons.math.ode.sampling.StepInterpolator">
					<methods>
					</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="6.745098039215686" line-rate="0.0" name="org.apache.commons.math.util">
			<classes>
				<class branch-rate="0.0" complexity="8.605633802816902" filename="org/apache/commons/math/util/FastMath.java" line-rate="0.0" name="org.apache.commons.math.util.FastMath">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="8.605633802816902" filename="org/apache/commons/math/util/FastMath.java" line-rate="0.0" name="org.apache.commons.math.util.FastMath$ExpFracTable">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="8.605633802816902" filename="org/apache/commons/math/util/FastMath.java" line-rate="0.0" name="org.apache.commons.math.util.FastMath$ExpIntTable">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="8.605633802816902" filename="org/apache/commons/math/util/FastMath.java" line-rate="0.0" name="org.apache.commons.math.util.FastMath$lnMant">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/util/FastMathLiteralArrays.java" line-rate="0.0" name="org.apache.commons.math.util.FastMathLiteralArrays">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.25" filename="org/apache/commons/math/util/Incrementor.java" line-rate="0.0" name="org.apache.commons.math.util.Incrementor">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.25" filename="org/apache/commons/math/util/Incrementor.java" line-rate="0.0" name="org.apache.commons.math.util.Incrementor$1">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.25" filename="org/apache/commons/math/util/Incrementor.java" line-rate="1.0" name="org.apache.commons.math.util.Incrementor$MaxCountExceededCallback">
					<methods>
					</methods>
					</class>
				<class branch-rate="0.0" complexity="4.3076923076923075" filename="org/apache/commons/math/util/MathUtils.java" line-rate="0.0" name="org.apache.commons.math.util.MathUtils">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="0.0" filename="org/apache/commons/math/util/Precision.java" line-rate="0.0" name="org.apache.commons.math.util.Precision">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
	</packages>
</coverage>