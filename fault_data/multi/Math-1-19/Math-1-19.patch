diff --git a/defects4j.build.properties b/defects4j.build.properties
index a166952..a8f5e5f 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=19
+d4j.classes.instrument=org/apache/commons/math3/Field.class,org/apache/commons/math3/Field\$*.class,org/apache/commons/math3/FieldElement.class,org/apache/commons/math3/FieldElement\$*.class,org/apache/commons/math3/analysis/MultivariateFunction.class,org/apache/commons/math3/analysis/MultivariateFunction\$*.class,org/apache/commons/math3/exception/ConvergenceException.class,org/apache/commons/math3/exception/ConvergenceException\$*.class,org/apache/commons/math3/exception/DimensionMismatchException.class,org/apache/commons/math3/exception/DimensionMismatchException\$*.class,org/apache/commons/math3/exception/MathArithmeticException.class,org/apache/commons/math3/exception/MathArithmeticException\$*.class,org/apache/commons/math3/exception/MathIllegalArgumentException.class,org/apache/commons/math3/exception/MathIllegalArgumentException\$*.class,org/apache/commons/math3/exception/MathIllegalNumberException.class,org/apache/commons/math3/exception/MathIllegalNumberException\$*.class,org/apache/commons/math3/exception/MathIllegalStateException.class,org/apache/commons/math3/exception/MathIllegalStateException\$*.class,org/apache/commons/math3/exception/MathUnsupportedOperationException.class,org/apache/commons/math3/exception/MathUnsupportedOperationException\$*.class,org/apache/commons/math3/exception/MaxCountExceededException.class,org/apache/commons/math3/exception/MaxCountExceededException\$*.class,org/apache/commons/math3/exception/NotFiniteNumberException.class,org/apache/commons/math3/exception/NotFiniteNumberException\$*.class,org/apache/commons/math3/exception/NotPositiveException.class,org/apache/commons/math3/exception/NotPositiveException\$*.class,org/apache/commons/math3/exception/NotStrictlyPositiveException.class,org/apache/commons/math3/exception/NotStrictlyPositiveException\$*.class,org/apache/commons/math3/exception/NullArgumentException.class,org/apache/commons/math3/exception/NullArgumentException\$*.class,org/apache/commons/math3/exception/NumberIsTooLargeException.class,org/apache/commons/math3/exception/NumberIsTooLargeException\$*.class,org/apache/commons/math3/exception/NumberIsTooSmallException.class,org/apache/commons/math3/exception/NumberIsTooSmallException\$*.class,org/apache/commons/math3/exception/OutOfRangeException.class,org/apache/commons/math3/exception/OutOfRangeException\$*.class,org/apache/commons/math3/exception/TooManyEvaluationsException.class,org/apache/commons/math3/exception/TooManyEvaluationsException\$*.class,org/apache/commons/math3/exception/ZeroException.class,org/apache/commons/math3/exception/ZeroException\$*.class,org/apache/commons/math3/exception/util/ArgUtils.class,org/apache/commons/math3/exception/util/ArgUtils\$*.class,org/apache/commons/math3/exception/util/ExceptionContext.class,org/apache/commons/math3/exception/util/ExceptionContext\$*.class,org/apache/commons/math3/exception/util/ExceptionContextProvider.class,org/apache/commons/math3/exception/util/ExceptionContextProvider\$*.class,org/apache/commons/math3/exception/util/Localizable.class,org/apache/commons/math3/exception/util/Localizable\$*.class,org/apache/commons/math3/exception/util/LocalizedFormats.class,org/apache/commons/math3/exception/util/LocalizedFormats\$*.class,org/apache/commons/math3/fraction/BigFraction.class,org/apache/commons/math3/fraction/BigFraction\$*.class,org/apache/commons/math3/fraction/Fraction.class,org/apache/commons/math3/fraction/Fraction\$*.class,org/apache/commons/math3/fraction/FractionConversionException.class,org/apache/commons/math3/fraction/FractionConversionException\$*.class,org/apache/commons/math3/linear/AnyMatrix.class,org/apache/commons/math3/linear/AnyMatrix\$*.class,org/apache/commons/math3/linear/RealMatrix.class,org/apache/commons/math3/linear/RealMatrix\$*.class,org/apache/commons/math3/optimization/AbstractConvergenceChecker.class,org/apache/commons/math3/optimization/AbstractConvergenceChecker\$*.class,org/apache/commons/math3/optimization/BaseMultivariateOptimizer.class,org/apache/commons/math3/optimization/BaseMultivariateOptimizer\$*.class,org/apache/commons/math3/optimization/BaseMultivariateSimpleBoundsOptimizer.class,org/apache/commons/math3/optimization/BaseMultivariateSimpleBoundsOptimizer\$*.class,org/apache/commons/math3/optimization/BaseOptimizer.class,org/apache/commons/math3/optimization/BaseOptimizer\$*.class,org/apache/commons/math3/optimization/ConvergenceChecker.class,org/apache/commons/math3/optimization/ConvergenceChecker\$*.class,org/apache/commons/math3/optimization/GoalType.class,org/apache/commons/math3/optimization/GoalType\$*.class,org/apache/commons/math3/optimization/MultivariateOptimizer.class,org/apache/commons/math3/optimization/MultivariateOptimizer\$*.class,org/apache/commons/math3/optimization/PointValuePair.class,org/apache/commons/math3/optimization/PointValuePair\$*.class,org/apache/commons/math3/optimization/SimpleValueChecker.class,org/apache/commons/math3/optimization/SimpleValueChecker\$*.class,org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.class,org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer\$*.class,org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.class,org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer\$*.class,org/apache/commons/math3/optimization/direct/CMAESOptimizer.class,org/apache/commons/math3/optimization/direct/CMAESOptimizer\$*.class,org/apache/commons/math3/random/BitsStreamGenerator.class,org/apache/commons/math3/random/BitsStreamGenerator\$*.class,org/apache/commons/math3/random/MersenneTwister.class,org/apache/commons/math3/random/MersenneTwister\$*.class,org/apache/commons/math3/random/RandomGenerator.class,org/apache/commons/math3/random/RandomGenerator\$*.class,org/apache/commons/math3/util/ArithmeticUtils.class,org/apache/commons/math3/util/ArithmeticUtils\$*.class,org/apache/commons/math3/util/FastMath.class,org/apache/commons/math3/util/FastMath\$*.class,org/apache/commons/math3/util/Incrementor.class,org/apache/commons/math3/util/Incrementor\$*.class,org/apache/commons/math3/util/MathUtils.class,org/apache/commons/math3/util/MathUtils\$*.class,org/apache/commons/math3/util/Pair.class,org/apache/commons/math3/util/Pair\$*.class,org/apache/commons/math3/util/Precision.class,org/apache/commons/math3/util/Precision\$*.class
 d4j.classes.modified=org.apache.commons.math3.optimization.direct.CMAESOptimizer
 d4j.classes.relevant=org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.exception.DimensionMismatchException,org.apache.commons.math3.exception.MathArithmeticException,org.apache.commons.math3.exception.MathIllegalArgumentException,org.apache.commons.math3.exception.MathIllegalNumberException,org.apache.commons.math3.exception.MathIllegalStateException,org.apache.commons.math3.exception.MathUnsupportedOperationException,org.apache.commons.math3.exception.MaxCountExceededException,org.apache.commons.math3.exception.NotPositiveException,org.apache.commons.math3.exception.NotStrictlyPositiveException,org.apache.commons.math3.exception.NullArgumentException,org.apache.commons.math3.exception.NumberIsTooLargeException,org.apache.commons.math3.exception.NumberIsTooSmallException,org.apache.commons.math3.exception.OutOfRangeException,org.apache.commons.math3.exception.TooManyEvaluationsException,org.apache.commons.math3.exception.util.ArgUtils,org.apache.commons.math3.exception.util.ExceptionContext,org.apache.commons.math3.exception.util.ExceptionContextProvider,org.apache.commons.math3.exception.util.Localizable,org.apache.commons.math3.exception.util.LocalizedFormats,org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.optimization.AbstractConvergenceChecker,org.apache.commons.math3.optimization.BaseMultivariateOptimizer,org.apache.commons.math3.optimization.BaseMultivariateSimpleBoundsOptimizer,org.apache.commons.math3.optimization.BaseOptimizer,org.apache.commons.math3.optimization.ConvergenceChecker,org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer,org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer,org.apache.commons.math3.optimization.direct.CMAESOptimizer,org.apache.commons.math3.optimization.GoalType,org.apache.commons.math3.optimization.MultivariateOptimizer,org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.SimpleValueChecker,org.apache.commons.math3.random.BitsStreamGenerator,org.apache.commons.math3.random.MersenneTwister,org.apache.commons.math3.random.RandomGenerator,org.apache.commons.math3.util.FastMath,org.apache.commons.math3.util.Incrementor,org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Precision
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java b/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
index 7b06ded..71efb97 100644
--- a/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
+++ b/src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java
@@ -154,6 +154,9 @@ public class BigFractionTest {
         assertFraction(8, 13, new BigFraction(0.6152, 99));
         assertFraction(510, 829, new BigFraction(0.6152, 999));
         assertFraction(769, 1250, new BigFraction(0.6152, 9999));
+        
+        // MATH-996
+        assertFraction(1, 2, new BigFraction(0.5000000001, 10));
     }
 
     @Test
diff --git a/src/test/java/org/apache/commons/math3/fraction/FractionTest.java b/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
index 37e22d1..806b776 100644
--- a/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
+++ b/src/test/java/org/apache/commons/math3/fraction/FractionTest.java
@@ -129,6 +129,9 @@ public class FractionTest {
         assertFraction(8, 13,     new Fraction(0.6152,   99));
         assertFraction(510, 829,  new Fraction(0.6152,  999));
         assertFraction(769, 1250, new Fraction(0.6152, 9999));
+
+        // MATH-996
+        assertFraction(1, 2, new Fraction(0.5000000001, 10));
     }
 
     @Test
