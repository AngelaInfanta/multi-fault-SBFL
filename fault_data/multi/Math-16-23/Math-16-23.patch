diff --git a/defects4j.build.properties b/defects4j.build.properties
index 77a33bb..5aa83d5 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=23
+d4j.classes.instrument=org/apache/commons/math3/Field.class,org/apache/commons/math3/Field\$*.class,org/apache/commons/math3/FieldElement.class,org/apache/commons/math3/FieldElement\$*.class,org/apache/commons/math3/analysis/DifferentiableUnivariateFunction.class,org/apache/commons/math3/analysis/DifferentiableUnivariateFunction\$*.class,org/apache/commons/math3/analysis/FunctionUtils.class,org/apache/commons/math3/analysis/FunctionUtils\$*.class,org/apache/commons/math3/analysis/MultivariateFunction.class,org/apache/commons/math3/analysis/MultivariateFunction\$*.class,org/apache/commons/math3/analysis/UnivariateFunction.class,org/apache/commons/math3/analysis/UnivariateFunction\$*.class,org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiable.class,org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiable\$*.class,org/apache/commons/math3/analysis/function/Sin.class,org/apache/commons/math3/analysis/function/Sin\$*.class,org/apache/commons/math3/analysis/function/StepFunction.class,org/apache/commons/math3/analysis/function/StepFunction\$*.class,org/apache/commons/math3/dfp/Dfp.class,org/apache/commons/math3/dfp/Dfp\$*.class,org/apache/commons/math3/dfp/DfpField.class,org/apache/commons/math3/dfp/DfpField\$*.class,org/apache/commons/math3/exception/DimensionMismatchException.class,org/apache/commons/math3/exception/DimensionMismatchException\$*.class,org/apache/commons/math3/exception/MathArithmeticException.class,org/apache/commons/math3/exception/MathArithmeticException\$*.class,org/apache/commons/math3/exception/MathIllegalArgumentException.class,org/apache/commons/math3/exception/MathIllegalArgumentException\$*.class,org/apache/commons/math3/exception/MathIllegalNumberException.class,org/apache/commons/math3/exception/MathIllegalNumberException\$*.class,org/apache/commons/math3/exception/MathIllegalStateException.class,org/apache/commons/math3/exception/MathIllegalStateException\$*.class,org/apache/commons/math3/exception/MathInternalError.class,org/apache/commons/math3/exception/MathInternalError\$*.class,org/apache/commons/math3/exception/MaxCountExceededException.class,org/apache/commons/math3/exception/MaxCountExceededException\$*.class,org/apache/commons/math3/exception/NoDataException.class,org/apache/commons/math3/exception/NoDataException\$*.class,org/apache/commons/math3/exception/NonMonotonicSequenceException.class,org/apache/commons/math3/exception/NonMonotonicSequenceException\$*.class,org/apache/commons/math3/exception/NotStrictlyPositiveException.class,org/apache/commons/math3/exception/NotStrictlyPositiveException\$*.class,org/apache/commons/math3/exception/NullArgumentException.class,org/apache/commons/math3/exception/NullArgumentException\$*.class,org/apache/commons/math3/exception/NumberIsTooLargeException.class,org/apache/commons/math3/exception/NumberIsTooLargeException\$*.class,org/apache/commons/math3/exception/NumberIsTooSmallException.class,org/apache/commons/math3/exception/NumberIsTooSmallException\$*.class,org/apache/commons/math3/exception/TooManyEvaluationsException.class,org/apache/commons/math3/exception/TooManyEvaluationsException\$*.class,org/apache/commons/math3/exception/util/ExceptionContextProvider.class,org/apache/commons/math3/exception/util/ExceptionContextProvider\$*.class,org/apache/commons/math3/exception/util/Localizable.class,org/apache/commons/math3/exception/util/Localizable\$*.class,org/apache/commons/math3/optimization/BaseOptimizer.class,org/apache/commons/math3/optimization/BaseOptimizer\$*.class,org/apache/commons/math3/optimization/ConvergenceChecker.class,org/apache/commons/math3/optimization/ConvergenceChecker\$*.class,org/apache/commons/math3/optimization/GoalType.class,org/apache/commons/math3/optimization/GoalType\$*.class,org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer.class,org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer\$*.class,org/apache/commons/math3/optimization/univariate/BaseUnivariateOptimizer.class,org/apache/commons/math3/optimization/univariate/BaseUnivariateOptimizer\$*.class,org/apache/commons/math3/optimization/univariate/BrentOptimizer.class,org/apache/commons/math3/optimization/univariate/BrentOptimizer\$*.class,org/apache/commons/math3/optimization/univariate/UnivariateOptimizer.class,org/apache/commons/math3/optimization/univariate/UnivariateOptimizer\$*.class,org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair.class,org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair\$*.class,org/apache/commons/math3/random/BitsStreamGenerator.class,org/apache/commons/math3/random/BitsStreamGenerator\$*.class,org/apache/commons/math3/random/MersenneTwister.class,org/apache/commons/math3/random/MersenneTwister\$*.class,org/apache/commons/math3/random/RandomGenerator.class,org/apache/commons/math3/random/RandomGenerator\$*.class,org/apache/commons/math3/util/FastMath.class,org/apache/commons/math3/util/FastMath\$*.class,org/apache/commons/math3/util/FastMathLiteralArrays.class,org/apache/commons/math3/util/FastMathLiteralArrays\$*.class,org/apache/commons/math3/util/Incrementor.class,org/apache/commons/math3/util/Incrementor\$*.class,org/apache/commons/math3/util/MathArrays.class,org/apache/commons/math3/util/MathArrays\$*.class,org/apache/commons/math3/util/Precision.class,org/apache/commons/math3/util/Precision\$*.class
 d4j.classes.modified=org.apache.commons.math3.optimization.univariate.BrentOptimizer
 d4j.classes.relevant=org.apache.commons.math3.analysis.DifferentiableUnivariateFunction,org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable,org.apache.commons.math3.analysis.function.Sin,org.apache.commons.math3.analysis.function.StepFunction,org.apache.commons.math3.analysis.FunctionUtils,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.exception.DimensionMismatchException,org.apache.commons.math3.exception.MathArithmeticException,org.apache.commons.math3.exception.MathIllegalArgumentException,org.apache.commons.math3.exception.MathIllegalNumberException,org.apache.commons.math3.exception.MathIllegalStateException,org.apache.commons.math3.exception.MathInternalError,org.apache.commons.math3.exception.MaxCountExceededException,org.apache.commons.math3.exception.NoDataException,org.apache.commons.math3.exception.NonMonotonicSequenceException,org.apache.commons.math3.exception.NotStrictlyPositiveException,org.apache.commons.math3.exception.NullArgumentException,org.apache.commons.math3.exception.NumberIsTooLargeException,org.apache.commons.math3.exception.NumberIsTooSmallException,org.apache.commons.math3.exception.TooManyEvaluationsException,org.apache.commons.math3.exception.util.ExceptionContextProvider,org.apache.commons.math3.exception.util.Localizable,org.apache.commons.math3.optimization.BaseOptimizer,org.apache.commons.math3.optimization.ConvergenceChecker,org.apache.commons.math3.optimization.GoalType,org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer,org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer,org.apache.commons.math3.optimization.univariate.BrentOptimizer,org.apache.commons.math3.optimization.univariate.UnivariateOptimizer,org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,org.apache.commons.math3.util.FastMath,org.apache.commons.math3.util.Incrementor,org.apache.commons.math3.util.MathArrays,org.apache.commons.math3.util.Precision
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/math3/util/FastMathTest.java b/src/test/java/org/apache/commons/math3/util/FastMathTest.java
index fe15611..86e6cd1 100644
--- a/src/test/java/org/apache/commons/math3/util/FastMathTest.java
+++ b/src/test/java/org/apache/commons/math3/util/FastMathTest.java
@@ -1122,5 +1122,47 @@ public class FastMathTest {
             dfpPower = dfpPower.multiply(baseDfp);
         }
     }
+    @Test
+    public void testMath905LargePositive() {
+        final double start = StrictMath.log(Double.MAX_VALUE);
+        final double endT = StrictMath.sqrt(2) * StrictMath.sqrt(Double.MAX_VALUE);
+        final double end = 2 * StrictMath.log(endT);
+
+        double maxErr = 0;
+        for (double x = start; x < end; x += 1e-3) {
+            final double tst = FastMath.cosh(x);
+            final double ref = Math.cosh(x);
+            maxErr = FastMath.max(maxErr, FastMath.abs(ref - tst) / FastMath.ulp(ref));            
+        }
+        Assert.assertEquals(0, maxErr, 3);
+
+        for (double x = start; x < end; x += 1e-3) {
+            final double tst = FastMath.sinh(x);
+            final double ref = Math.sinh(x);
+            maxErr = FastMath.max(maxErr, FastMath.abs(ref - tst) / FastMath.ulp(ref));            
+        }
+        Assert.assertEquals(0, maxErr, 3);
+    }
+    @Test
+    public void testMath905LargeNegative() {
+        final double start = -StrictMath.log(Double.MAX_VALUE);
+        final double endT = StrictMath.sqrt(2) * StrictMath.sqrt(Double.MAX_VALUE);
+        final double end = -2 * StrictMath.log(endT);
+
+        double maxErr = 0;
+        for (double x = start; x > end; x -= 1e-3) {
+            final double tst = FastMath.cosh(x);
+            final double ref = Math.cosh(x);
+            maxErr = FastMath.max(maxErr, FastMath.abs(ref - tst) / FastMath.ulp(ref));            
+        }
+        Assert.assertEquals(0, maxErr, 3);
+
+        for (double x = start; x > end; x -= 1e-3) {
+            final double tst = FastMath.sinh(x);
+            final double ref = Math.sinh(x);
+            maxErr = FastMath.max(maxErr, FastMath.abs(ref - tst) / FastMath.ulp(ref));            
+        }
+        Assert.assertEquals(0, maxErr, 3);
+    }
 
 }
