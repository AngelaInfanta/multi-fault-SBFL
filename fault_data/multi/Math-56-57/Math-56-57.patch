diff --git a/defects4j.build.properties b/defects4j.build.properties
index 712410d..5fb788d 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=57
+d4j.classes.instrument=org/apache/commons/math/exception/ConvergenceException.class,org/apache/commons/math/exception/ConvergenceException\$*.class,org/apache/commons/math/exception/DimensionMismatchException.class,org/apache/commons/math/exception/DimensionMismatchException\$*.class,org/apache/commons/math/exception/MathArithmeticException.class,org/apache/commons/math/exception/MathArithmeticException\$*.class,org/apache/commons/math/exception/MathIllegalArgumentException.class,org/apache/commons/math/exception/MathIllegalArgumentException\$*.class,org/apache/commons/math/exception/MathIllegalNumberException.class,org/apache/commons/math/exception/MathIllegalNumberException\$*.class,org/apache/commons/math/exception/MathIllegalStateException.class,org/apache/commons/math/exception/MathIllegalStateException\$*.class,org/apache/commons/math/exception/MathRuntimeException.class,org/apache/commons/math/exception/MathRuntimeException\$*.class,org/apache/commons/math/exception/MathThrowable.class,org/apache/commons/math/exception/MathThrowable\$*.class,org/apache/commons/math/exception/NonMonotonousSequenceException.class,org/apache/commons/math/exception/NonMonotonousSequenceException\$*.class,org/apache/commons/math/exception/NotFiniteNumberException.class,org/apache/commons/math/exception/NotFiniteNumberException\$*.class,org/apache/commons/math/exception/NotPositiveException.class,org/apache/commons/math/exception/NotPositiveException\$*.class,org/apache/commons/math/exception/NotStrictlyPositiveException.class,org/apache/commons/math/exception/NotStrictlyPositiveException\$*.class,org/apache/commons/math/exception/NullArgumentException.class,org/apache/commons/math/exception/NullArgumentException\$*.class,org/apache/commons/math/exception/NumberIsTooLargeException.class,org/apache/commons/math/exception/NumberIsTooLargeException\$*.class,org/apache/commons/math/exception/NumberIsTooSmallException.class,org/apache/commons/math/exception/NumberIsTooSmallException\$*.class,org/apache/commons/math/exception/OutOfRangeException.class,org/apache/commons/math/exception/OutOfRangeException\$*.class,org/apache/commons/math/exception/util/Localizable.class,org/apache/commons/math/exception/util/Localizable\$*.class,org/apache/commons/math/stat/clustering/Cluster.class,org/apache/commons/math/stat/clustering/Cluster\$*.class,org/apache/commons/math/stat/clustering/Clusterable.class,org/apache/commons/math/stat/clustering/Clusterable\$*.class,org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.class,org/apache/commons/math/stat/clustering/EuclideanIntegerPoint\$*.class,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.class,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer\$*.class,org/apache/commons/math/util/FastMath.class,org/apache/commons/math/util/FastMath\$*.class,org/apache/commons/math/util/MathUtils.class,org/apache/commons/math/util/MathUtils\$*.class,org/apache/commons/math/util/MultidimensionalCounter.class,org/apache/commons/math/util/MultidimensionalCounter\$*.class
 d4j.classes.modified=org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer
 d4j.classes.relevant=org.apache.commons.math.exception.ConvergenceException,org.apache.commons.math.exception.DimensionMismatchException,org.apache.commons.math.exception.MathArithmeticException,org.apache.commons.math.exception.MathIllegalArgumentException,org.apache.commons.math.exception.MathIllegalNumberException,org.apache.commons.math.exception.MathIllegalStateException,org.apache.commons.math.exception.MathRuntimeException,org.apache.commons.math.exception.MathThrowable,org.apache.commons.math.exception.NonMonotonousSequenceException,org.apache.commons.math.exception.NotFiniteNumberException,org.apache.commons.math.exception.NotPositiveException,org.apache.commons.math.exception.NullArgumentException,org.apache.commons.math.exception.NumberIsTooLargeException,org.apache.commons.math.exception.NumberIsTooSmallException,org.apache.commons.math.exception.util.Localizable,org.apache.commons.math.stat.clustering.Cluster,org.apache.commons.math.stat.clustering.Clusterable,org.apache.commons.math.stat.clustering.EuclideanIntegerPoint,org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer,org.apache.commons.math.util.FastMath,org.apache.commons.math.util.MathUtils
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/math/util/MultidimensionalCounterTest.java b/src/test/java/org/apache/commons/math/util/MultidimensionalCounterTest.java
index 827030d..a3110b9 100644
--- a/src/test/java/org/apache/commons/math/util/MultidimensionalCounterTest.java
+++ b/src/test/java/org/apache/commons/math/util/MultidimensionalCounterTest.java
@@ -121,20 +121,32 @@ public class MultidimensionalCounterTest {
 
     @Test
     public void testIterationConsistency() {
-        final MultidimensionalCounter c = new MultidimensionalCounter(2, 3, 2);
+        final MultidimensionalCounter c = new MultidimensionalCounter(2, 3, 4);
         final int[][] expected = new int[][] {
             { 0, 0, 0 },
             { 0, 0, 1 },
+            { 0, 0, 2 },
+            { 0, 0, 3 },
             { 0, 1, 0 },
             { 0, 1, 1 },
+            { 0, 1, 2 },
+            { 0, 1, 3 },
             { 0, 2, 0 },
             { 0, 2, 1 },
+            { 0, 2, 2 },
+            { 0, 2, 3 },
             { 1, 0, 0 },
             { 1, 0, 1 },
+            { 1, 0, 2 },
+            { 1, 0, 3 },
             { 1, 1, 0 },
             { 1, 1, 1 },
+            { 1, 1, 2 },
+            { 1, 1, 3 },
             { 1, 2, 0 },
-            { 1, 2, 1 }
+            { 1, 2, 1 },
+            { 1, 2, 2 },
+            { 1, 2, 3 }
         };
 
         final int totalSize = c.getSize();
