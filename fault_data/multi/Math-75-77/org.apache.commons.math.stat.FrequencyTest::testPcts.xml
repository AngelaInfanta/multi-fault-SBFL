<coverage branch-rate="0.008412197686645636" branches-covered="16" branches-valid="1902" complexity="2.141025641025641" line-rate="0.011101801424382069" lines-covered="53" lines-valid="4774" timestamp="1623855245635" version="2.0.3">
	<sources>
		<source>src/main/java</source>
	</sources>
	<packages>
		<package branch-rate="0.0" complexity="1.1846153846153846" line-rate="0.0" name="org.apache.commons.math">
			<classes>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/FunctionEvaluationException.java" line-rate="0.0" name="org.apache.commons.math.FunctionEvaluationException">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.5" filename="org/apache/commons/math/MathException.java" line-rate="0.0" name="org.apache.commons.math.MathException">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$1">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$10">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$2">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$3">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$4">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$5">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$6">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$7">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$8">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$9">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="1.0153846153846153" line-rate="0.0" name="org.apache.commons.math.analysis">
			<classes>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/BinaryFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.BinaryFunction">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/BinaryFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.BinaryFunction$1">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/BinaryFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.BinaryFunction$2">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/BinaryFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.BinaryFunction$3">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/BinaryFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.BinaryFunction$4">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/BinaryFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.BinaryFunction$5">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/BinaryFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.BinaryFunction$6">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/BinaryFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.BinaryFunction$7">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/BinaryFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.BinaryFunction$8">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/BivariateRealFunction.java" line-rate="1.0" name="org.apache.commons.math.analysis.BivariateRealFunction">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$1">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$10">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$11">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$12">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$13">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$14">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$15">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$16">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$17">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$18">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$19">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$2">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$20">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$21">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$22">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$23">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$24">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$25">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$26">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$27">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$28">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$29">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$3">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$30">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$31">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$32">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$33">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$34">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$35">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$36">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$37">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$4">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$5">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$6">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$7">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$8">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0196078431372548" filename="org/apache/commons/math/analysis/ComposableFunction.java" line-rate="0.0" name="org.apache.commons.math.analysis.ComposableFunction$9">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/MultivariateRealFunction.java" line-rate="1.0" name="org.apache.commons.math.analysis.MultivariateRealFunction">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/UnivariateRealFunction.java" line-rate="1.0" name="org.apache.commons.math.analysis.UnivariateRealFunction">
					<methods>
					</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="2.237603305785124" line-rate="0.0" name="org.apache.commons.math.linear">
			<classes>
				<class branch-rate="0.0" complexity="3.041095890410959" filename="org/apache/commons/math/linear/AbstractFieldMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractFieldMatrix">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="3.041095890410959" filename="org/apache/commons/math/linear/AbstractFieldMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractFieldMatrix$1">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="3.041095890410959" filename="org/apache/commons/math/linear/AbstractFieldMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractFieldMatrix$2">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="3.041095890410959" filename="org/apache/commons/math/linear/AbstractFieldMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractFieldMatrix$3">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="2.6486486486486487" filename="org/apache/commons/math/linear/AbstractRealMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractRealMatrix">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="2.6486486486486487" filename="org/apache/commons/math/linear/AbstractRealMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractRealMatrix$1">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="2.6486486486486487" filename="org/apache/commons/math/linear/AbstractRealMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractRealMatrix$2">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="2.6486486486486487" filename="org/apache/commons/math/linear/AbstractRealMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractRealMatrix$3">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="2.6486486486486487" filename="org/apache/commons/math/linear/AbstractRealMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractRealMatrix$4">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="2.6486486486486487" filename="org/apache/commons/math/linear/AbstractRealMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractRealMatrix$5">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="2.3823529411764706" filename="org/apache/commons/math/linear/AbstractRealVector.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractRealVector">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="2.3823529411764706" filename="org/apache/commons/math/linear/AbstractRealVector.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractRealVector$1">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="2.3823529411764706" filename="org/apache/commons/math/linear/AbstractRealVector.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractRealVector$EntryImpl">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="2.3823529411764706" filename="org/apache/commons/math/linear/AbstractRealVector.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractRealVector$SparseEntryIterator">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/AnyMatrix.java" line-rate="1.0" name="org.apache.commons.math.linear.AnyMatrix">
					<methods>
					</methods>
					</class>
				<class branch-rate="0.0" complexity="3.1470588235294117" filename="org/apache/commons/math/linear/Array2DRowFieldMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.Array2DRowFieldMatrix">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="3.1470588235294117" filename="org/apache/commons/math/linear/Array2DRowRealMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.Array2DRowRealMatrix">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="2.1941747572815533" filename="org/apache/commons/math/linear/ArrayRealVector.java" line-rate="0.0" name="org.apache.commons.math.linear.ArrayRealVector">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/BigMatrix.java" line-rate="1.0" name="org.apache.commons.math.linear.BigMatrix">
					<methods>
					</methods>
					</class>
				<class branch-rate="0.0" complexity="4.096153846153846" filename="org/apache/commons/math/linear/BlockFieldMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.BlockFieldMatrix">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="4.111111111111111" filename="org/apache/commons/math/linear/BlockRealMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.BlockRealMatrix">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/FieldMatrix.java" line-rate="1.0" name="org.apache.commons.math.linear.FieldMatrix">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/FieldMatrixPreservingVisitor.java" line-rate="1.0" name="org.apache.commons.math.linear.FieldMatrixPreservingVisitor">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/FieldVector.java" line-rate="1.0" name="org.apache.commons.math.linear.FieldVector">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/InvalidMatrixException.java" line-rate="0.0" name="org.apache.commons.math.linear.InvalidMatrixException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/MatrixIndexException.java" line-rate="0.0" name="org.apache.commons.math.linear.MatrixIndexException">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="2.276595744680851" filename="org/apache/commons/math/linear/MatrixUtils.java" line-rate="0.0" name="org.apache.commons.math.linear.MatrixUtils">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="2.276595744680851" filename="org/apache/commons/math/linear/MatrixUtils.java" line-rate="0.0" name="org.apache.commons.math.linear.MatrixUtils$BigFractionMatrixConverter">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="2.276595744680851" filename="org/apache/commons/math/linear/MatrixUtils.java" line-rate="0.0" name="org.apache.commons.math.linear.MatrixUtils$FractionMatrixConverter">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/NonSquareMatrixException.java" line-rate="0.0" name="org.apache.commons.math.linear.NonSquareMatrixException">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="2.0" filename="org/apache/commons/math/linear/OpenMapRealMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.OpenMapRealMatrix">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="2.3285714285714287" filename="org/apache/commons/math/linear/OpenMapRealVector.java" line-rate="0.0" name="org.apache.commons.math.linear.OpenMapRealVector">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="2.3285714285714287" filename="org/apache/commons/math/linear/OpenMapRealVector.java" line-rate="0.0" name="org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="2.3285714285714287" filename="org/apache/commons/math/linear/OpenMapRealVector.java" line-rate="0.0" name="org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/RealMatrix.java" line-rate="1.0" name="org.apache.commons.math.linear.RealMatrix">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/RealMatrixChangingVisitor.java" line-rate="1.0" name="org.apache.commons.math.linear.RealMatrixChangingVisitor">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/RealMatrixPreservingVisitor.java" line-rate="1.0" name="org.apache.commons.math.linear.RealMatrixPreservingVisitor">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/RealVector.java" line-rate="1.0" name="org.apache.commons.math.linear.RealVector">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/RealVector.java" line-rate="0.0" name="org.apache.commons.math.linear.RealVector$Entry">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="2.0588235294117645" filename="org/apache/commons/math/linear/RealVectorFormat.java" line-rate="0.0" name="org.apache.commons.math.linear.RealVectorFormat">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="0.0" filename="org/apache/commons/math/linear/SparseRealMatrix.java" line-rate="1.0" name="org.apache.commons.math.linear.SparseRealMatrix">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="0.0" filename="org/apache/commons/math/linear/SparseRealVector.java" line-rate="1.0" name="org.apache.commons.math.linear.SparseRealVector">
					<methods>
					</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.3333333333333333" complexity="2.2285714285714286" line-rate="0.40458015267175573" name="org.apache.commons.math.stat">
			<classes>
				<class branch-rate="0.3333333333333333" complexity="2.2285714285714286" filename="org/apache/commons/math/stat/Frequency.java" line-rate="0.3953488372093023" name="org.apache.commons.math.stat.Frequency">
					<methods>
						<method branch-rate="1.0" line-rate="1.0" name="&lt;init&gt;" signature="()V">
							<lines>
								<line branch="false" hits="1" number="59" />
								<line branch="false" hits="1" number="60" />
								<line branch="false" hits="1" number="61" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="addValue" signature="(I)V">
							<lines>
								<line branch="false" hits="4" number="158" />
								<line branch="false" hits="4" number="159" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="addValue" signature="(J)V">
							<lines>
								<line branch="false" hits="4" number="176" />
								<line branch="false" hits="4" number="177" />
							</lines>
						</method>
						<method branch-rate="0.75" line-rate="0.7272727272727273" name="addValue" signature="(Ljava/lang/Comparable;)V">
							<lines>
								<line branch="false" hits="8" number="133" />
								<line branch="true" condition-coverage="50% (1/2)" hits="8" number="134">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="8" number="138" />
								<line branch="true" condition-coverage="100% (2/2)" hits="8" number="139">
									<conditions>
										<condition coverage="100%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="3" number="140" />
								<line branch="false" hits="5" number="142" />
								<line branch="false" hits="8" number="149" />
								<line branch="false" hits="8" number="150" />
							</lines>
						</method>
						<method branch-rate="0.5" line-rate="0.7777777777777778" name="getCount" signature="(Ljava/lang/Comparable;)J">
							<lines>
								<line branch="true" condition-coverage="50% (1/2)" hits="3" number="243">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="3" number="246" />
								<line branch="false" hits="3" number="248" />
								<line branch="true" condition-coverage="50% (1/2)" hits="3" number="249">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="3" number="250" />
								<line branch="false" hits="3" number="254" />
								<line branch="false" hits="3" number="255" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="getCumFreq" signature="(J)J">
							<lines>
								<line branch="false" hits="1" number="443" />
							</lines>
						</method>
						<method branch-rate="0.4375" line-rate="0.5384615384615384" name="getCumFreq" signature="(Ljava/lang/Comparable;)J">
							<lines>
								<line branch="true" condition-coverage="50% (1/2)" hits="2" number="381">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="true" condition-coverage="100% (2/2)" hits="2" number="384">
									<conditions>
										<condition coverage="100%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="385" />
								<line branch="false" hits="1" number="387" />
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="388">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="389" />
								<line branch="false" hits="1" number="391" />
								<line branch="false" hits="1" number="394" />
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="395">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="396" />
								<line branch="false" hits="1" number="400" />
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="402">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="406">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="407" />
								</lines>
						</method>
						<method branch-rate="0.5" line-rate="0.75" name="getCumPct" signature="(Ljava/lang/Comparable;)D">
							<lines>
								<line branch="false" hits="1" number="490" />
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="491">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="494" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="getPct" signature="(I)D">
							<lines>
								<line branch="false" hits="1" number="330" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="getPct" signature="(J)D">
							<lines>
								<line branch="false" hits="1" number="341" />
							</lines>
						</method>
						<method branch-rate="0.5" line-rate="0.75" name="getPct" signature="(Ljava/lang/Comparable;)D">
							<lines>
								<line branch="false" hits="3" number="315" />
								<line branch="true" condition-coverage="50% (1/2)" hits="3" number="316">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="3" number="319" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="getPct" signature="(Ljava/lang/Object;)D">
							<lines>
								<line branch="false" hits="1" number="302" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="getSumFreq" signature="()J">
							<lines>
								<line branch="false" hits="7" number="214" />
								<line branch="false" hits="7" number="215" />
								<line branch="true" condition-coverage="100% (2/2)" hits="28" number="216">
									<conditions>
										<condition coverage="100%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="21" number="217" />
								<line branch="false" hits="7" number="219" />
							</lines>
						</method>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="2.2285714285714286" filename="org/apache/commons/math/stat/Frequency.java" line-rate="1.0" name="org.apache.commons.math.stat.Frequency$1">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="2.2285714285714286" filename="org/apache/commons/math/stat/Frequency.java" line-rate="1.0" name="org.apache.commons.math.stat.Frequency$NaturalComparator">
					<methods>
						<method branch-rate="1.0" line-rate="1.0" name="&lt;init&gt;" signature="(Lorg/apache/commons/math/stat/Frequency$1;)V">
							<lines>
								<line branch="false" hits="4" number="540" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="compare" signature="(Ljava/lang/Comparable;Ljava/lang/Comparable;)I">
							<lines>
								<line branch="false" hits="2" number="560" />
							</lines>
						</method>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="3.189189189189189" line-rate="0.0" name="org.apache.commons.math.util">
			<classes>
				<class branch-rate="0.0" complexity="2.875" filename="org/apache/commons/math/util/CompositeFormat.java" line-rate="0.0" name="org.apache.commons.math.util.CompositeFormat">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="3.2758620689655173" filename="org/apache/commons/math/util/OpenIntToDoubleHashMap.java" line-rate="0.0" name="org.apache.commons.math.util.OpenIntToDoubleHashMap">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="3.2758620689655173" filename="org/apache/commons/math/util/OpenIntToDoubleHashMap.java" line-rate="1.0" name="org.apache.commons.math.util.OpenIntToDoubleHashMap$1">
					<methods>
					</methods>
					</class>
				<class branch-rate="0.0" complexity="3.2758620689655173" filename="org/apache/commons/math/util/OpenIntToDoubleHashMap.java" line-rate="0.0" name="org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
	</packages>
</coverage>