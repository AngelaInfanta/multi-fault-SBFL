diff --git a/defects4j.build.properties b/defects4j.build.properties
index ead1d89..37b4e92 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=20
+d4j.classes.instrument=org/apache/commons/math3/Field.class,org/apache/commons/math3/Field\$*.class,org/apache/commons/math3/FieldElement.class,org/apache/commons/math3/FieldElement\$*.class,org/apache/commons/math3/analysis/BivariateFunction.class,org/apache/commons/math3/analysis/BivariateFunction\$*.class,org/apache/commons/math3/analysis/MultivariateFunction.class,org/apache/commons/math3/analysis/MultivariateFunction\$*.class,org/apache/commons/math3/dfp/Dfp.class,org/apache/commons/math3/dfp/Dfp\$*.class,org/apache/commons/math3/dfp/DfpField.class,org/apache/commons/math3/dfp/DfpField\$*.class,org/apache/commons/math3/exception/DimensionMismatchException.class,org/apache/commons/math3/exception/DimensionMismatchException\$*.class,org/apache/commons/math3/exception/MathArithmeticException.class,org/apache/commons/math3/exception/MathArithmeticException\$*.class,org/apache/commons/math3/exception/MathIllegalArgumentException.class,org/apache/commons/math3/exception/MathIllegalArgumentException\$*.class,org/apache/commons/math3/exception/MathIllegalNumberException.class,org/apache/commons/math3/exception/MathIllegalNumberException\$*.class,org/apache/commons/math3/exception/MathIllegalStateException.class,org/apache/commons/math3/exception/MathIllegalStateException\$*.class,org/apache/commons/math3/exception/MathInternalError.class,org/apache/commons/math3/exception/MathInternalError\$*.class,org/apache/commons/math3/exception/MathParseException.class,org/apache/commons/math3/exception/MathParseException\$*.class,org/apache/commons/math3/exception/MathUnsupportedOperationException.class,org/apache/commons/math3/exception/MathUnsupportedOperationException\$*.class,org/apache/commons/math3/exception/MaxCountExceededException.class,org/apache/commons/math3/exception/MaxCountExceededException\$*.class,org/apache/commons/math3/exception/MultiDimensionMismatchException.class,org/apache/commons/math3/exception/MultiDimensionMismatchException\$*.class,org/apache/commons/math3/exception/NoDataException.class,org/apache/commons/math3/exception/NoDataException\$*.class,org/apache/commons/math3/exception/NonMonotonicSequenceException.class,org/apache/commons/math3/exception/NonMonotonicSequenceException\$*.class,org/apache/commons/math3/exception/NotFiniteNumberException.class,org/apache/commons/math3/exception/NotFiniteNumberException\$*.class,org/apache/commons/math3/exception/NotPositiveException.class,org/apache/commons/math3/exception/NotPositiveException\$*.class,org/apache/commons/math3/exception/NotStrictlyPositiveException.class,org/apache/commons/math3/exception/NotStrictlyPositiveException\$*.class,org/apache/commons/math3/exception/NullArgumentException.class,org/apache/commons/math3/exception/NullArgumentException\$*.class,org/apache/commons/math3/exception/NumberIsTooLargeException.class,org/apache/commons/math3/exception/NumberIsTooLargeException\$*.class,org/apache/commons/math3/exception/NumberIsTooSmallException.class,org/apache/commons/math3/exception/NumberIsTooSmallException\$*.class,org/apache/commons/math3/exception/OutOfRangeException.class,org/apache/commons/math3/exception/OutOfRangeException\$*.class,org/apache/commons/math3/exception/TooManyEvaluationsException.class,org/apache/commons/math3/exception/TooManyEvaluationsException\$*.class,org/apache/commons/math3/exception/ZeroException.class,org/apache/commons/math3/exception/ZeroException\$*.class,org/apache/commons/math3/exception/util/ExceptionContextProvider.class,org/apache/commons/math3/exception/util/ExceptionContextProvider\$*.class,org/apache/commons/math3/exception/util/Localizable.class,org/apache/commons/math3/exception/util/Localizable\$*.class,org/apache/commons/math3/linear/AbstractFieldMatrix.class,org/apache/commons/math3/linear/AbstractFieldMatrix\$*.class,org/apache/commons/math3/linear/AbstractRealMatrix.class,org/apache/commons/math3/linear/AbstractRealMatrix\$*.class,org/apache/commons/math3/linear/AnyMatrix.class,org/apache/commons/math3/linear/AnyMatrix\$*.class,org/apache/commons/math3/linear/Array2DRowFieldMatrix.class,org/apache/commons/math3/linear/Array2DRowFieldMatrix\$*.class,org/apache/commons/math3/linear/Array2DRowRealMatrix.class,org/apache/commons/math3/linear/Array2DRowRealMatrix\$*.class,org/apache/commons/math3/linear/ArrayRealVector.class,org/apache/commons/math3/linear/ArrayRealVector\$*.class,org/apache/commons/math3/linear/BlockFieldMatrix.class,org/apache/commons/math3/linear/BlockFieldMatrix\$*.class,org/apache/commons/math3/linear/BlockRealMatrix.class,org/apache/commons/math3/linear/BlockRealMatrix\$*.class,org/apache/commons/math3/linear/DecompositionSolver.class,org/apache/commons/math3/linear/DecompositionSolver\$*.class,org/apache/commons/math3/linear/DefaultRealMatrixPreservingVisitor.class,org/apache/commons/math3/linear/DefaultRealMatrixPreservingVisitor\$*.class,org/apache/commons/math3/linear/EigenDecomposition.class,org/apache/commons/math3/linear/EigenDecomposition\$*.class,org/apache/commons/math3/linear/FieldMatrix.class,org/apache/commons/math3/linear/FieldMatrix\$*.class,org/apache/commons/math3/linear/FieldMatrixPreservingVisitor.class,org/apache/commons/math3/linear/FieldMatrixPreservingVisitor\$*.class,org/apache/commons/math3/linear/FieldVector.class,org/apache/commons/math3/linear/FieldVector\$*.class,org/apache/commons/math3/linear/MatrixDimensionMismatchException.class,org/apache/commons/math3/linear/MatrixDimensionMismatchException\$*.class,org/apache/commons/math3/linear/MatrixUtils.class,org/apache/commons/math3/linear/MatrixUtils\$*.class,org/apache/commons/math3/linear/NonSquareMatrixException.class,org/apache/commons/math3/linear/NonSquareMatrixException\$*.class,org/apache/commons/math3/linear/NonSymmetricMatrixException.class,org/apache/commons/math3/linear/NonSymmetricMatrixException\$*.class,org/apache/commons/math3/linear/OpenMapRealMatrix.class,org/apache/commons/math3/linear/OpenMapRealMatrix\$*.class,org/apache/commons/math3/linear/RealLinearOperator.class,org/apache/commons/math3/linear/RealLinearOperator\$*.class,org/apache/commons/math3/linear/RealMatrix.class,org/apache/commons/math3/linear/RealMatrix\$*.class,org/apache/commons/math3/linear/RealMatrixChangingVisitor.class,org/apache/commons/math3/linear/RealMatrixChangingVisitor\$*.class,org/apache/commons/math3/linear/RealMatrixFormat.class,org/apache/commons/math3/linear/RealMatrixFormat\$*.class,org/apache/commons/math3/linear/RealMatrixPreservingVisitor.class,org/apache/commons/math3/linear/RealMatrixPreservingVisitor\$*.class,org/apache/commons/math3/linear/RealVector.class,org/apache/commons/math3/linear/RealVector\$*.class,org/apache/commons/math3/linear/RealVectorFormat.class,org/apache/commons/math3/linear/RealVectorFormat\$*.class,org/apache/commons/math3/linear/SparseRealMatrix.class,org/apache/commons/math3/linear/SparseRealMatrix\$*.class,org/apache/commons/math3/linear/TriDiagonalTransformer.class,org/apache/commons/math3/linear/TriDiagonalTransformer\$*.class,org/apache/commons/math3/optimization/AbstractConvergenceChecker.class,org/apache/commons/math3/optimization/AbstractConvergenceChecker\$*.class,org/apache/commons/math3/optimization/BaseMultivariateOptimizer.class,org/apache/commons/math3/optimization/BaseMultivariateOptimizer\$*.class,org/apache/commons/math3/optimization/BaseMultivariateSimpleBoundsOptimizer.class,org/apache/commons/math3/optimization/BaseMultivariateSimpleBoundsOptimizer\$*.class,org/apache/commons/math3/optimization/BaseOptimizer.class,org/apache/commons/math3/optimization/BaseOptimizer\$*.class,org/apache/commons/math3/optimization/ConvergenceChecker.class,org/apache/commons/math3/optimization/ConvergenceChecker\$*.class,org/apache/commons/math3/optimization/GoalType.class,org/apache/commons/math3/optimization/GoalType\$*.class,org/apache/commons/math3/optimization/MultivariateOptimizer.class,org/apache/commons/math3/optimization/MultivariateOptimizer\$*.class,org/apache/commons/math3/optimization/PointValuePair.class,org/apache/commons/math3/optimization/PointValuePair\$*.class,org/apache/commons/math3/optimization/SimpleValueChecker.class,org/apache/commons/math3/optimization/SimpleValueChecker\$*.class,org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.class,org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer\$*.class,org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.class,org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer\$*.class,org/apache/commons/math3/optimization/direct/CMAESOptimizer.class,org/apache/commons/math3/optimization/direct/CMAESOptimizer\$*.class,org/apache/commons/math3/random/BitsStreamGenerator.class,org/apache/commons/math3/random/BitsStreamGenerator\$*.class,org/apache/commons/math3/random/MersenneTwister.class,org/apache/commons/math3/random/MersenneTwister\$*.class,org/apache/commons/math3/random/RandomGenerator.class,org/apache/commons/math3/random/RandomGenerator\$*.class,org/apache/commons/math3/util/CompositeFormat.class,org/apache/commons/math3/util/CompositeFormat\$*.class,org/apache/commons/math3/util/FastMath.class,org/apache/commons/math3/util/FastMath\$*.class,org/apache/commons/math3/util/FastMathLiteralArrays.class,org/apache/commons/math3/util/FastMathLiteralArrays\$*.class,org/apache/commons/math3/util/Incrementor.class,org/apache/commons/math3/util/Incrementor\$*.class,org/apache/commons/math3/util/MathArrays.class,org/apache/commons/math3/util/MathArrays\$*.class,org/apache/commons/math3/util/MathUtils.class,org/apache/commons/math3/util/MathUtils\$*.class,org/apache/commons/math3/util/Pair.class,org/apache/commons/math3/util/Pair\$*.class,org/apache/commons/math3/util/Precision.class,org/apache/commons/math3/util/Precision\$*.class
 d4j.classes.modified=org.apache.commons.math3.optimization.direct.CMAESOptimizer
 d4j.classes.relevant=org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.exception.DimensionMismatchException,org.apache.commons.math3.exception.MathArithmeticException,org.apache.commons.math3.exception.MathIllegalArgumentException,org.apache.commons.math3.exception.MathIllegalNumberException,org.apache.commons.math3.exception.MathIllegalStateException,org.apache.commons.math3.exception.MathInternalError,org.apache.commons.math3.exception.MathParseException,org.apache.commons.math3.exception.MathUnsupportedOperationException,org.apache.commons.math3.exception.MaxCountExceededException,org.apache.commons.math3.exception.MultiDimensionMismatchException,org.apache.commons.math3.exception.NoDataException,org.apache.commons.math3.exception.NonMonotonicSequenceException,org.apache.commons.math3.exception.NotFiniteNumberException,org.apache.commons.math3.exception.NotPositiveException,org.apache.commons.math3.exception.NotStrictlyPositiveException,org.apache.commons.math3.exception.NullArgumentException,org.apache.commons.math3.exception.NumberIsTooLargeException,org.apache.commons.math3.exception.NumberIsTooSmallException,org.apache.commons.math3.exception.OutOfRangeException,org.apache.commons.math3.exception.TooManyEvaluationsException,org.apache.commons.math3.exception.util.ExceptionContextProvider,org.apache.commons.math3.exception.util.Localizable,org.apache.commons.math3.exception.ZeroException,org.apache.commons.math3.linear.AbstractFieldMatrix,org.apache.commons.math3.linear.AbstractRealMatrix,org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.Array2DRowFieldMatrix,org.apache.commons.math3.linear.Array2DRowRealMatrix,org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.BlockFieldMatrix,org.apache.commons.math3.linear.BlockRealMatrix,org.apache.commons.math3.linear.DecompositionSolver,org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor,org.apache.commons.math3.linear.EigenDecomposition,org.apache.commons.math3.linear.FieldMatrix,org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,org.apache.commons.math3.linear.FieldVector,org.apache.commons.math3.linear.MatrixDimensionMismatchException,org.apache.commons.math3.linear.MatrixUtils,org.apache.commons.math3.linear.NonSquareMatrixException,org.apache.commons.math3.linear.NonSymmetricMatrixException,org.apache.commons.math3.linear.OpenMapRealMatrix,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrixChangingVisitor,org.apache.commons.math3.linear.RealMatrixFormat,org.apache.commons.math3.linear.RealMatrixPreservingVisitor,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVectorFormat,org.apache.commons.math3.linear.SparseRealMatrix,org.apache.commons.math3.linear.TriDiagonalTransformer,org.apache.commons.math3.optimization.AbstractConvergenceChecker,org.apache.commons.math3.optimization.BaseMultivariateOptimizer,org.apache.commons.math3.optimization.BaseMultivariateSimpleBoundsOptimizer,org.apache.commons.math3.optimization.BaseOptimizer,org.apache.commons.math3.optimization.ConvergenceChecker,org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer,org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer,org.apache.commons.math3.optimization.direct.CMAESOptimizer,org.apache.commons.math3.optimization.GoalType,org.apache.commons.math3.optimization.MultivariateOptimizer,org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.SimpleValueChecker,org.apache.commons.math3.random.BitsStreamGenerator,org.apache.commons.math3.random.MersenneTwister,org.apache.commons.math3.random.RandomGenerator,org.apache.commons.math3.util.CompositeFormat,org.apache.commons.math3.util.FastMath,org.apache.commons.math3.util.FastMathLiteralArrays,org.apache.commons.math3.util.Incrementor,org.apache.commons.math3.util.MathArrays,org.apache.commons.math3.util.MathUtils,org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Precision
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/math3/util/FastMathTest.java b/src/test/java/org/apache/commons/math3/util/FastMathTest.java
index fe15611..86e6cd1 100644
--- a/src/test/java/org/apache/commons/math3/util/FastMathTest.java
+++ b/src/test/java/org/apache/commons/math3/util/FastMathTest.java
@@ -1122,5 +1122,47 @@ public class FastMathTest {
             dfpPower = dfpPower.multiply(baseDfp);
         }
     }
+    @Test
+    public void testMath905LargePositive() {
+        final double start = StrictMath.log(Double.MAX_VALUE);
+        final double endT = StrictMath.sqrt(2) * StrictMath.sqrt(Double.MAX_VALUE);
+        final double end = 2 * StrictMath.log(endT);
+
+        double maxErr = 0;
+        for (double x = start; x < end; x += 1e-3) {
+            final double tst = FastMath.cosh(x);
+            final double ref = Math.cosh(x);
+            maxErr = FastMath.max(maxErr, FastMath.abs(ref - tst) / FastMath.ulp(ref));            
+        }
+        Assert.assertEquals(0, maxErr, 3);
+
+        for (double x = start; x < end; x += 1e-3) {
+            final double tst = FastMath.sinh(x);
+            final double ref = Math.sinh(x);
+            maxErr = FastMath.max(maxErr, FastMath.abs(ref - tst) / FastMath.ulp(ref));            
+        }
+        Assert.assertEquals(0, maxErr, 3);
+    }
+    @Test
+    public void testMath905LargeNegative() {
+        final double start = -StrictMath.log(Double.MAX_VALUE);
+        final double endT = StrictMath.sqrt(2) * StrictMath.sqrt(Double.MAX_VALUE);
+        final double end = -2 * StrictMath.log(endT);
+
+        double maxErr = 0;
+        for (double x = start; x > end; x -= 1e-3) {
+            final double tst = FastMath.cosh(x);
+            final double ref = Math.cosh(x);
+            maxErr = FastMath.max(maxErr, FastMath.abs(ref - tst) / FastMath.ulp(ref));            
+        }
+        Assert.assertEquals(0, maxErr, 3);
+
+        for (double x = start; x > end; x -= 1e-3) {
+            final double tst = FastMath.sinh(x);
+            final double ref = Math.sinh(x);
+            maxErr = FastMath.max(maxErr, FastMath.abs(ref - tst) / FastMath.ulp(ref));            
+        }
+        Assert.assertEquals(0, maxErr, 3);
+    }
 
 }
