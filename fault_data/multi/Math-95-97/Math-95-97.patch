diff --git a/defects4j.build.properties b/defects4j.build.properties
index fb8a93e..f4275c0 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=97
+d4j.classes.instrument=org/apache/commons/math/ConvergenceException.class,org/apache/commons/math/ConvergenceException\$*.class,org/apache/commons/math/FunctionEvaluationException.class,org/apache/commons/math/FunctionEvaluationException\$*.class,org/apache/commons/math/MathException.class,org/apache/commons/math/MathException\$*.class,org/apache/commons/math/MaxIterationsExceededException.class,org/apache/commons/math/MaxIterationsExceededException\$*.class,org/apache/commons/math/analysis/BrentSolver.class,org/apache/commons/math/analysis/BrentSolver\$*.class,org/apache/commons/math/analysis/DifferentiableUnivariateRealFunction.class,org/apache/commons/math/analysis/DifferentiableUnivariateRealFunction\$*.class,org/apache/commons/math/analysis/UnivariateRealFunction.class,org/apache/commons/math/analysis/UnivariateRealFunction\$*.class,org/apache/commons/math/analysis/UnivariateRealSolver.class,org/apache/commons/math/analysis/UnivariateRealSolver\$*.class,org/apache/commons/math/analysis/UnivariateRealSolverFactory.class,org/apache/commons/math/analysis/UnivariateRealSolverFactory\$*.class,org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl.class,org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl\$*.class,org/apache/commons/math/analysis/UnivariateRealSolverImpl.class,org/apache/commons/math/analysis/UnivariateRealSolverImpl\$*.class,org/apache/commons/math/analysis/UnivariateRealSolverUtils.class,org/apache/commons/math/analysis/UnivariateRealSolverUtils\$*.class,org/apache/commons/math/distribution/AbstractContinuousDistribution.class,org/apache/commons/math/distribution/AbstractContinuousDistribution\$*.class,org/apache/commons/math/distribution/AbstractDistribution.class,org/apache/commons/math/distribution/AbstractDistribution\$*.class,org/apache/commons/math/distribution/ContinuousDistribution.class,org/apache/commons/math/distribution/ContinuousDistribution\$*.class,org/apache/commons/math/distribution/Distribution.class,org/apache/commons/math/distribution/Distribution\$*.class,org/apache/commons/math/distribution/FDistribution.class,org/apache/commons/math/distribution/FDistribution\$*.class,org/apache/commons/math/distribution/FDistributionImpl.class,org/apache/commons/math/distribution/FDistributionImpl\$*.class,org/apache/commons/math/special/Beta.class,org/apache/commons/math/special/Beta\$*.class,org/apache/commons/math/special/Gamma.class,org/apache/commons/math/special/Gamma\$*.class,org/apache/commons/math/util/ContinuedFraction.class,org/apache/commons/math/util/ContinuedFraction\$*.class
 d4j.classes.modified=org.apache.commons.math.analysis.BrentSolver
 d4j.classes.relevant=org.apache.commons.math.analysis.BrentSolver,org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction,org.apache.commons.math.analysis.UnivariateRealFunction,org.apache.commons.math.analysis.UnivariateRealSolver,org.apache.commons.math.analysis.UnivariateRealSolverImpl,org.apache.commons.math.ConvergenceException,org.apache.commons.math.MathException,org.apache.commons.math.MaxIterationsExceededException
 d4j.dir.src.classes=src/java
diff --git a/src/test/org/apache/commons/math/distribution/FDistributionTest.java b/src/test/org/apache/commons/math/distribution/FDistributionTest.java
index d345d68..c86458b 100644
--- a/src/test/org/apache/commons/math/distribution/FDistributionTest.java
+++ b/src/test/org/apache/commons/math/distribution/FDistributionTest.java
@@ -105,4 +105,17 @@ public class FDistributionTest extends ContinuousDistributionAbstractTest {
         double x = fd.inverseCumulativeProbability(p);
         assertEquals(.999, x, 1.0e-5);
     }
+    public void testSmallDegreesOfFreedom() throws Exception {
+        org.apache.commons.math.distribution.FDistributionImpl fd =
+            new org.apache.commons.math.distribution.FDistributionImpl(
+                1.0, 1.0);
+        double p = fd.cumulativeProbability(0.975);
+        double x = fd.inverseCumulativeProbability(p);
+        assertEquals(0.975, x, 1.0e-5);
+
+        fd.setDenominatorDegreesOfFreedom(2.0);
+        p = fd.cumulativeProbability(0.975);
+        x = fd.inverseCumulativeProbability(p);
+        assertEquals(0.975, x, 1.0e-5);
+    }
 }
