diff --git a/defects4j.build.properties b/defects4j.build.properties
index b8a8aa6..5741bd3 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=50
+d4j.classes.instrument=org/apache/commons/lang/StringEscapeUtils.class,org/apache/commons/lang/StringEscapeUtils\$*.class,org/apache/commons/lang/exception/Nestable.class,org/apache/commons/lang/exception/Nestable\$*.class,org/apache/commons/lang/exception/NestableRuntimeException.class,org/apache/commons/lang/exception/NestableRuntimeException\$*.class,org/apache/commons/lang/time/FastDateFormat.class,org/apache/commons/lang/time/FastDateFormat\$*.class
 d4j.classes.modified=org.apache.commons.lang.time.FastDateFormat
 d4j.classes.relevant=org.apache.commons.lang.time.FastDateFormat
 d4j.dir.src.classes=src/java
diff --git a/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java b/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java
index 946af2d..5b75cca 100644
--- a/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java
+++ b/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java
@@ -331,5 +331,17 @@ public class StringEscapeUtilsTest extends TestCase {
     public void testLang313() {
         assertEquals("& &", StringEscapeUtils.unescapeHtml("& &amp;"));
     }
+    public void testEscapeJavaWithSlash() {
+        final String input = "String with a slash (/) in it";
+
+        final String expected = input;
+        final String actual = StringEscapeUtils.escapeJava(input);
+
+        /**
+         * In 2.4 StringEscapeUtils.escapeJava(String) escapes '/' characters, which are not a valid character to escape
+         * in a Java string.
+         */
+        assertEquals(expected, actual);
+    }
 
 }
