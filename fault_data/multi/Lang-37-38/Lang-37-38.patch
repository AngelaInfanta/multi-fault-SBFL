diff --git a/defects4j.build.properties b/defects4j.build.properties
index 95d3bda..8df01d3 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=38
+d4j.classes.instrument=org/apache/commons/lang3/ArrayUtils.class,org/apache/commons/lang3/ArrayUtils\$*.class,org/apache/commons/lang3/Validate.class,org/apache/commons/lang3/Validate\$*.class,org/apache/commons/lang3/time/FastDateFormat.class,org/apache/commons/lang3/time/FastDateFormat\$*.class
 d4j.classes.modified=org.apache.commons.lang3.time.FastDateFormat
 d4j.classes.relevant=org.apache.commons.lang3.time.FastDateFormat,org.apache.commons.lang3.Validate
 d4j.dir.src.classes=src/java
diff --git a/src/test/org/apache/commons/lang3/ArrayUtilsAddTest.java b/src/test/org/apache/commons/lang3/ArrayUtilsAddTest.java
index 2b80d83..962ea57 100644
--- a/src/test/org/apache/commons/lang3/ArrayUtilsAddTest.java
+++ b/src/test/org/apache/commons/lang3/ArrayUtilsAddTest.java
@@ -580,5 +580,18 @@ public class ArrayUtilsAddTest extends TestCase {
             assertEquals("Index: -1, Length: 2", e.getMessage());
         }
     }
+    public void testJira567(){
+        Number[] n;
+        // Valid array construction
+        n = ArrayUtils.addAll(new Number[]{Integer.valueOf(1)}, new Long[]{Long.valueOf(2)});
+        assertEquals(2,n.length);
+        assertEquals(Number.class,n.getClass().getComponentType());
+        try {
+            // Invalid - can't store Long in Integer array
+               n = ArrayUtils.addAll(new Integer[]{Integer.valueOf(1)}, new Long[]{Long.valueOf(2)});
+               fail("Should have generated IllegalArgumentException");
+        } catch (IllegalArgumentException expected) {
+        }
+    }
 
 }
