<coverage branch-rate="0.004201680672268907" branches-covered="2" branches-valid="476" complexity="2.108108108108108" line-rate="0.02577319587628866" lines-covered="30" lines-valid="1164" timestamp="1623854107580" version="2.0.3">
	<sources>
		<source>src/main/java</source>
	</sources>
	<packages>
		<package branch-rate="0.0" complexity="1.1153846153846154" line-rate="0.08411214953271028" name="org.apache.commons.math">
			<classes>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ConvergenceException.java" line-rate="0.0" name="org.apache.commons.math.ConvergenceException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ConvergingAlgorithm.java" line-rate="1.0" name="org.apache.commons.math.ConvergingAlgorithm">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ConvergingAlgorithmImpl.java" line-rate="0.36" name="org.apache.commons.math.ConvergingAlgorithmImpl">
					<methods>
						<method branch-rate="1.0" line-rate="1.0" name="&lt;init&gt;" signature="(ID)V">
							<lines>
								<line branch="false" hits="1" number="61" />
								<line branch="false" hits="1" number="62" />
								<line branch="false" hits="1" number="63" />
								<line branch="false" hits="1" number="64" />
								<line branch="false" hits="1" number="65" />
								<line branch="false" hits="1" number="66" />
								<line branch="false" hits="1" number="67" />
								<line branch="false" hits="1" number="68" />
								<line branch="false" hits="1" number="69" />
							</lines>
						</method>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/FunctionEvaluationException.java" line-rate="0.0" name="org.apache.commons.math.FunctionEvaluationException">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.5" filename="org/apache/commons/math/MathException.java" line-rate="0.0" name="org.apache.commons.math.MathException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/MaxEvaluationsExceededException.java" line-rate="0.0" name="org.apache.commons.math.MaxEvaluationsExceededException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/MaxIterationsExceededException.java" line-rate="0.0" name="org.apache.commons.math.MaxIterationsExceededException">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="1.0" complexity="1.0" line-rate="1.0" name="org.apache.commons.math.analysis">
			<classes>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/DifferentiableUnivariateRealFunction.java" line-rate="1.0" name="org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/UnivariateRealFunction.java" line-rate="1.0" name="org.apache.commons.math.analysis.UnivariateRealFunction">
					<methods>
					</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.018867924528301886" complexity="2.5319148936170213" line-rate="0.0995260663507109" name="org.apache.commons.math.analysis.solvers">
			<classes>
				<class branch-rate="0.16666666666666666" complexity="1.8333333333333333" filename="org/apache/commons/math/analysis/solvers/BisectionSolver.java" line-rate="0.43478260869565216" name="org.apache.commons.math.analysis.solvers.BisectionSolver">
					<methods>
						<method branch-rate="1.0" line-rate="1.0" name="&lt;init&gt;" signature="()V">
							<lines>
								<line branch="false" hits="1" number="52" />
								<line branch="false" hits="1" number="53" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="solve" signature="(DD)D">
							<lines>
								<line branch="false" hits="1" number="66" />
							</lines>
						</method>
						<method branch-rate="0.16666666666666666" line-rate="0.375" name="solve" signature="(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D">
							<lines>
								<line branch="false" hits="1" number="79" />
								<line branch="false" hits="1" number="80" />
								<line branch="false" hits="1" number="85" />
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="86">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="87" />
								<line branch="false" hits="1" number="88" />
								</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="solve" signature="(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D">
							<lines>
								<line branch="false" hits="1" number="72" />
							</lines>
						</method>
					</methods>
					</class>
				<class branch-rate="0.0" complexity="5.111111111111111" filename="org/apache/commons/math/analysis/solvers/BrentSolver.java" line-rate="0.0" name="org.apache.commons.math.analysis.solvers.BrentSolver">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java" line-rate="1.0" name="org.apache.commons.math.analysis.solvers.UnivariateRealSolver">
					<methods>
					</methods>
					</class>
				<class branch-rate="0.045454545454545456" complexity="1.875" filename="org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java" line-rate="0.2" name="org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl">
					<methods>
						<method branch-rate="1.0" line-rate="1.0" name="&lt;init&gt;" signature="(ID)V">
							<lines>
								<line branch="false" hits="1" number="41" />
								<line branch="false" hits="1" number="93" />
								<line branch="false" hits="1" number="94" />
								<line branch="false" hits="1" number="95" />
								<line branch="false" hits="1" number="96" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="clearResult" signature="()V">
							<lines>
								<line branch="false" hits="1" number="165" />
								<line branch="false" hits="1" number="166" />
								<line branch="false" hits="1" number="167" />
							</lines>
						</method>
						<method branch-rate="0.5" line-rate="0.6666666666666666" name="verifyInterval" signature="(DD)V">
							<lines>
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="208">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="213" />
							</lines>
						</method>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="3.2857142857142856" filename="org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java" line-rate="0.03225806451612903" name="org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils">
					<methods>
						<method branch-rate="1.0" line-rate="1.0" name="midpoint" signature="(DD)D">
							<lines>
								<line branch="false" hits="1" number="223" />
							</lines>
						</method>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="3.2857142857142856" filename="org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java" line-rate="0.0" name="org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils$LazyHolder">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="1.302325581395349" line-rate="0.0" name="org.apache.commons.math.ode">
			<classes>
				<class branch-rate="0.0" complexity="1.5416666666666667" filename="org/apache/commons/math/ode/AbstractIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.AbstractIntegrator">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.5416666666666667" filename="org/apache/commons/math/ode/AbstractIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.AbstractIntegrator$EndTimeChecker">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/DerivativeException.java" line-rate="0.0" name="org.apache.commons.math.ode.DerivativeException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/FirstOrderDifferentialEquations.java" line-rate="1.0" name="org.apache.commons.math.ode.FirstOrderDifferentialEquations">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/FirstOrderIntegrator.java" line-rate="1.0" name="org.apache.commons.math.ode.FirstOrderIntegrator">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/IntegratorException.java" line-rate="0.0" name="org.apache.commons.math.ode.IntegratorException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/ODEIntegrator.java" line-rate="1.0" name="org.apache.commons.math.ode.ODEIntegrator">
					<methods>
					</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="3.3214285714285716" line-rate="0.0" name="org.apache.commons.math.ode.events">
			<classes>
				<class branch-rate="0.0" complexity="3.5454545454545454" filename="org/apache/commons/math/ode/events/CombinedEventsManager.java" line-rate="0.0" name="org.apache.commons.math.ode.events.CombinedEventsManager">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/events/EventException.java" line-rate="0.0" name="org.apache.commons.math.ode.events.EventException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/events/EventHandler.java" line-rate="1.0" name="org.apache.commons.math.ode.events.EventHandler">
					<methods>
					</methods>
					</class>
				<class branch-rate="0.0" complexity="4.083333333333333" filename="org/apache/commons/math/ode/events/EventState.java" line-rate="0.0" name="org.apache.commons.math.ode.events.EventState">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="4.083333333333333" filename="org/apache/commons/math/ode/events/EventState.java" line-rate="0.0" name="org.apache.commons.math.ode.events.EventState$1">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="3.382978723404255" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff">
			<classes>
				<class branch-rate="0.0" complexity="3.4545454545454546" filename="org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.25" filename="org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.75" filename="org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="3.6666666666666665" filename="org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="3.3636363636363638" filename="org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="10.5" filename="org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="3.4" filename="org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="1.475" line-rate="0.0" name="org.apache.commons.math.ode.sampling">
			<classes>
				<class branch-rate="0.0" complexity="1.6818181818181819" filename="org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java" line-rate="0.0" name="org.apache.commons.math.ode.sampling.AbstractStepInterpolator">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.5714285714285714" filename="org/apache/commons/math/ode/sampling/DummyStepInterpolator.java" line-rate="0.0" name="org.apache.commons.math.ode.sampling.DummyStepInterpolator">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/sampling/StepHandler.java" line-rate="1.0" name="org.apache.commons.math.ode.sampling.StepHandler">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/sampling/StepInterpolator.java" line-rate="1.0" name="org.apache.commons.math.ode.sampling.StepInterpolator">
					<methods>
					</methods>
					</class>
			</classes>
		</package>
	</packages>
</coverage>