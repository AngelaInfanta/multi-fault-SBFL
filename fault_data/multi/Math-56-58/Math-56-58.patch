diff --git a/defects4j.build.properties b/defects4j.build.properties
index 1ed1799..f71cafe 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=58
+d4j.classes.instrument=org/apache/commons/math/ConvergenceException.class,org/apache/commons/math/ConvergenceException\$*.class,org/apache/commons/math/MathException.class,org/apache/commons/math/MathException\$*.class,org/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction.class,org/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction\$*.class,org/apache/commons/math/analysis/DifferentiableUnivariateRealFunction.class,org/apache/commons/math/analysis/DifferentiableUnivariateRealFunction\$*.class,org/apache/commons/math/analysis/MultivariateMatrixFunction.class,org/apache/commons/math/analysis/MultivariateMatrixFunction\$*.class,org/apache/commons/math/analysis/MultivariateVectorialFunction.class,org/apache/commons/math/analysis/MultivariateVectorialFunction\$*.class,org/apache/commons/math/analysis/ParametricUnivariateRealFunction.class,org/apache/commons/math/analysis/ParametricUnivariateRealFunction\$*.class,org/apache/commons/math/analysis/UnivariateRealFunction.class,org/apache/commons/math/analysis/UnivariateRealFunction\$*.class,org/apache/commons/math/analysis/function/Gaussian.class,org/apache/commons/math/analysis/function/Gaussian\$*.class,org/apache/commons/math/exception/ConvergenceException.class,org/apache/commons/math/exception/ConvergenceException\$*.class,org/apache/commons/math/exception/DimensionMismatchException.class,org/apache/commons/math/exception/DimensionMismatchException\$*.class,org/apache/commons/math/exception/MathArithmeticException.class,org/apache/commons/math/exception/MathArithmeticException\$*.class,org/apache/commons/math/exception/MathIllegalArgumentException.class,org/apache/commons/math/exception/MathIllegalArgumentException\$*.class,org/apache/commons/math/exception/MathIllegalNumberException.class,org/apache/commons/math/exception/MathIllegalNumberException\$*.class,org/apache/commons/math/exception/MathIllegalStateException.class,org/apache/commons/math/exception/MathIllegalStateException\$*.class,org/apache/commons/math/exception/MathRuntimeException.class,org/apache/commons/math/exception/MathRuntimeException\$*.class,org/apache/commons/math/exception/MathThrowable.class,org/apache/commons/math/exception/MathThrowable\$*.class,org/apache/commons/math/exception/MaxCountExceededException.class,org/apache/commons/math/exception/MaxCountExceededException\$*.class,org/apache/commons/math/exception/NonMonotonousSequenceException.class,org/apache/commons/math/exception/NonMonotonousSequenceException\$*.class,org/apache/commons/math/exception/NotFiniteNumberException.class,org/apache/commons/math/exception/NotFiniteNumberException\$*.class,org/apache/commons/math/exception/NotPositiveException.class,org/apache/commons/math/exception/NotPositiveException\$*.class,org/apache/commons/math/exception/NotStrictlyPositiveException.class,org/apache/commons/math/exception/NotStrictlyPositiveException\$*.class,org/apache/commons/math/exception/NullArgumentException.class,org/apache/commons/math/exception/NullArgumentException\$*.class,org/apache/commons/math/exception/NumberIsTooLargeException.class,org/apache/commons/math/exception/NumberIsTooLargeException\$*.class,org/apache/commons/math/exception/NumberIsTooSmallException.class,org/apache/commons/math/exception/NumberIsTooSmallException\$*.class,org/apache/commons/math/exception/OutOfRangeException.class,org/apache/commons/math/exception/OutOfRangeException\$*.class,org/apache/commons/math/exception/TooManyEvaluationsException.class,org/apache/commons/math/exception/TooManyEvaluationsException\$*.class,org/apache/commons/math/exception/ZeroException.class,org/apache/commons/math/exception/ZeroException\$*.class,org/apache/commons/math/exception/util/ArgUtils.class,org/apache/commons/math/exception/util/ArgUtils\$*.class,org/apache/commons/math/exception/util/Localizable.class,org/apache/commons/math/exception/util/Localizable\$*.class,org/apache/commons/math/exception/util/LocalizedFormats.class,org/apache/commons/math/exception/util/LocalizedFormats\$*.class,org/apache/commons/math/optimization/AbstractConvergenceChecker.class,org/apache/commons/math/optimization/AbstractConvergenceChecker\$*.class,org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.class,org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer\$*.class,org/apache/commons/math/optimization/BaseOptimizer.class,org/apache/commons/math/optimization/BaseOptimizer\$*.class,org/apache/commons/math/optimization/ConvergenceChecker.class,org/apache/commons/math/optimization/ConvergenceChecker\$*.class,org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.class,org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer\$*.class,org/apache/commons/math/optimization/OptimizationException.class,org/apache/commons/math/optimization/OptimizationException\$*.class,org/apache/commons/math/optimization/SimpleVectorialValueChecker.class,org/apache/commons/math/optimization/SimpleVectorialValueChecker\$*.class,org/apache/commons/math/optimization/VectorialPointValuePair.class,org/apache/commons/math/optimization/VectorialPointValuePair\$*.class,org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.class,org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer\$*.class,org/apache/commons/math/optimization/fitting/CurveFitter.class,org/apache/commons/math/optimization/fitting/CurveFitter\$*.class,org/apache/commons/math/optimization/fitting/GaussianFitter.class,org/apache/commons/math/optimization/fitting/GaussianFitter\$*.class,org/apache/commons/math/optimization/fitting/WeightedObservedPoint.class,org/apache/commons/math/optimization/fitting/WeightedObservedPoint\$*.class,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.class,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer\$*.class,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.class,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer\$*.class,org/apache/commons/math/util/FastMath.class,org/apache/commons/math/util/FastMath\$*.class,org/apache/commons/math/util/Incrementor.class,org/apache/commons/math/util/Incrementor\$*.class,org/apache/commons/math/util/MathUtils.class,org/apache/commons/math/util/MathUtils\$*.class,org/apache/commons/math/util/MultidimensionalCounter.class,org/apache/commons/math/util/MultidimensionalCounter\$*.class
 d4j.classes.modified=org.apache.commons.math.optimization.fitting.GaussianFitter
 d4j.classes.relevant=org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction,org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction,org.apache.commons.math.analysis.function.Gaussian,org.apache.commons.math.analysis.MultivariateMatrixFunction,org.apache.commons.math.analysis.MultivariateVectorialFunction,org.apache.commons.math.analysis.ParametricUnivariateRealFunction,org.apache.commons.math.analysis.UnivariateRealFunction,org.apache.commons.math.ConvergenceException,org.apache.commons.math.exception.ConvergenceException,org.apache.commons.math.exception.DimensionMismatchException,org.apache.commons.math.exception.MathIllegalArgumentException,org.apache.commons.math.exception.MathIllegalNumberException,org.apache.commons.math.exception.MathIllegalStateException,org.apache.commons.math.exception.MathRuntimeException,org.apache.commons.math.exception.MathThrowable,org.apache.commons.math.exception.MaxCountExceededException,org.apache.commons.math.exception.NotStrictlyPositiveException,org.apache.commons.math.exception.NullArgumentException,org.apache.commons.math.exception.NumberIsTooSmallException,org.apache.commons.math.exception.OutOfRangeException,org.apache.commons.math.exception.TooManyEvaluationsException,org.apache.commons.math.exception.util.ArgUtils,org.apache.commons.math.exception.util.Localizable,org.apache.commons.math.exception.util.LocalizedFormats,org.apache.commons.math.exception.ZeroException,org.apache.commons.math.MathException,org.apache.commons.math.optimization.AbstractConvergenceChecker,org.apache.commons.math.optimization.BaseMultivariateVectorialOptimizer,org.apache.commons.math.optimization.BaseOptimizer,org.apache.commons.math.optimization.ConvergenceChecker,org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer,org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer,org.apache.commons.math.optimization.fitting.CurveFitter,org.apache.commons.math.optimization.fitting.GaussianFitter,org.apache.commons.math.optimization.fitting.WeightedObservedPoint,org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer,org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer,org.apache.commons.math.optimization.OptimizationException,org.apache.commons.math.optimization.SimpleVectorialValueChecker,org.apache.commons.math.optimization.VectorialPointValuePair,org.apache.commons.math.util.FastMath,org.apache.commons.math.util.Incrementor
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/math/util/MultidimensionalCounterTest.java b/src/test/java/org/apache/commons/math/util/MultidimensionalCounterTest.java
index 827030d..a3110b9 100644
--- a/src/test/java/org/apache/commons/math/util/MultidimensionalCounterTest.java
+++ b/src/test/java/org/apache/commons/math/util/MultidimensionalCounterTest.java
@@ -121,20 +121,32 @@ public class MultidimensionalCounterTest {
 
     @Test
     public void testIterationConsistency() {
-        final MultidimensionalCounter c = new MultidimensionalCounter(2, 3, 2);
+        final MultidimensionalCounter c = new MultidimensionalCounter(2, 3, 4);
         final int[][] expected = new int[][] {
             { 0, 0, 0 },
             { 0, 0, 1 },
+            { 0, 0, 2 },
+            { 0, 0, 3 },
             { 0, 1, 0 },
             { 0, 1, 1 },
+            { 0, 1, 2 },
+            { 0, 1, 3 },
             { 0, 2, 0 },
             { 0, 2, 1 },
+            { 0, 2, 2 },
+            { 0, 2, 3 },
             { 1, 0, 0 },
             { 1, 0, 1 },
+            { 1, 0, 2 },
+            { 1, 0, 3 },
             { 1, 1, 0 },
             { 1, 1, 1 },
+            { 1, 1, 2 },
+            { 1, 1, 3 },
             { 1, 2, 0 },
-            { 1, 2, 1 }
+            { 1, 2, 1 },
+            { 1, 2, 2 },
+            { 1, 2, 3 }
         };
 
         final int totalSize = c.getSize();
