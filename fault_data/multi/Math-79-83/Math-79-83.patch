diff --git a/defects4j.build.properties b/defects4j.build.properties
index c8fbf93..e65e42f 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=83
+d4j.classes.instrument=org/apache/commons/math/ConvergenceException.class,org/apache/commons/math/ConvergenceException\$*.class,org/apache/commons/math/MathException.class,org/apache/commons/math/MathException\$*.class,org/apache/commons/math/MathRuntimeException.class,org/apache/commons/math/MathRuntimeException\$*.class,org/apache/commons/math/MaxIterationsExceededException.class,org/apache/commons/math/MaxIterationsExceededException\$*.class,org/apache/commons/math/linear/AbstractRealMatrix.class,org/apache/commons/math/linear/AbstractRealMatrix\$*.class,org/apache/commons/math/linear/AnyMatrix.class,org/apache/commons/math/linear/AnyMatrix\$*.class,org/apache/commons/math/linear/Array2DRowRealMatrix.class,org/apache/commons/math/linear/Array2DRowRealMatrix\$*.class,org/apache/commons/math/linear/ArrayRealVector.class,org/apache/commons/math/linear/ArrayRealVector\$*.class,org/apache/commons/math/linear/InvalidMatrixException.class,org/apache/commons/math/linear/InvalidMatrixException\$*.class,org/apache/commons/math/linear/MatrixIndexException.class,org/apache/commons/math/linear/MatrixIndexException\$*.class,org/apache/commons/math/linear/NonSquareMatrixException.class,org/apache/commons/math/linear/NonSquareMatrixException\$*.class,org/apache/commons/math/linear/RealMatrix.class,org/apache/commons/math/linear/RealMatrix\$*.class,org/apache/commons/math/linear/RealMatrixChangingVisitor.class,org/apache/commons/math/linear/RealMatrixChangingVisitor\$*.class,org/apache/commons/math/linear/RealMatrixPreservingVisitor.class,org/apache/commons/math/linear/RealMatrixPreservingVisitor\$*.class,org/apache/commons/math/linear/RealVector.class,org/apache/commons/math/linear/RealVector\$*.class,org/apache/commons/math/linear/RealVectorFormat.class,org/apache/commons/math/linear/RealVectorFormat\$*.class,org/apache/commons/math/optimization/GoalType.class,org/apache/commons/math/optimization/GoalType\$*.class,org/apache/commons/math/optimization/OptimizationException.class,org/apache/commons/math/optimization/OptimizationException\$*.class,org/apache/commons/math/optimization/RealPointValuePair.class,org/apache/commons/math/optimization/RealPointValuePair\$*.class,org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.class,org/apache/commons/math/optimization/linear/AbstractLinearOptimizer\$*.class,org/apache/commons/math/optimization/linear/LinearConstraint.class,org/apache/commons/math/optimization/linear/LinearConstraint\$*.class,org/apache/commons/math/optimization/linear/LinearObjectiveFunction.class,org/apache/commons/math/optimization/linear/LinearObjectiveFunction\$*.class,org/apache/commons/math/optimization/linear/LinearOptimizer.class,org/apache/commons/math/optimization/linear/LinearOptimizer\$*.class,org/apache/commons/math/optimization/linear/NoFeasibleSolutionException.class,org/apache/commons/math/optimization/linear/NoFeasibleSolutionException\$*.class,org/apache/commons/math/optimization/linear/Relationship.class,org/apache/commons/math/optimization/linear/Relationship\$*.class,org/apache/commons/math/optimization/linear/SimplexSolver.class,org/apache/commons/math/optimization/linear/SimplexSolver\$*.class,org/apache/commons/math/optimization/linear/SimplexTableau.class,org/apache/commons/math/optimization/linear/SimplexTableau\$*.class,org/apache/commons/math/optimization/linear/UnboundedSolutionException.class,org/apache/commons/math/optimization/linear/UnboundedSolutionException\$*.class,org/apache/commons/math/stat/clustering/Cluster.class,org/apache/commons/math/stat/clustering/Cluster\$*.class,org/apache/commons/math/stat/clustering/Clusterable.class,org/apache/commons/math/stat/clustering/Clusterable\$*.class,org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.class,org/apache/commons/math/stat/clustering/EuclideanIntegerPoint\$*.class,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.class,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer\$*.class,org/apache/commons/math/util/CompositeFormat.class,org/apache/commons/math/util/CompositeFormat\$*.class,org/apache/commons/math/util/MathUtils.class,org/apache/commons/math/util/MathUtils\$*.class
 d4j.classes.modified=org.apache.commons.math.optimization.linear.SimplexTableau
 d4j.classes.relevant=org.apache.commons.math.ConvergenceException,org.apache.commons.math.linear.AbstractRealMatrix,org.apache.commons.math.linear.AnyMatrix,org.apache.commons.math.linear.Array2DRowRealMatrix,org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.InvalidMatrixException,org.apache.commons.math.linear.MatrixIndexException,org.apache.commons.math.linear.NonSquareMatrixException,org.apache.commons.math.linear.RealMatrix,org.apache.commons.math.linear.RealMatrixChangingVisitor,org.apache.commons.math.linear.RealMatrixPreservingVisitor,org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.RealVectorFormat,org.apache.commons.math.MathException,org.apache.commons.math.MathRuntimeException,org.apache.commons.math.MaxIterationsExceededException,org.apache.commons.math.optimization.GoalType,org.apache.commons.math.optimization.linear.AbstractLinearOptimizer,org.apache.commons.math.optimization.linear.LinearConstraint,org.apache.commons.math.optimization.linear.LinearObjectiveFunction,org.apache.commons.math.optimization.linear.LinearOptimizer,org.apache.commons.math.optimization.linear.NoFeasibleSolutionException,org.apache.commons.math.optimization.linear.Relationship,org.apache.commons.math.optimization.linear.SimplexSolver,org.apache.commons.math.optimization.linear.SimplexTableau,org.apache.commons.math.optimization.linear.UnboundedSolutionException,org.apache.commons.math.optimization.OptimizationException,org.apache.commons.math.optimization.RealPointValuePair,org.apache.commons.math.util.CompositeFormat,org.apache.commons.math.util.MathUtils
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClustererTest.java b/src/test/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClustererTest.java
index da1d8a9..73a1875 100644
--- a/src/test/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClustererTest.java
+++ b/src/test/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClustererTest.java
@@ -93,5 +93,21 @@ public class KMeansPlusPlusClustererTest {
         assertTrue(cluster3Found);
 
     }
+    @Test
+    public void testPerformClusterAnalysisDegenerate() {
+        KMeansPlusPlusClusterer<EuclideanIntegerPoint> transformer = new KMeansPlusPlusClusterer<EuclideanIntegerPoint>(
+                new Random(1746432956321l));
+        EuclideanIntegerPoint[] points = new EuclideanIntegerPoint[] {
+                new EuclideanIntegerPoint(new int[] { 1959, 325100 }),
+                new EuclideanIntegerPoint(new int[] { 1960, 373200 }), };
+        List<Cluster<EuclideanIntegerPoint>> clusters = transformer.cluster(Arrays.asList(points), 1, 1);
+        assertEquals(1, clusters.size());
+        assertEquals(2, (clusters.get(0).getPoints().size()));
+        EuclideanIntegerPoint pt1 = new EuclideanIntegerPoint(new int[] { 1959, 325100 });
+        EuclideanIntegerPoint pt2 = new EuclideanIntegerPoint(new int[] { 1960, 373200 });
+        assertTrue(clusters.get(0).getPoints().contains(pt1));
+        assertTrue(clusters.get(0).getPoints().contains(pt2));
+
+    } 
 
 }
