diff --git a/defects4j.build.properties b/defects4j.build.properties
index 5540dfd..5f0b6bd 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=45
+d4j.classes.instrument=org/apache/commons/lang/Entities.class,org/apache/commons/lang/Entities\$*.class,org/apache/commons/lang/IntHashMap.class,org/apache/commons/lang/IntHashMap\$*.class,org/apache/commons/lang/StringEscapeUtils.class,org/apache/commons/lang/StringEscapeUtils\$*.class,org/apache/commons/lang/StringUtils.class,org/apache/commons/lang/StringUtils\$*.class,org/apache/commons/lang/UnhandledException.class,org/apache/commons/lang/UnhandledException\$*.class,org/apache/commons/lang/WordUtils.class,org/apache/commons/lang/WordUtils\$*.class,org/apache/commons/lang/exception/Nestable.class,org/apache/commons/lang/exception/Nestable\$*.class,org/apache/commons/lang/exception/NestableRuntimeException.class,org/apache/commons/lang/exception/NestableRuntimeException\$*.class
 d4j.classes.modified=org.apache.commons.lang.WordUtils
 d4j.classes.relevant=org.apache.commons.lang.StringUtils,org.apache.commons.lang.WordUtils
 d4j.dir.src.classes=src/java
diff --git a/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java b/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java
index e993ae6..9697eed 100644
--- a/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java
+++ b/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java
@@ -415,4 +415,16 @@ public class StringEscapeUtilsTest extends TestCase {
             fail("Threw: " + e);
         }
     }
+    public void testEscapeHtmlHighUnicode() throws java.io.UnsupportedEncodingException {
+        // this is the utf8 representation of the character:
+        // COUNTING ROD UNIT DIGIT THREE
+        // in unicode
+        // codepoint: U+1D362
+        byte[] data = new byte[] { (byte)0xF0, (byte)0x9D, (byte)0x8D, (byte)0xA2 };
+
+        String escaped = StringEscapeUtils.escapeHtml( new String(data, "UTF8") );
+        String unescaped = StringEscapeUtils.unescapeHtml( escaped );
+
+        assertEquals( "High unicode was not escaped correctly", "&#119650;", escaped);
+    }
 }
