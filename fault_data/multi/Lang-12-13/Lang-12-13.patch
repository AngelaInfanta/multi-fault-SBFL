diff --git a/defects4j.build.properties b/defects4j.build.properties
index 714eec8..7aba7f9 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=13
+d4j.classes.instrument=org/apache/commons/lang3/RandomStringUtils.class,org/apache/commons/lang3/RandomStringUtils\$*.class,org/apache/commons/lang3/SerializationException.class,org/apache/commons/lang3/SerializationException\$*.class,org/apache/commons/lang3/SerializationUtils.class,org/apache/commons/lang3/SerializationUtils\$*.class
 d4j.classes.modified=org.apache.commons.lang3.SerializationUtils
 d4j.classes.relevant=org.apache.commons.lang3.SerializationException,org.apache.commons.lang3.SerializationUtils
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java b/src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java
index 134aa54..97ef50d 100644
--- a/src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java
+++ b/src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java
@@ -126,6 +126,7 @@ public class RandomStringUtilsTest extends junit.framework.TestCase {
 
     }
     public void testExceptions() {
+        final char[] DUMMY = new char[]{'a'}; // valid char array
         try {
             RandomStringUtils.random(-1);
             fail();
@@ -135,7 +136,11 @@ public class RandomStringUtilsTest extends junit.framework.TestCase {
             fail();
         } catch (IllegalArgumentException ex) {}
         try {
-            RandomStringUtils.random(-1, new char[0]);
+            RandomStringUtils.random(-1, DUMMY);
+            fail();
+        } catch (IllegalArgumentException ex) {}
+        try {
+            RandomStringUtils.random(1, new char[0]); // must not provide empty array => IAE
             fail();
         } catch (IllegalArgumentException ex) {}
         try {
@@ -143,15 +148,19 @@ public class RandomStringUtilsTest extends junit.framework.TestCase {
             fail();
         } catch (IllegalArgumentException ex) {}
         try {
+            RandomStringUtils.random(-1, (String)null);
+            fail();
+        } catch (IllegalArgumentException ex) {}
+        try {
             RandomStringUtils.random(-1, 'a', 'z', false, false);
             fail();
         } catch (IllegalArgumentException ex) {}
         try {
-            RandomStringUtils.random(-1, 'a', 'z', false, false, new char[0]);
+            RandomStringUtils.random(-1, 'a', 'z', false, false, DUMMY);
             fail();
         } catch (IllegalArgumentException ex) {}
         try {
-            RandomStringUtils.random(-1, 'a', 'z', false, false, new char[0], new Random());
+            RandomStringUtils.random(-1, 'a', 'z', false, false, DUMMY, new Random());
             fail();
         } catch (IllegalArgumentException ex) {}
     }
@@ -329,5 +338,9 @@ public class RandomStringUtilsTest extends junit.framework.TestCase {
         // just to be complete
         assertEquals(orig, copy);
     }
+    public void testLANG805() {
+        long seed = System.currentTimeMillis();
+        assertEquals("aaa", RandomStringUtils.random(3,0,0,false,false,new char[]{'a'},new Random(seed)));
+    }
 }
 
