<coverage branch-rate="0.01504149377593361" branches-covered="29" branches-valid="1928" complexity="2.1147540983606556" line-rate="0.019952799828363014" lines-covered="93" lines-valid="4661" timestamp="1623854670207" version="2.0.3">
	<sources>
		<source>src/main/java</source>
	</sources>
	<packages>
		<package branch-rate="0.0" complexity="1.116504854368932" line-rate="0.05851063829787234" name="org.apache.commons.math">
			<classes>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ConvergenceException.java" line-rate="0.0" name="org.apache.commons.math.ConvergenceException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ConvergingAlgorithm.java" line-rate="1.0" name="org.apache.commons.math.ConvergingAlgorithm">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ConvergingAlgorithmImpl.java" line-rate="0.36" name="org.apache.commons.math.ConvergingAlgorithmImpl">
					<methods>
						<method branch-rate="1.0" line-rate="1.0" name="&lt;init&gt;" signature="(ID)V">
							<lines>
								<line branch="false" hits="1" number="61" />
								<line branch="false" hits="1" number="62" />
								<line branch="false" hits="1" number="63" />
								<line branch="false" hits="1" number="64" />
								<line branch="false" hits="1" number="65" />
								<line branch="false" hits="1" number="66" />
								<line branch="false" hits="1" number="67" />
								<line branch="false" hits="1" number="68" />
								<line branch="false" hits="1" number="69" />
							</lines>
						</method>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/Field.java" line-rate="1.0" name="org.apache.commons.math.Field">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/FieldElement.java" line-rate="1.0" name="org.apache.commons.math.FieldElement">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/FunctionEvaluationException.java" line-rate="0.0" name="org.apache.commons.math.FunctionEvaluationException">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.5" filename="org/apache/commons/math/MathException.java" line-rate="0.0" name="org.apache.commons.math.MathException">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0196078431372549" name="org.apache.commons.math.MathRuntimeException">
					<methods>
						<method branch-rate="1.0" line-rate="1.0" name="createIllegalArgumentException" signature="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;">
							<lines>
								<line branch="false" hits="2" number="305" />
							</lines>
						</method>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$1">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$10">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$2">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$3">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.3333333333333333" name="org.apache.commons.math.MathRuntimeException$4">
					<methods>
						<method branch-rate="1.0" line-rate="1.0" name="&lt;init&gt;" signature="(Ljava/lang/String;[Ljava/lang/Object;)V">
							<lines>
								<line branch="false" hits="2" number="305" />
							</lines>
						</method>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$5">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$6">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$7">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$8">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.1363636363636365" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$9">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/MaxEvaluationsExceededException.java" line-rate="0.0" name="org.apache.commons.math.MaxEvaluationsExceededException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/MaxIterationsExceededException.java" line-rate="0.0" name="org.apache.commons.math.MaxIterationsExceededException">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="1.0" complexity="1.0" line-rate="1.0" name="org.apache.commons.math.analysis">
			<classes>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/DifferentiableUnivariateRealFunction.java" line-rate="1.0" name="org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/UnivariateRealFunction.java" line-rate="1.0" name="org.apache.commons.math.analysis.UnivariateRealFunction">
					<methods>
					</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.3918918918918919" complexity="2.46875" line-rate="0.5466666666666666" name="org.apache.commons.math.analysis.solvers">
			<classes>
				<class branch-rate="0.46153846153846156" complexity="5.714285714285714" filename="org/apache/commons/math/analysis/solvers/BrentSolver.java" line-rate="0.64" name="org.apache.commons.math.analysis.solvers.BrentSolver">
					<methods>
						<method branch-rate="1.0" line-rate="1.0" name="&lt;init&gt;" signature="()V">
							<lines>
								<line branch="false" hits="1" number="56" />
								<line branch="false" hits="1" number="57" />
							</lines>
						</method>
						<method branch-rate="0.3" line-rate="0.5" name="solve" signature="(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D">
							<lines>
								<line branch="false" hits="2" number="158" />
								<line branch="false" hits="2" number="159" />
								<line branch="false" hits="1" number="161" />
								<line branch="false" hits="1" number="163" />
								<line branch="false" hits="1" number="164" />
								<line branch="false" hits="1" number="167" />
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="168">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="170">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="173">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="178" />
								</lines>
						</method>
						<method branch-rate="0.5" line-rate="0.5789473684210527" name="solve" signature="(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D">
							<lines>
								<line branch="false" hits="1" number="97" />
								<line branch="false" hits="1" number="98" />
								<line branch="false" hits="1" number="101" />
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="102">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="108" />
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="109">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="115">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="120" />
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="121">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="127">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="132" />
							</lines>
						</method>
						<method branch-rate="0.5" line-rate="0.7454545454545455" name="solve" signature="(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D">
							<lines>
								<line branch="false" hits="1" number="221" />
								<line branch="false" hits="1" number="222" />
								<line branch="false" hits="1" number="224" />
								<line branch="true" condition-coverage="50% (1/2)" hits="20" number="225">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="true" condition-coverage="50% (1/2)" hits="20" number="226">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="20" number="228" />
								<line branch="false" hits="20" number="229" />
								<line branch="false" hits="20" number="230" />
								<line branch="false" hits="20" number="231" />
								<line branch="false" hits="20" number="232" />
								<line branch="false" hits="20" number="233" />
								<line branch="true" condition-coverage="50% (1/2)" hits="20" number="235">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="20" number="242" />
								<line branch="false" hits="20" number="243" />
								<line branch="true" condition-coverage="100% (2/2)" hits="20" number="245">
									<conditions>
										<condition coverage="100%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="246" />
								<line branch="false" hits="1" number="247" />
								<line branch="true" condition-coverage="50% (2/4)" hits="19" number="249">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
										<condition coverage="50%" number="1" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="19" number="255" />
								<line branch="true" condition-coverage="50% (1/2)" hits="19" number="261">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="19" number="263" />
								<line branch="false" hits="19" number="264" />
								<line branch="true" condition-coverage="50% (1/2)" hits="19" number="272">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="19" number="273" />
								<line branch="true" condition-coverage="25% (1/4)" hits="19" number="277">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
										<condition coverage="0%" number="1" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="19" number="282" />
								<line branch="false" hits="19" number="283" />
								<line branch="false" hits="19" number="290" />
								<line branch="false" hits="19" number="291" />
								<line branch="true" condition-coverage="100% (2/2)" hits="19" number="293">
									<conditions>
										<condition coverage="100%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="18" number="294" />
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="295">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="296" />
								<line branch="false" hits="19" number="300" />
								<line branch="true" condition-coverage="50% (3/6)" hits="19" number="301">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
										<condition coverage="50%" number="1" type="jump" />
										<condition coverage="50%" number="2" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="19" number="302" />
								<line branch="false" hits="19" number="303" />
								<line branch="false" hits="19" number="304" />
								<line branch="false" hits="19" number="305" />
								<line branch="false" hits="19" number="307" />
								<line branch="false" hits="19" number="308" />
								</lines>
						</method>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java" line-rate="1.0" name="org.apache.commons.math.analysis.solvers.UnivariateRealSolver">
					<methods>
					</methods>
					</class>
				<class branch-rate="0.22727272727272727" complexity="1.875" filename="org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java" line-rate="0.36" name="org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl">
					<methods>
						<method branch-rate="1.0" line-rate="1.0" name="&lt;init&gt;" signature="(ID)V">
							<lines>
								<line branch="false" hits="1" number="41" />
								<line branch="false" hits="1" number="93" />
								<line branch="false" hits="1" number="94" />
								<line branch="false" hits="1" number="95" />
								<line branch="false" hits="1" number="96" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="clearResult" signature="()V">
							<lines>
								<line branch="false" hits="3" number="165" />
								<line branch="false" hits="3" number="166" />
								<line branch="false" hits="3" number="167" />
							</lines>
						</method>
						<method branch-rate="0.5" line-rate="1.0" name="isSequence" signature="(DDD)Z">
							<lines>
								<line branch="true" condition-coverage="50% (2/4)" hits="1" number="196">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
										<condition coverage="50%" number="1" type="jump" />
									</conditions>
								</line>
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="setResult" signature="(DI)V">
							<lines>
								<line branch="false" hits="1" number="141" />
								<line branch="false" hits="1" number="142" />
								<line branch="false" hits="1" number="143" />
								<line branch="false" hits="1" number="144" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="verifyInterval" signature="(DD)V">
							<lines>
								<line branch="true" condition-coverage="100% (2/2)" hits="2" number="208">
									<conditions>
										<condition coverage="100%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="209" />
								<line branch="false" hits="1" number="213" />
							</lines>
						</method>
						<method branch-rate="0.5" line-rate="0.6666666666666666" name="verifySequence" signature="(DDD)V">
							<lines>
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="225">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="230" />
							</lines>
						</method>
					</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="1.9508196721311475" line-rate="0.0" name="org.apache.commons.math.fraction">
			<classes>
				<class branch-rate="0.0" complexity="2.074074074074074" filename="org/apache/commons/math/fraction/BigFraction.java" line-rate="0.0" name="org.apache.commons.math.fraction.BigFraction">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/fraction/BigFractionField.java" line-rate="0.0" name="org.apache.commons.math.fraction.BigFractionField">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/fraction/BigFractionField.java" line-rate="1.0" name="org.apache.commons.math.fraction.BigFractionField$1">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/fraction/BigFractionField.java" line-rate="0.0" name="org.apache.commons.math.fraction.BigFractionField$LazyHolder">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/fraction/FractionConversionException.java" line-rate="0.0" name="org.apache.commons.math.fraction.FractionConversionException">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="2.2485632183908044" line-rate="0.0" name="org.apache.commons.math.linear">
			<classes>
				<class branch-rate="0.0" complexity="3.041095890410959" filename="org/apache/commons/math/linear/AbstractFieldMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractFieldMatrix">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="3.041095890410959" filename="org/apache/commons/math/linear/AbstractFieldMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractFieldMatrix$1">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="3.041095890410959" filename="org/apache/commons/math/linear/AbstractFieldMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractFieldMatrix$2">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="3.041095890410959" filename="org/apache/commons/math/linear/AbstractFieldMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractFieldMatrix$3">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="2.6486486486486487" filename="org/apache/commons/math/linear/AbstractRealMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractRealMatrix">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="2.6486486486486487" filename="org/apache/commons/math/linear/AbstractRealMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractRealMatrix$1">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="2.6486486486486487" filename="org/apache/commons/math/linear/AbstractRealMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractRealMatrix$2">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="2.6486486486486487" filename="org/apache/commons/math/linear/AbstractRealMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractRealMatrix$3">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="2.6486486486486487" filename="org/apache/commons/math/linear/AbstractRealMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractRealMatrix$4">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="2.6486486486486487" filename="org/apache/commons/math/linear/AbstractRealMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.AbstractRealMatrix$5">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/AnyMatrix.java" line-rate="1.0" name="org.apache.commons.math.linear.AnyMatrix">
					<methods>
					</methods>
					</class>
				<class branch-rate="0.0" complexity="3.1470588235294117" filename="org/apache/commons/math/linear/Array2DRowFieldMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.Array2DRowFieldMatrix">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="3.1470588235294117" filename="org/apache/commons/math/linear/Array2DRowRealMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.Array2DRowRealMatrix">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/BigMatrix.java" line-rate="1.0" name="org.apache.commons.math.linear.BigMatrix">
					<methods>
					</methods>
					</class>
				<class branch-rate="0.0" complexity="4.096153846153846" filename="org/apache/commons/math/linear/BlockFieldMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.BlockFieldMatrix">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="4.111111111111111" filename="org/apache/commons/math/linear/BlockRealMatrix.java" line-rate="0.0" name="org.apache.commons.math.linear.BlockRealMatrix">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/DefaultFieldMatrixChangingVisitor.java" line-rate="0.0" name="org.apache.commons.math.linear.DefaultFieldMatrixChangingVisitor">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/DefaultFieldMatrixPreservingVisitor.java" line-rate="0.0" name="org.apache.commons.math.linear.DefaultFieldMatrixPreservingVisitor">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/FieldDecompositionSolver.java" line-rate="1.0" name="org.apache.commons.math.linear.FieldDecompositionSolver">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/FieldLUDecomposition.java" line-rate="1.0" name="org.apache.commons.math.linear.FieldLUDecomposition">
					<methods>
					</methods>
					</class>
				<class branch-rate="0.0" complexity="5.5" filename="org/apache/commons/math/linear/FieldLUDecompositionImpl.java" line-rate="0.0" name="org.apache.commons.math.linear.FieldLUDecompositionImpl">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="5.5" filename="org/apache/commons/math/linear/FieldLUDecompositionImpl.java" line-rate="1.0" name="org.apache.commons.math.linear.FieldLUDecompositionImpl$1">
					<methods>
					</methods>
					</class>
				<class branch-rate="0.0" complexity="5.5" filename="org/apache/commons/math/linear/FieldLUDecompositionImpl.java" line-rate="0.0" name="org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/FieldMatrix.java" line-rate="1.0" name="org.apache.commons.math.linear.FieldMatrix">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/FieldMatrixChangingVisitor.java" line-rate="1.0" name="org.apache.commons.math.linear.FieldMatrixChangingVisitor">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/FieldMatrixPreservingVisitor.java" line-rate="1.0" name="org.apache.commons.math.linear.FieldMatrixPreservingVisitor">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/FieldVector.java" line-rate="1.0" name="org.apache.commons.math.linear.FieldVector">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/InvalidMatrixException.java" line-rate="0.0" name="org.apache.commons.math.linear.InvalidMatrixException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/MatrixIndexException.java" line-rate="0.0" name="org.apache.commons.math.linear.MatrixIndexException">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="2.276595744680851" filename="org/apache/commons/math/linear/MatrixUtils.java" line-rate="0.0" name="org.apache.commons.math.linear.MatrixUtils">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="2.276595744680851" filename="org/apache/commons/math/linear/MatrixUtils.java" line-rate="0.0" name="org.apache.commons.math.linear.MatrixUtils$BigFractionMatrixConverter">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="2.276595744680851" filename="org/apache/commons/math/linear/MatrixUtils.java" line-rate="0.0" name="org.apache.commons.math.linear.MatrixUtils$FractionMatrixConverter">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/NonSquareMatrixException.java" line-rate="0.0" name="org.apache.commons.math.linear.NonSquareMatrixException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/RealMatrix.java" line-rate="1.0" name="org.apache.commons.math.linear.RealMatrix">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/RealMatrixChangingVisitor.java" line-rate="1.0" name="org.apache.commons.math.linear.RealMatrixChangingVisitor">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/RealMatrixPreservingVisitor.java" line-rate="1.0" name="org.apache.commons.math.linear.RealMatrixPreservingVisitor">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/RealVector.java" line-rate="1.0" name="org.apache.commons.math.linear.RealVector">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/RealVector.java" line-rate="0.0" name="org.apache.commons.math.linear.RealVector$Entry">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/SingularMatrixException.java" line-rate="0.0" name="org.apache.commons.math.linear.SingularMatrixException">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="1.3384615384615384" line-rate="0.0" name="org.apache.commons.math.ode">
			<classes>
				<class branch-rate="0.0" complexity="1.5416666666666667" filename="org/apache/commons/math/ode/AbstractIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.AbstractIntegrator">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.5416666666666667" filename="org/apache/commons/math/ode/AbstractIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.AbstractIntegrator$EndTimeChecker">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/DerivativeException.java" line-rate="0.0" name="org.apache.commons.math.ode.DerivativeException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/FirstOrderDifferentialEquations.java" line-rate="1.0" name="org.apache.commons.math.ode.FirstOrderDifferentialEquations">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/FirstOrderIntegrator.java" line-rate="1.0" name="org.apache.commons.math.ode.FirstOrderIntegrator">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/IntegratorException.java" line-rate="0.0" name="org.apache.commons.math.ode.IntegratorException">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.4090909090909092" filename="org/apache/commons/math/ode/MultistepIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.MultistepIntegrator">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.4090909090909092" filename="org/apache/commons/math/ode/MultistepIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.MultistepIntegrator$CountingDifferentialEquations">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.4090909090909092" filename="org/apache/commons/math/ode/MultistepIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.MultistepIntegrator$InitializationCompletedMarkerException">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.4090909090909092" filename="org/apache/commons/math/ode/MultistepIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.MultistepIntegrator$NordsieckInitializer">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.4090909090909092" filename="org/apache/commons/math/ode/MultistepIntegrator.java" line-rate="1.0" name="org.apache.commons.math.ode.MultistepIntegrator$NordsieckTransformer">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/ODEIntegrator.java" line-rate="1.0" name="org.apache.commons.math.ode.ODEIntegrator">
					<methods>
					</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="3.3214285714285716" line-rate="0.0" name="org.apache.commons.math.ode.events">
			<classes>
				<class branch-rate="0.0" complexity="3.5454545454545454" filename="org/apache/commons/math/ode/events/CombinedEventsManager.java" line-rate="0.0" name="org.apache.commons.math.ode.events.CombinedEventsManager">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/events/EventException.java" line-rate="0.0" name="org.apache.commons.math.ode.events.EventException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/events/EventHandler.java" line-rate="1.0" name="org.apache.commons.math.ode.events.EventHandler">
					<methods>
					</methods>
					</class>
				<class branch-rate="0.0" complexity="4.083333333333333" filename="org/apache/commons/math/ode/events/EventState.java" line-rate="0.0" name="org.apache.commons.math.ode.events.EventState">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="4.083333333333333" filename="org/apache/commons/math/ode/events/EventState.java" line-rate="0.0" name="org.apache.commons.math.ode.events.EventState$1">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="2.918032786885246" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff">
			<classes>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.AdamsIntegrator">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="3.4285714285714284" filename="org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="3.4285714285714284" filename="org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator$Corrector">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="2.25" filename="org/apache/commons/math/ode/nonstiff/AdamsNordsieckTransformer.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.AdamsNordsieckTransformer">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="2.25" filename="org/apache/commons/math/ode/nonstiff/AdamsNordsieckTransformer.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.AdamsNordsieckTransformer$1">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="3.4545454545454546" filename="org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.75" filename="org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="3.6666666666666665" filename="org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="3.1818181818181817" filename="org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="3.4" filename="org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java" line-rate="0.0" name="org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="1.68" line-rate="0.0" name="org.apache.commons.math.ode.sampling">
			<classes>
				<class branch-rate="0.0" complexity="1.6818181818181819" filename="org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java" line-rate="0.0" name="org.apache.commons.math.ode.sampling.AbstractStepInterpolator">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/sampling/DummyStepInterpolator.java" line-rate="0.0" name="org.apache.commons.math.ode.sampling.DummyStepInterpolator">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="2.9" filename="org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java" line-rate="0.0" name="org.apache.commons.math.ode.sampling.NordsieckStepInterpolator">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/sampling/StepHandler.java" line-rate="1.0" name="org.apache.commons.math.ode.sampling.StepHandler">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/sampling/StepInterpolator.java" line-rate="1.0" name="org.apache.commons.math.ode.sampling.StepInterpolator">
					<methods>
					</methods>
					</class>
			</classes>
		</package>
	</packages>
</coverage>