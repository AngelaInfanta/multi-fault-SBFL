diff --git a/defects4j.build.properties b/defects4j.build.properties
index 870c354..429c816 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=27
+d4j.classes.instrument=org/apache/commons/lang3/StringUtils.class,org/apache/commons/lang3/StringUtils\$*.class,org/apache/commons/lang3/SystemUtils.class,org/apache/commons/lang3/SystemUtils\$*.class,org/apache/commons/lang3/math/Fraction.class,org/apache/commons/lang3/math/Fraction\$*.class,org/apache/commons/lang3/math/NumberUtils.class,org/apache/commons/lang3/math/NumberUtils\$*.class
 d4j.classes.modified=org.apache.commons.lang3.math.NumberUtils
 d4j.classes.relevant=org.apache.commons.lang3.math.NumberUtils,org.apache.commons.lang3.StringUtils,org.apache.commons.lang3.SystemUtils
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/lang3/math/FractionTest.java b/src/test/java/org/apache/commons/lang3/math/FractionTest.java
index 3116f4e..8e21e7c 100644
--- a/src/test/java/org/apache/commons/lang3/math/FractionTest.java
+++ b/src/test/java/org/apache/commons/lang3/math/FractionTest.java
@@ -330,6 +330,11 @@ public class FractionTest extends TestCase {
             f = Fraction.getReducedFraction(-7, Integer.MIN_VALUE);  
             fail("Expecting ArithmeticException");
         } catch (ArithmeticException ex) {}      
+
+        // LANG-662
+        f = Fraction.getReducedFraction(Integer.MIN_VALUE, 2);
+        assertEquals(Integer.MIN_VALUE / 2, f.getNumerator());
+        assertEquals(1, f.getDenominator());
     }
 
     public void testFactory_double() {
@@ -643,6 +648,11 @@ public class FractionTest extends TestCase {
         assertEquals(0, result.getNumerator());
         assertEquals(1, result.getDenominator());
         assertSame(result, Fraction.ZERO);
+
+        f = Fraction.getFraction(Integer.MIN_VALUE, 2);
+        result = f.reduce();
+        assertEquals(Integer.MIN_VALUE / 2, result.getNumerator());
+        assertEquals(1, result.getDenominator());
     }
     
     public void testInvert() {
