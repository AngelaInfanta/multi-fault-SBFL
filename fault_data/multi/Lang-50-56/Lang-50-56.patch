diff --git a/defects4j.build.properties b/defects4j.build.properties
index f1435ac..1d5a13d 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=56
+d4j.classes.instrument=org/apache/commons/lang/SerializationException.class,org/apache/commons/lang/SerializationException\$*.class,org/apache/commons/lang/SerializationUtils.class,org/apache/commons/lang/SerializationUtils\$*.class,org/apache/commons/lang/exception/Nestable.class,org/apache/commons/lang/exception/Nestable\$*.class,org/apache/commons/lang/exception/NestableRuntimeException.class,org/apache/commons/lang/exception/NestableRuntimeException\$*.class,org/apache/commons/lang/time/FastDateFormat.class,org/apache/commons/lang/time/FastDateFormat\$*.class
 d4j.classes.modified=org.apache.commons.lang.time.FastDateFormat
 d4j.classes.relevant=org.apache.commons.lang.exception.Nestable,org.apache.commons.lang.exception.NestableRuntimeException,org.apache.commons.lang.SerializationException,org.apache.commons.lang.SerializationUtils,org.apache.commons.lang.time.FastDateFormat
 d4j.dir.src.classes=src/java
diff --git a/src/test/org/apache/commons/lang/time/FastDateFormatTest.java b/src/test/org/apache/commons/lang/time/FastDateFormatTest.java
index 1bc6eff..779c019 100644
--- a/src/test/org/apache/commons/lang/time/FastDateFormatTest.java
+++ b/src/test/org/apache/commons/lang/time/FastDateFormatTest.java
@@ -287,4 +287,42 @@ public class FastDateFormatTest extends TestCase {
         FastDateFormat format = FastDateFormat.getInstance("yyyy/MM/dd");
         format = (FastDateFormat) SerializationUtils.deserialize( SerializationUtils.serialize( format ) );
     }
+    public void test_changeDefault_Locale_DateInstance() {
+        Locale realDefaultLocale = Locale.getDefault();
+        try {
+            Locale.setDefault(Locale.US);
+            FastDateFormat format1 = FastDateFormat.getDateInstance(FastDateFormat.FULL, Locale.GERMANY);
+            FastDateFormat format2 = FastDateFormat.getDateInstance(FastDateFormat.FULL);
+            Locale.setDefault(Locale.GERMANY);
+            FastDateFormat format3 = FastDateFormat.getDateInstance(FastDateFormat.FULL);
+
+            assertSame(Locale.GERMANY, format1.getLocale());
+            assertSame(Locale.US, format2.getLocale());
+            assertSame(Locale.GERMANY, format3.getLocale());
+            assertTrue(format1 != format2); // -- junit 3.8 version -- assertFalse(format1 == format2);
+            assertTrue(format2 != format3);
+
+        } finally {
+            Locale.setDefault(realDefaultLocale);
+        }
+    }
+    public void test_changeDefault_Locale_DateTimeInstance() {
+        Locale realDefaultLocale = Locale.getDefault();
+        try {
+            Locale.setDefault(Locale.US);
+            FastDateFormat format1 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL, Locale.GERMANY);
+            FastDateFormat format2 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);
+            Locale.setDefault(Locale.GERMANY);
+            FastDateFormat format3 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);
+
+            assertSame(Locale.GERMANY, format1.getLocale());
+            assertSame(Locale.US, format2.getLocale());
+            assertSame(Locale.GERMANY, format3.getLocale());
+            assertTrue(format1 != format2); // -- junit 3.8 version -- assertFalse(format1 == format2);
+            assertTrue(format2 != format3);
+
+        } finally {
+            Locale.setDefault(realDefaultLocale);
+        }
+    }
 }
