diff --git a/defects4j.build.properties b/defects4j.build.properties
index 1134c24..30c890d 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=21
+d4j.classes.instrument=org/jfree/chart/util/PublicCloneable.class,org/jfree/chart/util/PublicCloneable\$*.class,org/jfree/data/KeyedObject.class,org/jfree/data/KeyedObject\$*.class,org/jfree/data/KeyedObjects.class,org/jfree/data/KeyedObjects\$*.class,org/jfree/data/KeyedObjects2D.class,org/jfree/data/KeyedObjects2D\$*.class,org/jfree/data/KeyedValues2D.class,org/jfree/data/KeyedValues2D\$*.class,org/jfree/data/Range.class,org/jfree/data/Range\$*.class,org/jfree/data/RangeInfo.class,org/jfree/data/RangeInfo\$*.class,org/jfree/data/UnknownKeyException.class,org/jfree/data/UnknownKeyException\$*.class,org/jfree/data/Values2D.class,org/jfree/data/Values2D\$*.class,org/jfree/data/category/CategoryDataset.class,org/jfree/data/category/CategoryDataset\$*.class,org/jfree/data/general/AbstractDataset.class,org/jfree/data/general/AbstractDataset\$*.class,org/jfree/data/general/Dataset.class,org/jfree/data/general/Dataset\$*.class,org/jfree/data/general/DatasetChangeEvent.class,org/jfree/data/general/DatasetChangeEvent\$*.class,org/jfree/data/general/DatasetGroup.class,org/jfree/data/general/DatasetGroup\$*.class,org/jfree/data/statistics/BoxAndWhiskerCategoryDataset.class,org/jfree/data/statistics/BoxAndWhiskerCategoryDataset\$*.class,org/jfree/data/statistics/BoxAndWhiskerItem.class,org/jfree/data/statistics/BoxAndWhiskerItem\$*.class,org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.class,org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset\$*.class,org/jfree/data/time/MonthConstants.class,org/jfree/data/time/MonthConstants\$*.class,org/jfree/data/time/RegularTimePeriod.class,org/jfree/data/time/RegularTimePeriod\$*.class,org/jfree/data/time/TimePeriod.class,org/jfree/data/time/TimePeriod\$*.class,org/jfree/data/time/TimePeriodFormatException.class,org/jfree/data/time/TimePeriodFormatException\$*.class,org/jfree/data/time/Week.class,org/jfree/data/time/Week\$*.class
 d4j.classes.modified=org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset
 d4j.classes.relevant=org.jfree.chart.util.PublicCloneable,org.jfree.data.category.CategoryDataset,org.jfree.data.general.AbstractDataset,org.jfree.data.general.Dataset,org.jfree.data.general.DatasetChangeEvent,org.jfree.data.general.DatasetGroup,org.jfree.data.KeyedObject,org.jfree.data.KeyedObjects,org.jfree.data.KeyedObjects2D,org.jfree.data.KeyedValues2D,org.jfree.data.Range,org.jfree.data.RangeInfo,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,org.jfree.data.statistics.BoxAndWhiskerItem,org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset,org.jfree.data.UnknownKeyException,org.jfree.data.Values2D
 d4j.dir.src.classes=source
diff --git a/tests/org/jfree/data/time/junit/WeekTests.java b/tests/org/jfree/data/time/junit/WeekTests.java
index b82201d..5121b05 100644
--- a/tests/org/jfree/data/time/junit/WeekTests.java
+++ b/tests/org/jfree/data/time/junit/WeekTests.java
@@ -477,7 +477,40 @@ public class WeekTests extends TestCase {
     /**
      * A test for a problem in constructing a new Week instance.
      */
-    public void testConstructor() {}
+    public void testConstructor() {
+        Locale savedLocale = Locale.getDefault();
+        TimeZone savedZone = TimeZone.getDefault();
+        Locale.setDefault(new Locale("da", "DK"));
+        TimeZone.setDefault(TimeZone.getTimeZone("Europe/Copenhagen"));
+        GregorianCalendar cal = (GregorianCalendar) Calendar.getInstance(
+                TimeZone.getDefault(), Locale.getDefault());
+
+        // first day of week is monday
+        assertEquals(Calendar.MONDAY, cal.getFirstDayOfWeek());
+        cal.set(2007, Calendar.AUGUST, 26, 1, 0, 0);
+        cal.set(Calendar.MILLISECOND, 0);
+        Date t = cal.getTime();
+        Week w = new Week(t, TimeZone.getTimeZone("Europe/Copenhagen"));
+        assertEquals(34, w.getWeek());
+
+        Locale.setDefault(Locale.US);
+        TimeZone.setDefault(TimeZone.getTimeZone("US/Detroit"));
+        cal = (GregorianCalendar) Calendar.getInstance(TimeZone.getDefault());
+        // first day of week is Sunday
+        assertEquals(Calendar.SUNDAY, cal.getFirstDayOfWeek());
+        cal.set(2007, Calendar.AUGUST, 26, 1, 0, 0);
+        cal.set(Calendar.MILLISECOND, 0);
+
+        t = cal.getTime();
+        w = new Week(t, TimeZone.getTimeZone("Europe/Copenhagen"));
+        assertEquals(35, w.getWeek());
+        w = new Week(t, TimeZone.getTimeZone("Europe/Copenhagen"),
+                new Locale("da", "DK"));
+        assertEquals(34, w.getWeek());
+
+        Locale.setDefault(savedLocale);
+        TimeZone.setDefault(savedZone);
+    }
 // Defects4J: flaky method
 //     public void testConstructor() {
 //         Locale savedLocale = Locale.getDefault();
