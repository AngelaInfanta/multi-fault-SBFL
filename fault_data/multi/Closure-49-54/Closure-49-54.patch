diff --git a/defects4j.build.properties b/defects4j.build.properties
index 05ed01f..b8c9100 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=54
+d4j.classes.instrument=com/google/javascript/jscomp/AbstractCompiler.class,com/google/javascript/jscomp/AbstractCompiler\$*.class,com/google/javascript/jscomp/AbstractMessageFormatter.class,com/google/javascript/jscomp/AbstractMessageFormatter\$*.class,com/google/javascript/jscomp/AnonymousFunctionNamingPolicy.class,com/google/javascript/jscomp/AnonymousFunctionNamingPolicy\$*.class,com/google/javascript/jscomp/AstValidator.class,com/google/javascript/jscomp/AstValidator\$*.class,com/google/javascript/jscomp/BasicErrorManager.class,com/google/javascript/jscomp/BasicErrorManager\$*.class,com/google/javascript/jscomp/ChainableReverseAbstractInterpreter.class,com/google/javascript/jscomp/ChainableReverseAbstractInterpreter\$*.class,com/google/javascript/jscomp/CheckAccessControls.class,com/google/javascript/jscomp/CheckAccessControls\$*.class,com/google/javascript/jscomp/CheckDebuggerStatement.class,com/google/javascript/jscomp/CheckDebuggerStatement\$*.class,com/google/javascript/jscomp/CheckGlobalNames.class,com/google/javascript/jscomp/CheckGlobalNames\$*.class,com/google/javascript/jscomp/CheckGlobalThis.class,com/google/javascript/jscomp/CheckGlobalThis\$*.class,com/google/javascript/jscomp/CheckLevel.class,com/google/javascript/jscomp/CheckLevel\$*.class,com/google/javascript/jscomp/CheckProvides.class,com/google/javascript/jscomp/CheckProvides\$*.class,com/google/javascript/jscomp/CheckRegExp.class,com/google/javascript/jscomp/CheckRegExp\$*.class,com/google/javascript/jscomp/CheckSideEffects.class,com/google/javascript/jscomp/CheckSideEffects\$*.class,com/google/javascript/jscomp/CheckUnreachableCode.class,com/google/javascript/jscomp/CheckUnreachableCode\$*.class,com/google/javascript/jscomp/ClosureCodingConvention.class,com/google/javascript/jscomp/ClosureCodingConvention\$*.class,com/google/javascript/jscomp/CodeChangeHandler.class,com/google/javascript/jscomp/CodeChangeHandler\$*.class,com/google/javascript/jscomp/CodeConsumer.class,com/google/javascript/jscomp/CodeConsumer\$*.class,com/google/javascript/jscomp/CodeGenerator.class,com/google/javascript/jscomp/CodeGenerator\$*.class,com/google/javascript/jscomp/CodePrinter.class,com/google/javascript/jscomp/CodePrinter\$*.class,com/google/javascript/jscomp/CodingConvention.class,com/google/javascript/jscomp/CodingConvention\$*.class,com/google/javascript/jscomp/CodingConventions.class,com/google/javascript/jscomp/CodingConventions\$*.class,com/google/javascript/jscomp/Compiler.class,com/google/javascript/jscomp/Compiler\$*.class,com/google/javascript/jscomp/CompilerInput.class,com/google/javascript/jscomp/CompilerInput\$*.class,com/google/javascript/jscomp/CompilerOptions.class,com/google/javascript/jscomp/CompilerOptions\$*.class,com/google/javascript/jscomp/CompilerPass.class,com/google/javascript/jscomp/CompilerPass\$*.class,com/google/javascript/jscomp/ComposeWarningsGuard.class,com/google/javascript/jscomp/ComposeWarningsGuard\$*.class,com/google/javascript/jscomp/ConstCheck.class,com/google/javascript/jscomp/ConstCheck\$*.class,com/google/javascript/jscomp/ControlFlowAnalysis.class,com/google/javascript/jscomp/ControlFlowAnalysis\$*.class,com/google/javascript/jscomp/ControlFlowGraph.class,com/google/javascript/jscomp/ControlFlowGraph\$*.class,com/google/javascript/jscomp/ControlStructureCheck.class,com/google/javascript/jscomp/ControlStructureCheck\$*.class,com/google/javascript/jscomp/DataFlowAnalysis.class,com/google/javascript/jscomp/DataFlowAnalysis\$*.class,com/google/javascript/jscomp/DefaultCodingConvention.class,com/google/javascript/jscomp/DefaultCodingConvention\$*.class,com/google/javascript/jscomp/DefaultPassConfig.class,com/google/javascript/jscomp/DefaultPassConfig\$*.class,com/google/javascript/jscomp/DefinitionProvider.class,com/google/javascript/jscomp/DefinitionProvider\$*.class,com/google/javascript/jscomp/DefinitionSite.class,com/google/javascript/jscomp/DefinitionSite\$*.class,com/google/javascript/jscomp/DefinitionsRemover.class,com/google/javascript/jscomp/DefinitionsRemover\$*.class,com/google/javascript/jscomp/DiagnosticGroup.class,com/google/javascript/jscomp/DiagnosticGroup\$*.class,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard.class,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard\$*.class,com/google/javascript/jscomp/DiagnosticGroups.class,com/google/javascript/jscomp/DiagnosticGroups\$*.class,com/google/javascript/jscomp/DiagnosticType.class,com/google/javascript/jscomp/DiagnosticType\$*.class,com/google/javascript/jscomp/DisambiguateProperties.class,com/google/javascript/jscomp/DisambiguateProperties\$*.class,com/google/javascript/jscomp/ErrorFormat.class,com/google/javascript/jscomp/ErrorFormat\$*.class,com/google/javascript/jscomp/ErrorManager.class,com/google/javascript/jscomp/ErrorManager\$*.class,com/google/javascript/jscomp/ExpressionDecomposer.class,com/google/javascript/jscomp/ExpressionDecomposer\$*.class,com/google/javascript/jscomp/FlowScope.class,com/google/javascript/jscomp/FlowScope\$*.class,com/google/javascript/jscomp/FunctionArgumentInjector.class,com/google/javascript/jscomp/FunctionArgumentInjector\$*.class,com/google/javascript/jscomp/FunctionInjector.class,com/google/javascript/jscomp/FunctionInjector\$*.class,com/google/javascript/jscomp/FunctionToBlockMutator.class,com/google/javascript/jscomp/FunctionToBlockMutator\$*.class,com/google/javascript/jscomp/FunctionTypeBuilder.class,com/google/javascript/jscomp/FunctionTypeBuilder\$*.class,com/google/javascript/jscomp/GoogleCodingConvention.class,com/google/javascript/jscomp/GoogleCodingConvention\$*.class,com/google/javascript/jscomp/HotSwapCompilerPass.class,com/google/javascript/jscomp/HotSwapCompilerPass\$*.class,com/google/javascript/jscomp/InferJSDocInfo.class,com/google/javascript/jscomp/InferJSDocInfo\$*.class,com/google/javascript/jscomp/InlineCostEstimator.class,com/google/javascript/jscomp/InlineCostEstimator\$*.class,com/google/javascript/jscomp/InlineFunctions.class,com/google/javascript/jscomp/InlineFunctions\$*.class,com/google/javascript/jscomp/JSError.class,com/google/javascript/jscomp/JSError\$*.class,com/google/javascript/jscomp/JSModule.class,com/google/javascript/jscomp/JSModule\$*.class,com/google/javascript/jscomp/JSModuleGraph.class,com/google/javascript/jscomp/JSModuleGraph\$*.class,com/google/javascript/jscomp/JSSourceFile.class,com/google/javascript/jscomp/JSSourceFile\$*.class,com/google/javascript/jscomp/JoinOp.class,com/google/javascript/jscomp/JoinOp\$*.class,com/google/javascript/jscomp/JsAst.class,com/google/javascript/jscomp/JsAst\$*.class,com/google/javascript/jscomp/LatticeElement.class,com/google/javascript/jscomp/LatticeElement\$*.class,com/google/javascript/jscomp/LightweightMessageFormatter.class,com/google/javascript/jscomp/LightweightMessageFormatter\$*.class,com/google/javascript/jscomp/LineNumberCheck.class,com/google/javascript/jscomp/LineNumberCheck\$*.class,com/google/javascript/jscomp/LinkedFlowScope.class,com/google/javascript/jscomp/LinkedFlowScope\$*.class,com/google/javascript/jscomp/LoggerErrorManager.class,com/google/javascript/jscomp/LoggerErrorManager\$*.class,com/google/javascript/jscomp/MakeDeclaredNamesUnique.class,com/google/javascript/jscomp/MakeDeclaredNamesUnique\$*.class,com/google/javascript/jscomp/MarkNoSideEffectCalls.class,com/google/javascript/jscomp/MarkNoSideEffectCalls\$*.class,com/google/javascript/jscomp/MemoizedScopeCreator.class,com/google/javascript/jscomp/MemoizedScopeCreator\$*.class,com/google/javascript/jscomp/MessageFormatter.class,com/google/javascript/jscomp/MessageFormatter\$*.class,com/google/javascript/jscomp/NodeTraversal.class,com/google/javascript/jscomp/NodeTraversal\$*.class,com/google/javascript/jscomp/NodeUtil.class,com/google/javascript/jscomp/NodeUtil\$*.class,com/google/javascript/jscomp/Normalize.class,com/google/javascript/jscomp/Normalize\$*.class,com/google/javascript/jscomp/PassConfig.class,com/google/javascript/jscomp/PassConfig\$*.class,com/google/javascript/jscomp/PassFactory.class,com/google/javascript/jscomp/PassFactory\$*.class,com/google/javascript/jscomp/PrepareAst.class,com/google/javascript/jscomp/PrepareAst\$*.class,com/google/javascript/jscomp/ProcessDefines.class,com/google/javascript/jscomp/ProcessDefines\$*.class,com/google/javascript/jscomp/ProcessTweaks.class,com/google/javascript/jscomp/ProcessTweaks\$*.class,com/google/javascript/jscomp/PropertyRenamingPolicy.class,com/google/javascript/jscomp/PropertyRenamingPolicy\$*.class,com/google/javascript/jscomp/ReferenceCollectingCallback.class,com/google/javascript/jscomp/ReferenceCollectingCallback\$*.class,com/google/javascript/jscomp/Region.class,com/google/javascript/jscomp/Region\$*.class,com/google/javascript/jscomp/RenameLabels.class,com/google/javascript/jscomp/RenameLabels\$*.class,com/google/javascript/jscomp/ReverseAbstractInterpreter.class,com/google/javascript/jscomp/ReverseAbstractInterpreter\$*.class,com/google/javascript/jscomp/RhinoErrorReporter.class,com/google/javascript/jscomp/RhinoErrorReporter\$*.class,com/google/javascript/jscomp/Scope.class,com/google/javascript/jscomp/Scope\$*.class,com/google/javascript/jscomp/ScopeCreator.class,com/google/javascript/jscomp/ScopeCreator\$*.class,com/google/javascript/jscomp/SemanticReverseAbstractInterpreter.class,com/google/javascript/jscomp/SemanticReverseAbstractInterpreter\$*.class,com/google/javascript/jscomp/SimpleDefinitionFinder.class,com/google/javascript/jscomp/SimpleDefinitionFinder\$*.class,com/google/javascript/jscomp/SourceAst.class,com/google/javascript/jscomp/SourceAst\$*.class,com/google/javascript/jscomp/SourceExcerptProvider.class,com/google/javascript/jscomp/SourceExcerptProvider\$*.class,com/google/javascript/jscomp/SourceFile.class,com/google/javascript/jscomp/SourceFile\$*.class,com/google/javascript/jscomp/SourceMap.class,com/google/javascript/jscomp/SourceMap\$*.class,com/google/javascript/jscomp/SpecializationAwareCompilerPass.class,com/google/javascript/jscomp/SpecializationAwareCompilerPass\$*.class,com/google/javascript/jscomp/StrictModeCheck.class,com/google/javascript/jscomp/StrictModeCheck\$*.class,com/google/javascript/jscomp/SuppressDocWarningsGuard.class,com/google/javascript/jscomp/SuppressDocWarningsGuard\$*.class,com/google/javascript/jscomp/SyntacticScopeCreator.class,com/google/javascript/jscomp/SyntacticScopeCreator\$*.class,com/google/javascript/jscomp/Tracer.class,com/google/javascript/jscomp/Tracer\$*.class,com/google/javascript/jscomp/TypeCheck.class,com/google/javascript/jscomp/TypeCheck\$*.class,com/google/javascript/jscomp/TypeInference.class,com/google/javascript/jscomp/TypeInference\$*.class,com/google/javascript/jscomp/TypeInferencePass.class,com/google/javascript/jscomp/TypeInferencePass\$*.class,com/google/javascript/jscomp/TypeValidator.class,com/google/javascript/jscomp/TypeValidator\$*.class,com/google/javascript/jscomp/TypedCodeGenerator.class,com/google/javascript/jscomp/TypedCodeGenerator\$*.class,com/google/javascript/jscomp/TypedScopeCreator.class,com/google/javascript/jscomp/TypedScopeCreator\$*.class,com/google/javascript/jscomp/UseSite.class,com/google/javascript/jscomp/UseSite\$*.class,com/google/javascript/jscomp/VarCheck.class,com/google/javascript/jscomp/VarCheck\$*.class,com/google/javascript/jscomp/VariableReferenceCheck.class,com/google/javascript/jscomp/VariableReferenceCheck\$*.class,com/google/javascript/jscomp/VariableRenamingPolicy.class,com/google/javascript/jscomp/VariableRenamingPolicy\$*.class,com/google/javascript/jscomp/WarningsGuard.class,com/google/javascript/jscomp/WarningsGuard\$*.class,com/google/javascript/jscomp/deps/DependencyInfo.class,com/google/javascript/jscomp/deps/DependencyInfo\$*.class,com/google/javascript/jscomp/deps/SortedDependencies.class,com/google/javascript/jscomp/deps/SortedDependencies\$*.class,com/google/javascript/jscomp/graph/AdjacencyGraph.class,com/google/javascript/jscomp/graph/AdjacencyGraph\$*.class,com/google/javascript/jscomp/graph/Annotatable.class,com/google/javascript/jscomp/graph/Annotatable\$*.class,com/google/javascript/jscomp/graph/Annotation.class,com/google/javascript/jscomp/graph/Annotation\$*.class,com/google/javascript/jscomp/graph/DiGraph.class,com/google/javascript/jscomp/graph/DiGraph\$*.class,com/google/javascript/jscomp/graph/Graph.class,com/google/javascript/jscomp/graph/Graph\$*.class,com/google/javascript/jscomp/graph/GraphNode.class,com/google/javascript/jscomp/graph/GraphNode\$*.class,com/google/javascript/jscomp/graph/GraphvizGraph.class,com/google/javascript/jscomp/graph/GraphvizGraph\$*.class,com/google/javascript/jscomp/graph/LinkedDirectedGraph.class,com/google/javascript/jscomp/graph/LinkedDirectedGraph\$*.class,com/google/javascript/jscomp/graph/SubGraph.class,com/google/javascript/jscomp/graph/SubGraph\$*.class,com/google/javascript/jscomp/parsing/Annotation.class,com/google/javascript/jscomp/parsing/Annotation\$*.class,com/google/javascript/jscomp/parsing/Config.class,com/google/javascript/jscomp/parsing/Config\$*.class,com/google/javascript/jscomp/parsing/IRFactory.class,com/google/javascript/jscomp/parsing/IRFactory\$*.class,com/google/javascript/jscomp/parsing/JsDocInfoParser.class,com/google/javascript/jscomp/parsing/JsDocInfoParser\$*.class,com/google/javascript/jscomp/parsing/JsDocToken.class,com/google/javascript/jscomp/parsing/JsDocToken\$*.class,com/google/javascript/jscomp/parsing/JsDocTokenStream.class,com/google/javascript/jscomp/parsing/JsDocTokenStream\$*.class,com/google/javascript/jscomp/parsing/ParserRunner.class,com/google/javascript/jscomp/parsing/ParserRunner\$*.class,com/google/javascript/jscomp/parsing/TypeSafeDispatcher.class,com/google/javascript/jscomp/parsing/TypeSafeDispatcher\$*.class,com/google/javascript/rhino/Context.class,com/google/javascript/rhino/Context\$*.class,com/google/javascript/rhino/EcmaError.class,com/google/javascript/rhino/EcmaError\$*.class,com/google/javascript/rhino/ErrorReporter.class,com/google/javascript/rhino/ErrorReporter\$*.class,com/google/javascript/rhino/EvaluatorException.class,com/google/javascript/rhino/EvaluatorException\$*.class,com/google/javascript/rhino/FunctionNode.class,com/google/javascript/rhino/FunctionNode\$*.class,com/google/javascript/rhino/InputId.class,com/google/javascript/rhino/InputId\$*.class,com/google/javascript/rhino/JSDocInfo.class,com/google/javascript/rhino/JSDocInfo\$*.class,com/google/javascript/rhino/JSDocInfoBuilder.class,com/google/javascript/rhino/JSDocInfoBuilder\$*.class,com/google/javascript/rhino/JSTypeExpression.class,com/google/javascript/rhino/JSTypeExpression\$*.class,com/google/javascript/rhino/Node.class,com/google/javascript/rhino/Node\$*.class,com/google/javascript/rhino/RhinoException.class,com/google/javascript/rhino/RhinoException\$*.class,com/google/javascript/rhino/ScriptOrFnNode.class,com/google/javascript/rhino/ScriptOrFnNode\$*.class,com/google/javascript/rhino/ScriptRuntime.class,com/google/javascript/rhino/ScriptRuntime\$*.class,com/google/javascript/rhino/Token.class,com/google/javascript/rhino/Token\$*.class,com/google/javascript/rhino/TokenStream.class,com/google/javascript/rhino/TokenStream\$*.class,com/google/javascript/rhino/jstype/AllType.class,com/google/javascript/rhino/jstype/AllType\$*.class,com/google/javascript/rhino/jstype/ArrowType.class,com/google/javascript/rhino/jstype/ArrowType\$*.class,com/google/javascript/rhino/jstype/BooleanType.class,com/google/javascript/rhino/jstype/BooleanType\$*.class,com/google/javascript/rhino/jstype/EnumElementType.class,com/google/javascript/rhino/jstype/EnumElementType\$*.class,com/google/javascript/rhino/jstype/EnumType.class,com/google/javascript/rhino/jstype/EnumType\$*.class,com/google/javascript/rhino/jstype/ErrorFunctionType.class,com/google/javascript/rhino/jstype/ErrorFunctionType\$*.class,com/google/javascript/rhino/jstype/FunctionBuilder.class,com/google/javascript/rhino/jstype/FunctionBuilder\$*.class,com/google/javascript/rhino/jstype/FunctionParamBuilder.class,com/google/javascript/rhino/jstype/FunctionParamBuilder\$*.class,com/google/javascript/rhino/jstype/FunctionType.class,com/google/javascript/rhino/jstype/FunctionType\$*.class,com/google/javascript/rhino/jstype/IndexedType.class,com/google/javascript/rhino/jstype/IndexedType\$*.class,com/google/javascript/rhino/jstype/InstanceObjectType.class,com/google/javascript/rhino/jstype/InstanceObjectType\$*.class,com/google/javascript/rhino/jstype/JSType.class,com/google/javascript/rhino/jstype/JSType\$*.class,com/google/javascript/rhino/jstype/JSTypeNative.class,com/google/javascript/rhino/jstype/JSTypeNative\$*.class,com/google/javascript/rhino/jstype/JSTypeRegistry.class,com/google/javascript/rhino/jstype/JSTypeRegistry\$*.class,com/google/javascript/rhino/jstype/NamedType.class,com/google/javascript/rhino/jstype/NamedType\$*.class,com/google/javascript/rhino/jstype/NoObjectType.class,com/google/javascript/rhino/jstype/NoObjectType\$*.class,com/google/javascript/rhino/jstype/NoResolvedType.class,com/google/javascript/rhino/jstype/NoResolvedType\$*.class,com/google/javascript/rhino/jstype/NoType.class,com/google/javascript/rhino/jstype/NoType\$*.class,com/google/javascript/rhino/jstype/NullType.class,com/google/javascript/rhino/jstype/NullType\$*.class,com/google/javascript/rhino/jstype/NumberType.class,com/google/javascript/rhino/jstype/NumberType\$*.class,com/google/javascript/rhino/jstype/ObjectType.class,com/google/javascript/rhino/jstype/ObjectType\$*.class,com/google/javascript/rhino/jstype/ParameterizedType.class,com/google/javascript/rhino/jstype/ParameterizedType\$*.class,com/google/javascript/rhino/jstype/PrototypeObjectType.class,com/google/javascript/rhino/jstype/PrototypeObjectType\$*.class,com/google/javascript/rhino/jstype/ProxyObjectType.class,com/google/javascript/rhino/jstype/ProxyObjectType\$*.class,com/google/javascript/rhino/jstype/RecordType.class,com/google/javascript/rhino/jstype/RecordType\$*.class,com/google/javascript/rhino/jstype/RecordTypeBuilder.class,com/google/javascript/rhino/jstype/RecordTypeBuilder\$*.class,com/google/javascript/rhino/jstype/SimpleSlot.class,com/google/javascript/rhino/jstype/SimpleSlot\$*.class,com/google/javascript/rhino/jstype/StaticReference.class,com/google/javascript/rhino/jstype/StaticReference\$*.class,com/google/javascript/rhino/jstype/StaticScope.class,com/google/javascript/rhino/jstype/StaticScope\$*.class,com/google/javascript/rhino/jstype/StaticSlot.class,com/google/javascript/rhino/jstype/StaticSlot\$*.class,com/google/javascript/rhino/jstype/StaticSourceFile.class,com/google/javascript/rhino/jstype/StaticSourceFile\$*.class,com/google/javascript/rhino/jstype/StaticSymbolTable.class,com/google/javascript/rhino/jstype/StaticSymbolTable\$*.class,com/google/javascript/rhino/jstype/StringType.class,com/google/javascript/rhino/jstype/StringType\$*.class,com/google/javascript/rhino/jstype/TemplateType.class,com/google/javascript/rhino/jstype/TemplateType\$*.class,com/google/javascript/rhino/jstype/UnionType.class,com/google/javascript/rhino/jstype/UnionType\$*.class,com/google/javascript/rhino/jstype/UnionTypeBuilder.class,com/google/javascript/rhino/jstype/UnionTypeBuilder\$*.class,com/google/javascript/rhino/jstype/UnknownType.class,com/google/javascript/rhino/jstype/UnknownType\$*.class,com/google/javascript/rhino/jstype/UnresolvedTypeExpression.class,com/google/javascript/rhino/jstype/UnresolvedTypeExpression\$*.class,com/google/javascript/rhino/jstype/ValueType.class,com/google/javascript/rhino/jstype/ValueType\$*.class,com/google/javascript/rhino/jstype/Visitor.class,com/google/javascript/rhino/jstype/Visitor\$*.class,com/google/javascript/rhino/jstype/VoidType.class,com/google/javascript/rhino/jstype/VoidType\$*.class,com/google/javascript/rhino/testing/BaseJSTypeTestCase.class,com/google/javascript/rhino/testing/BaseJSTypeTestCase\$*.class
 d4j.classes.modified=com.google.javascript.jscomp.TypedScopeCreator,com.google.javascript.rhino.jstype.FunctionType
 d4j.classes.relevant=com.google.javascript.jscomp.AbstractCompiler,com.google.javascript.jscomp.AbstractMessageFormatter,com.google.javascript.jscomp.AnonymousFunctionNamingPolicy,com.google.javascript.jscomp.AstValidator,com.google.javascript.jscomp.BasicErrorManager,com.google.javascript.jscomp.ChainableReverseAbstractInterpreter,com.google.javascript.jscomp.CheckAccessControls,com.google.javascript.jscomp.CheckGlobalNames,com.google.javascript.jscomp.CheckGlobalThis,com.google.javascript.jscomp.CheckLevel,com.google.javascript.jscomp.CheckRegExp,com.google.javascript.jscomp.CheckSideEffects,com.google.javascript.jscomp.CheckUnreachableCode,com.google.javascript.jscomp.ClosureCodingConvention,com.google.javascript.jscomp.CodeChangeHandler,com.google.javascript.jscomp.CodeConsumer,com.google.javascript.jscomp.CodeGenerator,com.google.javascript.jscomp.CodePrinter,com.google.javascript.jscomp.CodingConvention,com.google.javascript.jscomp.Compiler,com.google.javascript.jscomp.CompilerInput,com.google.javascript.jscomp.CompilerOptions,com.google.javascript.jscomp.CompilerPass,com.google.javascript.jscomp.ComposeWarningsGuard,com.google.javascript.jscomp.ConstCheck,com.google.javascript.jscomp.ControlFlowAnalysis,com.google.javascript.jscomp.ControlFlowGraph,com.google.javascript.jscomp.ControlStructureCheck,com.google.javascript.jscomp.DataFlowAnalysis,com.google.javascript.jscomp.DefaultCodingConvention,com.google.javascript.jscomp.DefaultPassConfig,com.google.javascript.jscomp.deps.DependencyInfo,com.google.javascript.jscomp.deps.SortedDependencies,com.google.javascript.jscomp.DiagnosticGroup,com.google.javascript.jscomp.DiagnosticGroups,com.google.javascript.jscomp.DiagnosticGroupWarningsGuard,com.google.javascript.jscomp.DiagnosticType,com.google.javascript.jscomp.DisambiguateProperties,com.google.javascript.jscomp.ErrorFormat,com.google.javascript.jscomp.ErrorManager,com.google.javascript.jscomp.FlowScope,com.google.javascript.jscomp.FunctionTypeBuilder,com.google.javascript.jscomp.GoogleCodingConvention,com.google.javascript.jscomp.graph.AdjacencyGraph,com.google.javascript.jscomp.graph.Annotatable,com.google.javascript.jscomp.graph.Annotation,com.google.javascript.jscomp.graph.DiGraph,com.google.javascript.jscomp.graph.Graph,com.google.javascript.jscomp.graph.GraphNode,com.google.javascript.jscomp.graph.GraphvizGraph,com.google.javascript.jscomp.graph.LinkedDirectedGraph,com.google.javascript.jscomp.graph.SubGraph,com.google.javascript.jscomp.HotSwapCompilerPass,com.google.javascript.jscomp.InferJSDocInfo,com.google.javascript.jscomp.JoinOp,com.google.javascript.jscomp.JsAst,com.google.javascript.jscomp.JSError,com.google.javascript.jscomp.JSModule,com.google.javascript.jscomp.JSModuleGraph,com.google.javascript.jscomp.JSSourceFile,com.google.javascript.jscomp.LatticeElement,com.google.javascript.jscomp.LightweightMessageFormatter,com.google.javascript.jscomp.LineNumberCheck,com.google.javascript.jscomp.LinkedFlowScope,com.google.javascript.jscomp.LoggerErrorManager,com.google.javascript.jscomp.MemoizedScopeCreator,com.google.javascript.jscomp.MessageFormatter,com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.NodeUtil,com.google.javascript.jscomp.parsing.Annotation,com.google.javascript.jscomp.parsing.Config,com.google.javascript.jscomp.parsing.IRFactory,com.google.javascript.jscomp.parsing.JsDocInfoParser,com.google.javascript.jscomp.parsing.JsDocToken,com.google.javascript.jscomp.parsing.JsDocTokenStream,com.google.javascript.jscomp.parsing.ParserRunner,com.google.javascript.jscomp.parsing.TypeSafeDispatcher,com.google.javascript.jscomp.PassConfig,com.google.javascript.jscomp.PassFactory,com.google.javascript.jscomp.PrepareAst,com.google.javascript.jscomp.ProcessDefines,com.google.javascript.jscomp.ProcessTweaks,com.google.javascript.jscomp.PropertyRenamingPolicy,com.google.javascript.jscomp.ReferenceCollectingCallback,com.google.javascript.jscomp.Region,com.google.javascript.jscomp.ReverseAbstractInterpreter,com.google.javascript.jscomp.RhinoErrorReporter,com.google.javascript.jscomp.Scope,com.google.javascript.jscomp.ScopeCreator,com.google.javascript.jscomp.SemanticReverseAbstractInterpreter,com.google.javascript.jscomp.SourceAst,com.google.javascript.jscomp.SourceExcerptProvider,com.google.javascript.jscomp.SourceFile,com.google.javascript.jscomp.SourceMap,com.google.javascript.jscomp.StrictModeCheck,com.google.javascript.jscomp.SuppressDocWarningsGuard,com.google.javascript.jscomp.SyntacticScopeCreator,com.google.javascript.jscomp.Tracer,com.google.javascript.jscomp.TypeCheck,com.google.javascript.jscomp.TypedCodeGenerator,com.google.javascript.jscomp.TypedScopeCreator,com.google.javascript.jscomp.TypeInference,com.google.javascript.jscomp.TypeInferencePass,com.google.javascript.jscomp.TypeValidator,com.google.javascript.jscomp.VarCheck,com.google.javascript.jscomp.VariableReferenceCheck,com.google.javascript.jscomp.VariableRenamingPolicy,com.google.javascript.jscomp.WarningsGuard,com.google.javascript.rhino.Context,com.google.javascript.rhino.EcmaError,com.google.javascript.rhino.ErrorReporter,com.google.javascript.rhino.EvaluatorException,com.google.javascript.rhino.FunctionNode,com.google.javascript.rhino.InputId,com.google.javascript.rhino.JSDocInfo,com.google.javascript.rhino.JSDocInfoBuilder,com.google.javascript.rhino.jstype.AllType,com.google.javascript.rhino.jstype.ArrowType,com.google.javascript.rhino.jstype.BooleanType,com.google.javascript.rhino.jstype.EnumElementType,com.google.javascript.rhino.jstype.EnumType,com.google.javascript.rhino.jstype.ErrorFunctionType,com.google.javascript.rhino.jstype.FunctionBuilder,com.google.javascript.rhino.jstype.FunctionParamBuilder,com.google.javascript.rhino.jstype.FunctionType,com.google.javascript.rhino.jstype.IndexedType,com.google.javascript.rhino.jstype.InstanceObjectType,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSTypeNative,com.google.javascript.rhino.jstype.JSTypeRegistry,com.google.javascript.rhino.jstype.NamedType,com.google.javascript.rhino.jstype.NoObjectType,com.google.javascript.rhino.jstype.NoResolvedType,com.google.javascript.rhino.jstype.NoType,com.google.javascript.rhino.jstype.NullType,com.google.javascript.rhino.jstype.NumberType,com.google.javascript.rhino.jstype.ObjectType,com.google.javascript.rhino.jstype.ParameterizedType,com.google.javascript.rhino.jstype.PrototypeObjectType,com.google.javascript.rhino.jstype.ProxyObjectType,com.google.javascript.rhino.jstype.RecordType,com.google.javascript.rhino.jstype.RecordTypeBuilder,com.google.javascript.rhino.jstype.SimpleSlot,com.google.javascript.rhino.jstype.StaticReference,com.google.javascript.rhino.jstype.StaticScope,com.google.javascript.rhino.jstype.StaticSlot,com.google.javascript.rhino.jstype.StaticSourceFile,com.google.javascript.rhino.jstype.StaticSymbolTable,com.google.javascript.rhino.jstype.StringType,com.google.javascript.rhino.jstype.TemplateType,com.google.javascript.rhino.jstype.UnionType,com.google.javascript.rhino.jstype.UnionTypeBuilder,com.google.javascript.rhino.jstype.UnknownType,com.google.javascript.rhino.jstype.UnresolvedTypeExpression,com.google.javascript.rhino.jstype.ValueType,com.google.javascript.rhino.jstype.Visitor,com.google.javascript.rhino.jstype.VoidType,com.google.javascript.rhino.JSTypeExpression,com.google.javascript.rhino.Node,com.google.javascript.rhino.RhinoException,com.google.javascript.rhino.ScriptOrFnNode,com.google.javascript.rhino.ScriptRuntime,com.google.javascript.rhino.testing.BaseJSTypeTestCase,com.google.javascript.rhino.TokenStream
 d4j.dir.src.classes=src
diff --git a/test/com/google/javascript/jscomp/FunctionInjectorTest.java b/test/com/google/javascript/jscomp/FunctionInjectorTest.java
index d21107f..19ece5a 100644
--- a/test/com/google/javascript/jscomp/FunctionInjectorTest.java
+++ b/test/com/google/javascript/jscomp/FunctionInjectorTest.java
@@ -867,8 +867,8 @@ public class FunctionInjectorTest extends TestCase {
         "function foo(a){return a;}; " +
         "function x() { foo(x++); }",
         "function foo(a){return a;}; " +
-        "function x() {{var a$$inline_1=x++;" +
-            "a$$inline_1}}",
+        "function x() {{var a$$inline_0=x++;" +
+            "a$$inline_0}}",
         "foo", INLINE_BLOCK);
   }
 
@@ -877,9 +877,9 @@ public class FunctionInjectorTest extends TestCase {
     helperInlineReferenceToFunction(
         "function foo(a){return a+a;}; foo(x++);",
         "function foo(a){return a+a;}; " +
-            "{var a$$inline_1=x++;" +
-            " a$$inline_1+" +
-            "a$$inline_1;}",
+            "{var a$$inline_0=x++;" +
+            " a$$inline_0+" +
+            "a$$inline_0;}",
         "foo", INLINE_BLOCK);
   }
 
@@ -888,9 +888,9 @@ public class FunctionInjectorTest extends TestCase {
     helperInlineReferenceToFunction(
         "function foo(a){return a+a;}; foo(new Date());",
         "function foo(a){return a+a;}; " +
-            "{var a$$inline_1=new Date();" +
-            " a$$inline_1+" +
-            "a$$inline_1;}",
+            "{var a$$inline_0=new Date();" +
+            " a$$inline_0+" +
+            "a$$inline_0;}",
         "foo", INLINE_BLOCK);
   }
 
@@ -899,9 +899,9 @@ public class FunctionInjectorTest extends TestCase {
     helperInlineReferenceToFunction(
         "function foo(a){return a+a;}; foo(function(){});",
         "function foo(a){return a+a;}; " +
-            "{var a$$inline_1=function(){};" +
-            " a$$inline_1+" +
-            "a$$inline_1;}",
+            "{var a$$inline_0=function(){};" +
+            " a$$inline_0+" +
+            "a$$inline_0;}",
         "foo", INLINE_BLOCK);
   }
 
@@ -910,7 +910,7 @@ public class FunctionInjectorTest extends TestCase {
     helperInlineReferenceToFunction(
         "function foo(a){return true;}; foo(goo());",
         "function foo(a){return true;};" +
-            "{var a$$inline_1=goo();true}",
+            "{var a$$inline_0=goo();true}",
         "foo", INLINE_BLOCK);
   }
 
@@ -920,8 +920,8 @@ public class FunctionInjectorTest extends TestCase {
         "function foo(a){var b;return a;}; " +
             "function x() { foo(goo()); }",
             "function foo(a){var b;return a;}; " +
-            "function x() {{var a$$inline_2=goo();" +
-                "var b$$inline_3;a$$inline_2}}",
+            "function x() {{var a$$inline_0=goo();" +
+                "var b$$inline_1;a$$inline_0}}",
         "foo", INLINE_BLOCK);
   }
 
@@ -934,9 +934,9 @@ public class FunctionInjectorTest extends TestCase {
         "var x = 1; var y = 2;" +
         "function foo(a,b){x = b; y = a;}; " +
         "function bar() {" +
-           "{var a$$inline_2=x;" +
+           "{var a$$inline_0=x;" +
             "x = y;" +
-            "y = a$$inline_2;}" +
+            "y = a$$inline_0;}" +
         "}",
         "foo", INLINE_BLOCK);
   }
@@ -949,9 +949,9 @@ public class FunctionInjectorTest extends TestCase {
         "var x = 1; var y = 2;" +
         "function foo(a,b){y = a; x = b;}; " +
         "function bar() {" +
-           "{var b$$inline_3=y;" +
+           "{var b$$inline_1=y;" +
             "y = x;" +
-            "x = b$$inline_3;}" +
+            "x = b$$inline_1;}" +
         "}",
         "foo", INLINE_BLOCK);
   }
@@ -962,7 +962,7 @@ public class FunctionInjectorTest extends TestCase {
         "for(;1;){ foo(1); }",
         "function foo(a){var b;return a;}; " +
         "for(;1;){ {" +
-            "var b$$inline_3=void 0;1}}",
+            "var b$$inline_1=void 0;1}}",
         "foo", INLINE_BLOCK);
 
     helperInlineReferenceToFunction(
@@ -970,16 +970,16 @@ public class FunctionInjectorTest extends TestCase {
         "do{ foo(1); } while(1)",
         "function foo(a){var b;return a;}; " +
         "do{ {" +
-            "var b$$inline_3=void 0;1}}while(1)",
+            "var b$$inline_1=void 0;1}}while(1)",
         "foo", INLINE_BLOCK);
 
     helperInlineReferenceToFunction(
         "function foo(a){for(var b in c)return a;}; " +
         "for(;1;){ foo(1); }",
         "function foo(a){var b;for(b in c)return a;}; " +
-        "for(;1;){ {JSCompiler_inline_label_foo_4:{" +
-            "var b$$inline_3=void 0;for(b$$inline_3 in c){" +
-              "1;break JSCompiler_inline_label_foo_4" +
+        "for(;1;){ {JSCompiler_inline_label_foo_2:{" +
+            "var b$$inline_1=void 0;for(b$$inline_1 in c){" +
+              "1;break JSCompiler_inline_label_foo_2" +
             "}}}}",
         "foo", INLINE_BLOCK);
   }
@@ -1025,8 +1025,8 @@ public class FunctionInjectorTest extends TestCase {
     helperInlineReferenceToFunction(
         "function foo(){function x() {var a; return true;} return x}; foo();",
         "function foo(){function x(){var a;return true}return x};" +
-            "{var x$$inline_1 = function(){" +
-            "var a$$inline_2;return true};x$$inline_1}",
+            "{var x$$inline_0 = function(){" +
+            "var a$$inline_1;return true};x$$inline_0}",
         "foo", INLINE_BLOCK);
   }
 
@@ -1314,18 +1314,18 @@ public class FunctionInjectorTest extends TestCase {
   public void testBug1897706() {
     helperInlineReferenceToFunction(
         "function foo(a){}; foo(x())",
-        "function foo(a){}; {var a$$inline_1=x()}",
+        "function foo(a){}; {var a$$inline_0=x()}",
         "foo", INLINE_BLOCK);
 
     helperInlineReferenceToFunction(
         "function foo(a){bar()}; foo(x())",
-        "function foo(a){bar()}; {var a$$inline_1=x();bar()}",
+        "function foo(a){bar()}; {var a$$inline_0=x();bar()}",
         "foo", INLINE_BLOCK);
 
     helperInlineReferenceToFunction(
         "function foo(a,b){bar()}; foo(x(),y())",
         "function foo(a,b){bar()};" +
-        "{var a$$inline_2=x();var b$$inline_3=y();bar()}",
+        "{var a$$inline_0=x();var b$$inline_1=y();bar()}",
         "foo", INLINE_BLOCK);
   }
 
diff --git a/test/com/google/javascript/jscomp/FunctionToBlockMutatorTest.java b/test/com/google/javascript/jscomp/FunctionToBlockMutatorTest.java
index a2b38e9..7e1a21d 100644
--- a/test/com/google/javascript/jscomp/FunctionToBlockMutatorTest.java
+++ b/test/com/google/javascript/jscomp/FunctionToBlockMutatorTest.java
@@ -112,7 +112,7 @@ public class FunctionToBlockMutatorTest extends TestCase {
     helperMutate(
         "function foo(a){return a;}; " +
         "function x() { foo(x++); }",
-        "{var a$$inline_1 = x++; a$$inline_1}",
+        "{var a$$inline_0 = x++; a$$inline_0}",
         "foo", null);
   }
 
@@ -120,25 +120,25 @@ public class FunctionToBlockMutatorTest extends TestCase {
     // Parameter has side-effects.
     helperMutate(
         "function foo(a){return a+a;}; foo(x++);",
-        "{var a$$inline_1 = x++;" +
-            "a$$inline_1 + a$$inline_1;}",
+        "{var a$$inline_0 = x++;" +
+            "a$$inline_0 + a$$inline_0;}",
         "foo", null);
   }
 
   public void testMutateInitializeUninitializedVars1() {
     helperMutate(
         "function foo(a){var b;return a;}; foo(1);",
-        "{var b$$inline_3=void 0;1}",
+        "{var b$$inline_1=void 0;1}",
         "foo", null, false, true);
   }
 
   public void testMutateInitializeUninitializedVars2() {
     helperMutate(
         "function foo(a){for(var b in c)return a;}; foo(1);",
-        "{JSCompiler_inline_label_foo_4:" +
+        "{JSCompiler_inline_label_foo_2:" +
           "{" +
-            "for(var b$$inline_3 in c){" +
-                "1;break JSCompiler_inline_label_foo_4" +
+            "for(var b$$inline_1 in c){" +
+                "1;break JSCompiler_inline_label_foo_2" +
              "}" +
           "}" +
         "}",
@@ -150,14 +150,14 @@ public class FunctionToBlockMutatorTest extends TestCase {
     boolean callInLoop = false;
     helperMutate(
         "function foo(a){var B = bar(); a;}; foo(1);",
-        "{var B$$inline_3=bar(); 1;}",
+        "{var B$$inline_1=bar(); 1;}",
         "foo", null, false, callInLoop);
     // ... in a loop, the constant-ness is removed.
     // TODO(johnlenz): update this test to look for the const annotation.
     callInLoop = true;
     helperMutate(
         "function foo(a){var B = bar(); a;}; foo(1);",
-        "{var B$$inline_3 = bar(); 1;}",
+        "{var B$$inline_1 = bar(); 1;}",
         "foo", null, false, callInLoop);
   }
 
@@ -166,7 +166,7 @@ public class FunctionToBlockMutatorTest extends TestCase {
      // expressions
      helperMutate(
         "function foo(a){function g(){}}; foo(1);",
-        "{var g$$inline_3=function(){};}",
+        "{var g$$inline_1=function(){};}",
         "foo", null);
   }
 
diff --git a/test/com/google/javascript/jscomp/InlineFunctionsTest.java b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
index 0f5e864..1515f97 100644
--- a/test/com/google/javascript/jscomp/InlineFunctionsTest.java
+++ b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
@@ -175,18 +175,18 @@ public class InlineFunctionsTest extends CompilerTestCase {
     // don't inline if the input parameter is modified.
     test("function INC(x){return x++}" +
          "var y=INC(i)",
-         "var y;{var x$$inline_1=i;" +
-         "y=x$$inline_1++}");
+         "var y;{var x$$inline_0=i;" +
+         "y=x$$inline_0++}");
   }
 
   public void testInlineFunctions10() {
     test("function INC(x){return x++}" +
          "var y=INC(i);y=INC(i)",
          "var y;" +
-         "{var x$$inline_1=i;" +
-         "y=x$$inline_1++}" +
-         "{var x$$inline_4=i;" +
-         "y=x$$inline_4++}");
+         "{var x$$inline_0=i;" +
+         "y=x$$inline_0++}" +
+         "{var x$$inline_2=i;" +
+         "y=x$$inline_2++}");
   }
 
   public void testInlineFunctions11() {
@@ -209,7 +209,7 @@ public class InlineFunctionsTest extends CompilerTestCase {
     // inline as block if the input parameter has side-effects.
     test("function f(x){return x}" +
          "var y=f(i++)",
-         "var y;{var x$$inline_1=i++;y=x$$inline_1}");
+         "var y;{var x$$inline_0=i++;y=x$$inline_0}");
   }
 
   public void testInlineFunctions14() {
@@ -250,9 +250,9 @@ public class InlineFunctionsTest extends CompilerTestCase {
          "var JSCompiler_temp_const$$0 = c;\n" +
          "{\n" +
          "var JSCompiler_inline_result$$1;\n" +
-         "var x$$inline_3;\n" +
+         "var x$$inline_2;\n" +
          "JSCompiler_inline_result$$1 = " +
-         "    function(a$$inline_4){ return a$$inline_4+1 };\n" +
+         "    function(a$$inline_3){ return a$$inline_3+1 };\n" +
          "}" +
          "var d=JSCompiler_temp_const$$0 + JSCompiler_inline_result$$1");
   }
@@ -301,9 +301,9 @@ public class InlineFunctionsTest extends CompilerTestCase {
          "  var JSCompiler_temp_const$$0 = c;\n" +
          "  {\n" +
          "  var JSCompiler_inline_result$$1;\n" +
-         "  var x$$inline_3;\n" +
+         "  var x$$inline_2;\n" +
          "  JSCompiler_inline_result$$1 = " +
-         "      function(a$$inline_4) {return a$$inline_4+1};\n" +
+         "      function(a$$inline_3) {return a$$inline_3+1};\n" +
          "  }\n" +
          "  var d = JSCompiler_temp_const$$0+JSCompiler_inline_result$$1\n" +
          "}");
@@ -320,8 +320,8 @@ public class InlineFunctionsTest extends CompilerTestCase {
     test(
         "function foo(b){return window.bar(function(){c(b)})}" +
         "var d=foo(e)",
-        "var d;{var b$$inline_1=e;" +
-        "d=window.bar(function(){c(b$$inline_1)})}");
+        "var d;{var b$$inline_0=e;" +
+        "d=window.bar(function(){c(b$$inline_0)})}");
   }
 
   public void testInlineFunctions16b() {
@@ -377,11 +377,11 @@ public class InlineFunctionsTest extends CompilerTestCase {
          "function bar(d){return plex(d)}" +
          "var d=foo(1,2)",
 
-         "var d;{JSCompiler_inline_label_plex_2:{" +
+         "var d;{JSCompiler_inline_label_plex_1:{" +
          "if(1+2){" +
-         "d=0;break JSCompiler_inline_label_plex_2}" +
+         "d=0;break JSCompiler_inline_label_plex_1}" +
          "else{" +
-         "d=1;break JSCompiler_inline_label_plex_2}d=void 0}}");
+         "d=1;break JSCompiler_inline_label_plex_1}d=void 0}}");
   }
 
   public void testInlineFunctions23() {
@@ -391,11 +391,11 @@ public class InlineFunctionsTest extends CompilerTestCase {
          "function foo(a, b){return bar(a+b)}" +
          "var d=foo(1,2)",
 
-         "var d;{JSCompiler_inline_label_complex_2:{" +
+         "var d;{JSCompiler_inline_label_complex_1:{" +
          "if(1+2){" +
-         "d=0;break JSCompiler_inline_label_complex_2" +
+         "d=0;break JSCompiler_inline_label_complex_1" +
          "}else{" +
-         "d=1;break JSCompiler_inline_label_complex_2" +
+         "d=1;break JSCompiler_inline_label_complex_1" +
          "}d=void 0}}");
   }
 
@@ -532,7 +532,7 @@ public class InlineFunctionsTest extends CompilerTestCase {
         "foo(2,3,x())",
 
         "1+2+1+2+4+5+6+7+8+9+1+2+3+10;" +
-        "{var JSCompiler_inline_anon_param_4=x();" +
+        "{var JSCompiler_inline_anon_param_2=x();" +
         "2+3+2+3+4+5+6+7+8+9+1+2+3+10}");
   }
 
@@ -547,50 +547,50 @@ public class InlineFunctionsTest extends CompilerTestCase {
   public void testNoInlineIfParametersModified1() {
     // Assignment
     test("function f(x){return x=1}f(undefined)",
-         "{var x$$inline_1=undefined;" +
-         "x$$inline_1=1}");
+         "{var x$$inline_0=undefined;" +
+         "x$$inline_0=1}");
   }
 
   public void testNoInlineIfParametersModified2() {
     test("function f(x){return (x)=1;}f(2)",
-         "{var x$$inline_1=2;" +
-         "x$$inline_1=1}");
+         "{var x$$inline_0=2;" +
+         "x$$inline_0=1}");
   }
 
   public void testNoInlineIfParametersModified3() {
     // Assignment variant.
     test("function f(x){return x*=2}f(2)",
-         "{var x$$inline_1=2;" +
-         "x$$inline_1*=2}");
+         "{var x$$inline_0=2;" +
+         "x$$inline_0*=2}");
   }
 
   public void testNoInlineIfParametersModified4() {
     // Assignment in if.
     test("function f(x){return x?(x=2):0}f(2)",
-         "{var x$$inline_1=2;" +
-         "x$$inline_1?(" +
-         "x$$inline_1=2):0}");
+         "{var x$$inline_0=2;" +
+         "x$$inline_0?(" +
+         "x$$inline_0=2):0}");
   }
 
   public void testNoInlineIfParametersModified5() {
     // Assignment in if, multiple params
     test("function f(x,y){return x?(y=2):0}f(2,undefined)",
-         "{var y$$inline_3=undefined;2?(" +
-         "y$$inline_3=2):0}");
+         "{var y$$inline_1=undefined;2?(" +
+         "y$$inline_1=2):0}");
   }
 
   public void testNoInlineIfParametersModified6() {
     test("function f(x,y){return x?(y=2):0}f(2)",
-         "{var y$$inline_3=void 0;2?(" +
-         "y$$inline_3=2):0}");
+         "{var y$$inline_1=void 0;2?(" +
+         "y$$inline_1=2):0}");
   }
 
   public void testNoInlineIfParametersModified7() {
     // Increment
     test("function f(a){return++a<++a}f(1)",
-         "{var a$$inline_1=1;" +
-         "++a$$inline_1<" +
-         "++a$$inline_1}");
+         "{var a$$inline_0=1;" +
+         "++a$$inline_0<" +
+         "++a$$inline_0}");
   }
 
   public void testNoInlineIfParametersModified8() {
@@ -615,14 +615,14 @@ public class InlineFunctionsTest extends CompilerTestCase {
 
   public void testInlineNeverMutateConstants() {
     test("function f(x){return x=1}f(undefined)",
-         "{var x$$inline_1=undefined;" +
-         "x$$inline_1=1}");
+         "{var x$$inline_0=undefined;" +
+         "x$$inline_0=1}");
   }
 
   public void testInlineNeverOverrideNewValues() {
     test("function f(a){return++a<++a}f(1)",
-        "{var a$$inline_1=1;" +
-        "++a$$inline_1<++a$$inline_1}");
+        "{var a$$inline_0=1;" +
+        "++a$$inline_0<++a$$inline_0}");
   }
 
   public void testInlineMutableArgsReferencedOnce() {
@@ -651,26 +651,26 @@ public class InlineFunctionsTest extends CompilerTestCase {
 
   public void testInlineBlockMutableArgs1() {
     test("function foo(x){x+x}foo([])",
-         "{var x$$inline_1=[];" +
-         "x$$inline_1+x$$inline_1}");
+         "{var x$$inline_0=[];" +
+         "x$$inline_0+x$$inline_0}");
   }
 
   public void testInlineBlockMutableArgs2() {
     test("function foo(x){x+x}foo(new Date)",
-         "{var x$$inline_1=new Date;" +
-         "x$$inline_1+x$$inline_1}");
+         "{var x$$inline_0=new Date;" +
+         "x$$inline_0+x$$inline_0}");
   }
 
   public void testInlineBlockMutableArgs3() {
     test("function foo(x){x+x}foo(true&&new Date)",
-         "{var x$$inline_1=true&&new Date;" +
-         "x$$inline_1+x$$inline_1}");
+         "{var x$$inline_0=true&&new Date;" +
+         "x$$inline_0+x$$inline_0}");
   }
 
   public void testInlineBlockMutableArgs4() {
     test("function foo(x){x+x}foo({})",
-         "{var x$$inline_1={};" +
-         "x$$inline_1+x$$inline_1}");
+         "{var x$$inline_0={};" +
+         "x$$inline_0+x$$inline_0}");
   }
 
   public void testShadowVariables1() {
@@ -685,7 +685,7 @@ public class InlineFunctionsTest extends CompilerTestCase {
          "bar();",
 
          "var a=0;" +
-         "{var a$$inline_1=3+4}");
+         "{var a$$inline_0=3+4}");
   }
 
   public void testShadowVariables2() {
@@ -708,8 +708,8 @@ public class InlineFunctionsTest extends CompilerTestCase {
         "function _bar(){a=foo()}",
 
         "var a=0;" +
-        "function _bar(){{var a$$inline_1=2;" +
-        "a=3+a$$inline_1}}");
+        "function _bar(){{var a$$inline_0=2;" +
+        "a=3+a$$inline_0}}");
   }
 
   public void testShadowVariables4() {
@@ -739,8 +739,8 @@ public class InlineFunctionsTest extends CompilerTestCase {
         "function _bar(a){a=foo(4)}",
 
         "var a=0;function _bar(a$$2){{" +
-        "var a$$inline_1=4;" +
-        "a$$2=3+a$$inline_1}}");
+        "var a$$inline_0=4;" +
+        "a$$2=3+a$$inline_0}}");
   }
 
   public void testShadowVariables7() {
@@ -749,7 +749,7 @@ public class InlineFunctionsTest extends CompilerTestCase {
          "function foo(){return a}" +
          "(function(){var a=5;(function(){foo()})()})()",
          "var a=3;" +
-         "{var a$$inline_1=5;{a}}"
+         "{var a$$inline_0=5;{a}}"
          );
 
     assumeMinimumCapture = true;
@@ -757,7 +757,7 @@ public class InlineFunctionsTest extends CompilerTestCase {
          "function foo(){return a}" +
          "(function(){var a=5;(function(){foo()})()})()",
          "var a=3;" +
-         "{var a$$inline_2=5;{a}}"
+         "{var a$$inline_1=5;{a}}"
          );
   }
 
@@ -846,7 +846,7 @@ public class InlineFunctionsTest extends CompilerTestCase {
          "function foo(){return a}" +
          "(function(){var a=5;(function(){foo()})()})()",
          "var a=3;" +
-         "{var a$$inline_1=5;{a}}"
+         "{var a$$inline_0=5;{a}}"
          );
 
     assumeMinimumCapture = true;
@@ -855,7 +855,7 @@ public class InlineFunctionsTest extends CompilerTestCase {
          "function foo(){return a}" +
          "(function(){var a=5;(function(){foo()})()})()",
          "var a=3;" +
-         "{var a$$inline_2=5;{a}}"
+         "{var a$$inline_1=5;{a}}"
          );
 
   }
@@ -878,7 +878,7 @@ public class InlineFunctionsTest extends CompilerTestCase {
 
         "var a=0;" +
         "function _goo(){var a$$2=2;var x;" +
-        "{var a$$inline_1=3;x=a+a}}");
+        "{var a$$inline_0=3;x=a+a}}");
   }
 
   public void testCostBasedInlining1() {
@@ -977,8 +977,8 @@ public class InlineFunctionsTest extends CompilerTestCase {
     test("function f(a){return 1 + a + a;}" +
          "var a = f(f(1));",
          "var a;" +
-         "{var a$$inline_1=1+1+1;" +
-         "a=1+a$$inline_1+a$$inline_1}");
+         "{var a$$inline_0=1+1+1;" +
+         "a=1+a$$inline_0+a$$inline_0}");
   }
 
   public void testCostBasedInlining10() {
@@ -996,8 +996,8 @@ public class InlineFunctionsTest extends CompilerTestCase {
     test("function f(a){return a + a;}" +
          "var a = f(f(1))",
          "var a;" +
-         "{var a$$inline_1=1+1;" +
-         "a=a$$inline_1+a$$inline_1}");
+         "{var a$$inline_0=1+1;" +
+         "a=a$$inline_0+a$$inline_0}");
   }
 
   public void testCostBasedInlining12() {
@@ -1210,7 +1210,7 @@ public class InlineFunctionsTest extends CompilerTestCase {
 
     // But do inline into functions
     test("function f(){a();b();var z=1+1}function _foo(){f()}",
-         "function _foo(){{a();b();var z$$inline_1=1+1}}");
+         "function _foo(){{a();b();var z$$inline_0=1+1}}");
 
   }
 
@@ -1268,9 +1268,9 @@ public class InlineFunctionsTest extends CompilerTestCase {
   public void testComplexInline7() {
     test("function f(x,y){if (x) return y(); else return true;}" +
          "var b=1;z=f(1,b)",
-         "var b=1;{JSCompiler_inline_label_f_4:{if(1){z=b();" +
-         "break JSCompiler_inline_label_f_4}else{z=true;" +
-         "break JSCompiler_inline_label_f_4}z=void 0}}");
+         "var b=1;{JSCompiler_inline_label_f_2:{if(1){z=b();" +
+         "break JSCompiler_inline_label_f_2}else{z=true;" +
+         "break JSCompiler_inline_label_f_2}z=void 0}}");
   }
 
   public void testComplexInline8() {
@@ -1319,10 +1319,10 @@ public class InlineFunctionsTest extends CompilerTestCase {
     test("function f(x,y){if (x) return y(); else return true;}" +
          "var b=1;var z=f(1,b)",
          "var b=1;var z;" +
-         "{JSCompiler_inline_label_f_4:{if(1){z=b();" +
-         "break JSCompiler_inline_label_f_4" +
+         "{JSCompiler_inline_label_f_2:{if(1){z=b();" +
+         "break JSCompiler_inline_label_f_2" +
          "}else{" +
-         "z=true;break JSCompiler_inline_label_f_4}z=void 0}}");
+         "z=true;break JSCompiler_inline_label_f_2}z=void 0}}");
   }
 
   public void testComplexInlineVars8() {
@@ -1391,28 +1391,28 @@ public class InlineFunctionsTest extends CompilerTestCase {
   public void testComplexSample() {
     String result = "" +
       "{{" +
-      "var styleSheet$$inline_9=null;" +
+      "var styleSheet$$inline_2=null;" +
       "if(goog$userAgent$IE)" +
-        "styleSheet$$inline_9=0;" +
+        "styleSheet$$inline_2=0;" +
       "else " +
-        "var head$$inline_10=0;" +
+        "var head$$inline_3=0;" +
       "{" +
-        "var element$$inline_11=" +
-            "styleSheet$$inline_9;" +
-        "var stylesString$$inline_12=a;" +
+        "var element$$inline_4=" +
+            "styleSheet$$inline_2;" +
+        "var stylesString$$inline_5=a;" +
         "if(goog$userAgent$IE)" +
-          "element$$inline_11.cssText=" +
-              "stylesString$$inline_12;" +
+          "element$$inline_4.cssText=" +
+              "stylesString$$inline_5;" +
         "else " +
         "{" +
-          "var propToSet$$inline_13=" +
+          "var propToSet$$inline_6=" +
               "\"innerText\";" +
-          "element$$inline_11[" +
-              "propToSet$$inline_13]=" +
-                  "stylesString$$inline_12" +
+          "element$$inline_4[" +
+              "propToSet$$inline_6]=" +
+                  "stylesString$$inline_5" +
         "}" +
       "}" +
-      "styleSheet$$inline_9" +
+      "styleSheet$$inline_2" +
       "}}";
 
     test("var foo = function(stylesString, opt_element) { " +
@@ -1510,7 +1510,7 @@ public class InlineFunctionsTest extends CompilerTestCase {
 
     test("(function(){" +
          "var f = function(a){call(function(){return a})};f()})()",
-         "{{var a$$inline_1=void 0;call(function(){return a$$inline_1})}}");
+         "{{var a$$inline_0=void 0;call(function(){return a$$inline_0})}}");
   }
 
   public void testComplexFunctionWithFunctionDefinition2a() {
@@ -1524,7 +1524,7 @@ public class InlineFunctionsTest extends CompilerTestCase {
 
     test("(function(){" +
          "var f = function(a){call(function(){return a})};f()})()",
-         "{{var a$$inline_1=void 0;call(function(){return a$$inline_1})}}");
+         "{{var a$$inline_0=void 0;call(function(){return a$$inline_0})}}");
   }
 
   public void testComplexFunctionWithFunctionDefinition3() {
@@ -1536,7 +1536,7 @@ public class InlineFunctionsTest extends CompilerTestCase {
     assumeMinimumCapture = true;
 
     test("function f(){var a; call(function(){return a})}f()",
-         "{var a$$inline_1;call(function(){return a$$inline_1})}");
+         "{var a$$inline_0;call(function(){return a$$inline_0})}");
 
   }
 
@@ -1561,10 +1561,10 @@ public class InlineFunctionsTest extends CompilerTestCase {
         ");",
         "{" +
         "var JSCompiler_inline_result$$0;" +
-        "var ret$$inline_2={};\n" +
-        "ret$$inline_2[ONE]='a';\n" +
-        "ret$$inline_2[TWO]='b';\n" +
-        "JSCompiler_inline_result$$0 = ret$$inline_2;\n" +
+        "var ret$$inline_1={};\n" +
+        "ret$$inline_1[ONE]='a';\n" +
+        "ret$$inline_1[TWO]='b';\n" +
+        "JSCompiler_inline_result$$0 = ret$$inline_1;\n" +
         "}" +
         "{" +
         "descriptions_=JSCompiler_inline_result$$0;" +
@@ -1683,7 +1683,7 @@ public class InlineFunctionsTest extends CompilerTestCase {
         "((function(){var a; return function(){foo()}})())();",
 
         "{var JSCompiler_inline_result$$0;" +
-        "var a$$inline_2;" +
+        "var a$$inline_1;" +
         "JSCompiler_inline_result$$0=function(){foo()};}" +
         "JSCompiler_inline_result$$0()");
 
@@ -1756,8 +1756,8 @@ public class InlineFunctionsTest extends CompilerTestCase {
   public void testFunctionExpressionOmega() {
     // ... with unused recursive name.
     test("(function (f){f(f)})(function(f){f(f)})",
-         "{var f$$inline_1=function(f$$1){f$$1(f$$1)};" +
-          "{{f$$inline_1(f$$inline_1)}}}");
+         "{var f$$inline_0=function(f$$1){f$$1(f$$1)};" +
+          "{{f$$inline_0(f$$inline_0)}}}");
   }
 
   public void testLocalFunctionInlining1() {
@@ -1893,9 +1893,9 @@ public class InlineFunctionsTest extends CompilerTestCase {
     assumeStrictThis = true;
     // In strict mode, "this" is never coerced so we can use the provided value.
     test("function f(a){a=1;this} f.call();",
-         "{var a$$inline_1=void 0; a$$inline_1=1; void 0;}");
+         "{var a$$inline_0=void 0; a$$inline_0=1; void 0;}");
     test("function f(a){a=1;this} f.call(x, x);",
-         "{var a$$inline_1=x; a$$inline_1=1; x;}");
+         "{var a$$inline_0=x; a$$inline_0=1; x;}");
   }
 
   // http://en.wikipedia.org/wiki/Fixed_point_combinator#Y_combinator
@@ -1951,19 +1951,19 @@ public class InlineFunctionsTest extends CompilerTestCase {
         "factorial(5)\n",
         "var factorial;\n" +
         "{\n" +
-        "var M$$inline_6 = function(f$$2) {\n" +
+        "var M$$inline_4 = function(f$$2) {\n" +
         "  return function(n){if(n===0)return 1;else return n*f$$2(n-1)}\n" +
         "};\n" +
         "{\n" +
-        "var f$$inline_1=function(f$$inline_9){\n" +
-        "  return M$$inline_6(\n" +
-        "    function(arg$$inline_10){\n" +
-        "      return f$$inline_9(f$$inline_9)(arg$$inline_10)\n" +
+        "var f$$inline_0=function(f$$inline_7){\n" +
+        "  return M$$inline_4(\n" +
+        "    function(arg$$inline_8){\n" +
+        "      return f$$inline_7(f$$inline_7)(arg$$inline_8)\n" +
         "     })\n" +
         "};\n" +
-        "factorial=M$$inline_6(\n" +
-        "  function(arg$$inline_2){\n" +
-        "    return f$$inline_1(f$$inline_1)(arg$$inline_2)\n" +
+        "factorial=M$$inline_4(\n" +
+        "  function(arg$$inline_1){\n" +
+        "    return f$$inline_0(f$$inline_0)(arg$$inline_1)\n" +
         "});\n" +
         "}\n" +
         "}" +
@@ -2097,12 +2097,12 @@ public class InlineFunctionsTest extends CompilerTestCase {
         "  var JSCompiler_temp_const$$0 = goog.Uri;" +
         "  {" +
         "  var JSCompiler_inline_result$$1;" +
-        "  var self$$inline_3 = self$$2;" +
-        "  if (!self$$inline_3.domServices_) {" +
-        "    self$$inline_3.domServices_ = goog$component$DomServices.get(" +
-        "        self$$inline_3.appContext_);" +
+        "  var self$$inline_2 = self$$2;" +
+        "  if (!self$$inline_2.domServices_) {" +
+        "    self$$inline_2.domServices_ = goog$component$DomServices.get(" +
+        "        self$$inline_2.appContext_);" +
         "  }" +
-        "  JSCompiler_inline_result$$1=self$$inline_3.domServices_;" +
+        "  JSCompiler_inline_result$$1=self$$inline_2.domServices_;" +
         "  }" +
         "  var myUrl = new JSCompiler_temp_const$$0(" +
         "      JSCompiler_inline_result$$1.getDomHelper()." +
@@ -2154,11 +2154,11 @@ public class InlineFunctionsTest extends CompilerTestCase {
         "    $(this).data('checkboxes');\n" +
         "  }\n" +
         "})(jQuery)",
-        "{var $$$inline_3=jQuery;\n" +
-        "$$$inline_3.fn.multicheck=function(options$$inline_7){\n" +
-        "  {options$$inline_7.checkboxes=" +
-            "$$$inline_3(this).siblings(\":checkbox\");\n" +
-        "  {$$$inline_3(this).data(\"checkboxes\")}" +
+        "{var $$$inline_0=jQuery;\n" +
+        "$$$inline_0.fn.multicheck=function(options$$inline_4){\n" +
+        "  {options$$inline_4.checkboxes=" +
+            "$$$inline_0(this).siblings(\":checkbox\");\n" +
+        "  {$$$inline_0(this).data(\"checkboxes\")}" +
         "  }\n" +
         "}\n" +
         "}");
@@ -2167,15 +2167,15 @@ public class InlineFunctionsTest extends CompilerTestCase {
   public void testAnonymous1() {
     assumeMinimumCapture = false;
     test("(function(){var a=10;(function(){var b=a;a++;alert(b)})()})();",
-         "{var a$$inline_2=10;" +
-         "{var b$$inline_3=a$$inline_2;" +
-         "a$$inline_2++;alert(b$$inline_3)}}");
+         "{var a$$inline_0=10;" +
+         "{var b$$inline_1=a$$inline_0;" +
+         "a$$inline_0++;alert(b$$inline_1)}}");
 
     assumeMinimumCapture = true;
     test("(function(){var a=10;(function(){var b=a;a++;alert(b)})()})();",
-        "{var a$$inline_4=10;" +
-        "{var b$$inline_1=a$$inline_4;" +
-        "a$$inline_4++;alert(b$$inline_1)}}");
+        "{var a$$inline_2=10;" +
+        "{var b$$inline_0=a$$inline_2;" +
+        "a$$inline_2++;alert(b$$inline_0)}}");
   }
 
   public void testAnonymous2() {
@@ -2189,7 +2189,7 @@ public class InlineFunctionsTest extends CompilerTestCase {
 
     assumeMinimumCapture = true;
     test("(function(){var a=10;(function(){arguments;})()})();",
-         "{var a$$inline_1=10;(function(){arguments;})();}");
+         "{var a$$inline_0=10;(function(){arguments;})();}");
 
     test("(function(){(function(){arguments;})()})();",
         "{(function(){arguments;})()}");
@@ -2217,14 +2217,14 @@ public class InlineFunctionsTest extends CompilerTestCase {
         "function _testLocalVariableInLoop_(){\n" +
         "  var result=0;\n" +
         "  {" +
-        "  var arr$$inline_4=[1,2,3,4,5];\n" +
-        "  var i$$inline_5=0;\n" +
-        "  var l$$inline_6=arr$$inline_4.length;\n" +
-        "  for(;i$$inline_5<l$$inline_6;i$$inline_5++){\n" +
-        "    var j$$inline_7=arr$$inline_4[i$$inline_5];\n" +
+        "  var arr$$inline_0=[1,2,3,4,5];\n" +
+        "  var i$$inline_1=0;\n" +
+        "  var l$$inline_2=arr$$inline_0.length;\n" +
+        "  for(;i$$inline_1<l$$inline_2;i$$inline_1++){\n" +
+        "    var j$$inline_3=arr$$inline_0[i$$inline_1];\n" +
         "    (function(){\n" +
-        "       var k$$inline_8=j$$inline_7;\n" +
-        "       setTimeout(function(){result+=k$$inline_8},5*i$$inline_5)\n" +
+        "       var k$$inline_4=j$$inline_3;\n" +
+        "       setTimeout(function(){result+=k$$inline_4},5*i$$inline_1)\n" +
         "     })()\n" +
         "  }\n" +
         "  }\n" +
@@ -2247,12 +2247,12 @@ public class InlineFunctionsTest extends CompilerTestCase {
         "function _testLocalVariable_(){\n" +
         "  var result=0;\n" +
         "  {\n" +
-        "  var j$$inline_4=[i];\n" +
+        "  var j$$inline_2=[i];\n" +
         "  {\n" +
-        "  var j$$inline_1=j$$inline_4;\n" +  // this temp is needed.
-        "  setTimeout(function(){result+=j$$inline_1},5*i);\n" +
+        "  var j$$inline_0=j$$inline_2;\n" +  // this temp is needed.
+        "  setTimeout(function(){result+=j$$inline_0},5*i);\n" +
         "  }\n" +
-        "  j$$inline_4=null\n" + // because this value can be modified later.
+        "  j$$inline_2=null\n" + // because this value can be modified later.
         "  }\n" +
         "}");
   }
diff --git a/test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java b/test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java
index 30c9518..0dd6c56 100644
--- a/test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java
+++ b/test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java
@@ -335,4 +335,28 @@ public class MakeDeclaredNamesUniqueTest extends CompilerTestCase {
     test("var CONST = 3; var b = CONST;",
          "var CONST$$unique_0 = 3; var b$$unique_1 = CONST$$unique_0;");
   }
+  public void testMakeLocalNamesUniqueWithContext5() {
+    // Set the test type
+    this.useDefaultRenamer = true;
+
+    testWithInversion(
+        "function f(){var f; f = 1}",
+        "function f(){var f$$1; f$$1 = 1}");
+    testWithInversion(
+        "function f(f){f = 1}",
+        "function f(f$$1){f$$1 = 1}");
+    testWithInversion(
+        "function f(f){var f; f = 1}",
+        "function f(f$$1){var f$$1; f$$1 = 1}");
+
+    test(
+        "var fn = function f(){var f; f = 1}",
+        "var fn = function f(){var f$$1; f$$1 = 1}");
+    test(
+        "var fn = function f(f){f = 1}",
+        "var fn = function f(f$$1){f$$1 = 1}");
+    test(
+        "var fn = function f(f){var f; f = 1}",
+        "var fn = function f(f$$1){var f$$1; f$$1 = 1}");
+  }
 }
