--- Overwrite: testTanhInf
1040,1041c1040,1041
<         TestUtils.assertSame(nanZero, infOne.tanh());
<         TestUtils.assertSame(nanZero, negInfOne.tanh());
---
>         TestUtils.assertSame(Complex.valueOf(1.0, 0.0), infOne.tanh());
>         TestUtils.assertSame(Complex.valueOf(-1.0, 0.0), negInfOne.tanh());
--- Overwrite: testTan
998a999,1005
>         /* Check that no overflow occurs (MATH-722) */
>         Complex actual = new Complex(3.0, 1E10).tan();
>         expected = new Complex(0, 1);
>         TestUtils.assertEquals(expected, actual, 1.0e-5);
>         actual = new Complex(3.0, -1E10).tan();
>         expected = new Complex(0, -1);
>         TestUtils.assertEquals(expected, actual, 1.0e-5);
--- Overwrite: testTanh
1035a1036,1042
>         /* Check that no overflow occurs (MATH-722) */
>         Complex actual = new Complex(1E10, 3.0).tanh();
>         expected = new Complex(1, 0);
>         TestUtils.assertEquals(expected, actual, 1.0e-5);
>         actual = new Complex(-1E10, 3.0).tanh();
>         expected = new Complex(-1, 0);
>         TestUtils.assertEquals(expected, actual, 1.0e-5);
--- Overwrite: testTanInf
1015,1016c1015,1016
<         TestUtils.assertSame(zeroNaN, oneInf.tan());
<         TestUtils.assertSame(zeroNaN, oneNegInf.tan());
---
>         TestUtils.assertSame(Complex.valueOf(0.0, 1.0), oneInf.tan());
>         TestUtils.assertSame(Complex.valueOf(0.0, -1.0), oneNegInf.tan());
