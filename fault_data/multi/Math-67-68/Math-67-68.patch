diff --git a/defects4j.build.properties b/defects4j.build.properties
index f375323..fc13066 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=68
+d4j.classes.instrument=org/apache/commons/math/ConvergenceException.class,org/apache/commons/math/ConvergenceException\$*.class,org/apache/commons/math/ConvergingAlgorithm.class,org/apache/commons/math/ConvergingAlgorithm\$*.class,org/apache/commons/math/ConvergingAlgorithmImpl.class,org/apache/commons/math/ConvergingAlgorithmImpl\$*.class,org/apache/commons/math/FunctionEvaluationException.class,org/apache/commons/math/FunctionEvaluationException\$*.class,org/apache/commons/math/MathException.class,org/apache/commons/math/MathException\$*.class,org/apache/commons/math/MathRuntimeException.class,org/apache/commons/math/MathRuntimeException\$*.class,org/apache/commons/math/MaxEvaluationsExceededException.class,org/apache/commons/math/MaxEvaluationsExceededException\$*.class,org/apache/commons/math/MaxIterationsExceededException.class,org/apache/commons/math/MaxIterationsExceededException\$*.class,org/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction.class,org/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction\$*.class,org/apache/commons/math/analysis/DifferentiableUnivariateRealFunction.class,org/apache/commons/math/analysis/DifferentiableUnivariateRealFunction\$*.class,org/apache/commons/math/analysis/MultivariateMatrixFunction.class,org/apache/commons/math/analysis/MultivariateMatrixFunction\$*.class,org/apache/commons/math/analysis/MultivariateVectorialFunction.class,org/apache/commons/math/analysis/MultivariateVectorialFunction\$*.class,org/apache/commons/math/analysis/UnivariateRealFunction.class,org/apache/commons/math/analysis/UnivariateRealFunction\$*.class,org/apache/commons/math/linear/InvalidMatrixException.class,org/apache/commons/math/linear/InvalidMatrixException\$*.class,org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.class,org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer\$*.class,org/apache/commons/math/optimization/GoalType.class,org/apache/commons/math/optimization/GoalType\$*.class,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.class,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer\$*.class,org/apache/commons/math/optimization/OptimizationException.class,org/apache/commons/math/optimization/OptimizationException\$*.class,org/apache/commons/math/optimization/SimpleVectorialValueChecker.class,org/apache/commons/math/optimization/SimpleVectorialValueChecker\$*.class,org/apache/commons/math/optimization/UnivariateRealOptimizer.class,org/apache/commons/math/optimization/UnivariateRealOptimizer\$*.class,org/apache/commons/math/optimization/VectorialConvergenceChecker.class,org/apache/commons/math/optimization/VectorialConvergenceChecker\$*.class,org/apache/commons/math/optimization/VectorialPointValuePair.class,org/apache/commons/math/optimization/VectorialPointValuePair\$*.class,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.class,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer\$*.class,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.class,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer\$*.class,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.class,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer\$*.class,org/apache/commons/math/optimization/univariate/BrentOptimizer.class,org/apache/commons/math/optimization/univariate/BrentOptimizer\$*.class,org/apache/commons/math/random/JDKRandomGenerator.class,org/apache/commons/math/random/JDKRandomGenerator\$*.class,org/apache/commons/math/random/RandomGenerator.class,org/apache/commons/math/random/RandomGenerator\$*.class,org/apache/commons/math/util/Localizable.class,org/apache/commons/math/util/Localizable\$*.class,org/apache/commons/math/util/LocalizedFormats.class,org/apache/commons/math/util/LocalizedFormats\$*.class
 d4j.classes.modified=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer
 d4j.classes.relevant=org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction,org.apache.commons.math.analysis.MultivariateMatrixFunction,org.apache.commons.math.analysis.MultivariateVectorialFunction,org.apache.commons.math.ConvergenceException,org.apache.commons.math.FunctionEvaluationException,org.apache.commons.math.linear.InvalidMatrixException,org.apache.commons.math.MathException,org.apache.commons.math.MathRuntimeException,org.apache.commons.math.MaxEvaluationsExceededException,org.apache.commons.math.MaxIterationsExceededException,org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer,org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer,org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer,org.apache.commons.math.optimization.OptimizationException,org.apache.commons.math.optimization.SimpleVectorialValueChecker,org.apache.commons.math.optimization.VectorialConvergenceChecker,org.apache.commons.math.optimization.VectorialPointValuePair
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java b/src/test/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java
index 22a5293..e066703 100644
--- a/src/test/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java
+++ b/src/test/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java
@@ -83,8 +83,8 @@ public class MultiStartUnivariateRealOptimizerTest {
         }
 
         assertEquals(-0.27195612846834, minimizer.optimize(f, GoalType.MINIMIZE, -0.3, -0.2), 1.0e-13);
-        assertEquals(-0.27194301946870, minimizer.getResult(), 1.0e-13);
-        assertEquals(-0.04433426940878, minimizer.getFunctionValue(), 1.0e-13);
+        assertEquals(-0.27195612846834, minimizer.getResult(), 1.0e-13);
+        assertEquals(-0.04433426954946, minimizer.getFunctionValue(), 1.0e-13);
 
         double[] optima = minimizer.getOptima();
         double[] optimaValues = minimizer.getOptimaValues();
