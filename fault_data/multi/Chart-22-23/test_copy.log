--- Insert: testRemoveColumnByKey
148a149,176
>     public void testRemoveColumnByKey() {
>         KeyedObjects2D data = new KeyedObjects2D();
>         data.setObject("Obj1", "R1", "C1");
>         data.setObject("Obj2", "R2", "C2");
>         data.removeColumn("C2");
>         assertEquals(1, data.getColumnCount());
>         assertEquals("Obj1", data.getObject(0, 0));
>         
>         // try unknown column key
>         boolean pass = false;
>         try {
>             data.removeColumn("XXX");
>         }
>         catch (UnknownKeyException e) {
>             pass = true;
>         }
>         assertTrue(pass);
>         
>         // try null column key
>         pass = false;
>         try {
>             data.removeColumn(null);
>         }
>         catch (IllegalArgumentException e) {
>             pass = true;
>         }
>         assertTrue(pass);
>     }
--- Insert: testRemoveValue
176a177,185
>     public void testRemoveValue() {
>         KeyedObjects2D data = new KeyedObjects2D();
>         data.setObject("Obj1", "R1", "C1");
>         data.setObject("Obj2", "R2", "C2");
>         data.removeObject("R2", "C2");
>         assertEquals(1, data.getRowCount());
>         assertEquals(1, data.getColumnCount());
>         assertEquals("Obj1", data.getObject(0, 0));
>     }
--- Insert: testGetValueByKey
185a186,231
>     public void testGetValueByKey() {
>         KeyedObjects2D data = new KeyedObjects2D();
>         data.addObject("Obj1", "R1", "C1");
>         data.addObject("Obj2", "R2", "C2");
>         assertEquals("Obj1", data.getObject("R1", "C1"));
>         assertEquals("Obj2", data.getObject("R2", "C2"));
>         assertNull(data.getObject("R1", "C2"));
>         assertNull(data.getObject("R2", "C1"));
>         
>         // check invalid indices
>         boolean pass = false;
>         try {
>             data.getObject("XX", "C1");
>         }
>         catch (UnknownKeyException e) {
>             pass = true;
>         }
>         assertTrue(pass);
>         
>         pass = false;
>         try {
>             data.getObject("R1", "XX");
>         }
>         catch (UnknownKeyException e) {
>             pass = true;
>         }
>         assertTrue(pass);
> 
>         pass = false;
>         try {
>             data.getObject("XX", "C1");
>         }
>         catch (UnknownKeyException e) {
>             pass = true;
>         }
>         assertTrue(pass);
> 
>         pass = false;
>         try {
>             data.getObject("R1", "XX");
>         }
>         catch (UnknownKeyException e) {
>             pass = true;
>         }
>         assertTrue(pass);
>     }
--- Insert: testRemoveColumnByIndex
231a232,259
>     public void testRemoveColumnByIndex() {
>         KeyedObjects2D data = new KeyedObjects2D();
>         data.setObject("Obj1", "R1", "C1");
>         data.setObject("Obj2", "R2", "C2");
>         data.removeColumn(0);
>         assertEquals(1, data.getColumnCount());
>         assertEquals("Obj2", data.getObject(1, 0));
>         
>         // try negative column index
>         boolean pass = false;
>         try {
>             data.removeColumn(-1);
>         }
>         catch (IndexOutOfBoundsException e) {
>             pass = true;
>         }
>         assertTrue(pass);
>         
>         // try column index too high
>         pass = false;
>         try {
>             data.removeColumn(data.getColumnCount());
>         }
>         catch (IndexOutOfBoundsException e) {
>             pass = true;
>         }
>         assertTrue(pass);
>     }
--- Insert: testSetObject
259a260,291
>     public void testSetObject() {
>         KeyedObjects2D data = new KeyedObjects2D();
>         data.setObject("Obj1", "R1", "C1");
>         data.setObject("Obj2", "R2", "C2");
>         assertEquals("Obj1", data.getObject("R1", "C1"));
>         assertEquals("Obj2", data.getObject("R2", "C2"));
>         assertNull(data.getObject("R1", "C2"));
>         assertNull(data.getObject("R2", "C1"));
>         
>         // confirm overwriting an existing value
>         data.setObject("ABC", "R2", "C2");
>         assertEquals("ABC", data.getObject("R2", "C2"));
>         
>         // try null keys
>         boolean pass = false;
>         try {
>             data.setObject("X", null, "C1");
>         }
>         catch (IllegalArgumentException e) {
>             pass = true;
>         }
>         assertTrue(pass);
>         
>         pass = false;
>         try {
>             data.setObject("X", "R1", null);
>         }
>         catch (IllegalArgumentException e) {
>             pass = true;
>         }
>         assertTrue(pass);
>     }
--- Insert: testRemoveRowByKey
291a292,319
>     public void testRemoveRowByKey() {
>         KeyedObjects2D data = new KeyedObjects2D();
>         data.setObject("Obj1", "R1", "C1");
>         data.setObject("Obj2", "R2", "C2");
>         data.removeRow("R2");
>         assertEquals(1, data.getRowCount());
>         assertEquals("Obj1", data.getObject(0, 0));
>         
>         // try unknown row key
>         boolean pass = false;
>         try {
>             data.removeRow("XXX");
>         }
>         catch (UnknownKeyException e) {
>             pass = true;
>         }
>         assertTrue(pass);
>         
>         // try null row key
>         pass = false;
>         try {
>             data.removeRow(null);
>         }
>         catch (IllegalArgumentException e) {
>             pass = true;
>         }
>         assertTrue(pass);
>     }
