diff --git a/defects4j.build.properties b/defects4j.build.properties
index 3fc6b9d..b6ae093 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=17
+d4j.classes.instrument=org/apache/commons/math3/Field.class,org/apache/commons/math3/Field\$*.class,org/apache/commons/math3/FieldElement.class,org/apache/commons/math3/FieldElement\$*.class,org/apache/commons/math3/dfp/Dfp.class,org/apache/commons/math3/dfp/Dfp\$*.class,org/apache/commons/math3/dfp/DfpField.class,org/apache/commons/math3/dfp/DfpField\$*.class,org/apache/commons/math3/exception/DimensionMismatchException.class,org/apache/commons/math3/exception/DimensionMismatchException\$*.class,org/apache/commons/math3/exception/MathArithmeticException.class,org/apache/commons/math3/exception/MathArithmeticException\$*.class,org/apache/commons/math3/exception/MathIllegalArgumentException.class,org/apache/commons/math3/exception/MathIllegalArgumentException\$*.class,org/apache/commons/math3/exception/MathIllegalNumberException.class,org/apache/commons/math3/exception/MathIllegalNumberException\$*.class,org/apache/commons/math3/exception/MathIllegalStateException.class,org/apache/commons/math3/exception/MathIllegalStateException\$*.class,org/apache/commons/math3/exception/MathInternalError.class,org/apache/commons/math3/exception/MathInternalError\$*.class,org/apache/commons/math3/exception/NonMonotonicSequenceException.class,org/apache/commons/math3/exception/NonMonotonicSequenceException\$*.class,org/apache/commons/math3/exception/NotPositiveException.class,org/apache/commons/math3/exception/NotPositiveException\$*.class,org/apache/commons/math3/exception/NotStrictlyPositiveException.class,org/apache/commons/math3/exception/NotStrictlyPositiveException\$*.class,org/apache/commons/math3/exception/NullArgumentException.class,org/apache/commons/math3/exception/NullArgumentException\$*.class,org/apache/commons/math3/exception/NumberIsTooSmallException.class,org/apache/commons/math3/exception/NumberIsTooSmallException\$*.class,org/apache/commons/math3/exception/util/ExceptionContextProvider.class,org/apache/commons/math3/exception/util/ExceptionContextProvider\$*.class,org/apache/commons/math3/exception/util/Localizable.class,org/apache/commons/math3/exception/util/Localizable\$*.class,org/apache/commons/math3/geometry/Space.class,org/apache/commons/math3/geometry/Space\$*.class,org/apache/commons/math3/geometry/Vector.class,org/apache/commons/math3/geometry/Vector\$*.class,org/apache/commons/math3/geometry/euclidean/threed/Line.class,org/apache/commons/math3/geometry/euclidean/threed/Line\$*.class,org/apache/commons/math3/geometry/euclidean/threed/Vector3D.class,org/apache/commons/math3/geometry/euclidean/threed/Vector3D\$*.class,org/apache/commons/math3/geometry/partitioning/Embedding.class,org/apache/commons/math3/geometry/partitioning/Embedding\$*.class,org/apache/commons/math3/util/FastMath.class,org/apache/commons/math3/util/FastMath\$*.class,org/apache/commons/math3/util/MathArrays.class,org/apache/commons/math3/util/MathArrays\$*.class
 d4j.classes.modified=org.apache.commons.math3.dfp.Dfp
 d4j.classes.relevant=org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.DfpField,org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java b/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java
index 5da16c9..499bda5 100644
--- a/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java
+++ b/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java
@@ -128,5 +128,20 @@ public class LineTest {
                             1.0e-10);
         Assert.assertNull(l.intersection(new Line(new Vector3D(0, -4, 0), new Vector3D(1, -4, 0))));
     }
+    @Test
+    public void testRevert() {
+        
+        // setup
+        Line line = new Line(new Vector3D(1653345.6696423641, 6170370.041579291, 90000),
+                             new Vector3D(1650757.5050732433, 6160710.879908984, 0.9));
+        Vector3D expected = line.getDirection().negate();
+
+        // action
+        Line reverted = line.revert();
+
+        // verify
+        Assert.assertArrayEquals(expected.toArray(), reverted.getDirection().toArray(), 0);
+
+    }
 
 }
