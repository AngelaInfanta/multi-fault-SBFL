diff --git a/defects4j.build.properties b/defects4j.build.properties
index 5fecfd4..668d989 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=34
+d4j.classes.instrument=org/apache/commons/math3/exception/DimensionMismatchException.class,org/apache/commons/math3/exception/DimensionMismatchException\$*.class,org/apache/commons/math3/exception/MathArithmeticException.class,org/apache/commons/math3/exception/MathArithmeticException\$*.class,org/apache/commons/math3/exception/MathIllegalArgumentException.class,org/apache/commons/math3/exception/MathIllegalArgumentException\$*.class,org/apache/commons/math3/exception/MathIllegalNumberException.class,org/apache/commons/math3/exception/MathIllegalNumberException\$*.class,org/apache/commons/math3/exception/MathIllegalStateException.class,org/apache/commons/math3/exception/MathIllegalStateException\$*.class,org/apache/commons/math3/exception/MathInternalError.class,org/apache/commons/math3/exception/MathInternalError\$*.class,org/apache/commons/math3/exception/NoDataException.class,org/apache/commons/math3/exception/NoDataException\$*.class,org/apache/commons/math3/exception/NonMonotonicSequenceException.class,org/apache/commons/math3/exception/NonMonotonicSequenceException\$*.class,org/apache/commons/math3/exception/NotPositiveException.class,org/apache/commons/math3/exception/NotPositiveException\$*.class,org/apache/commons/math3/exception/NotStrictlyPositiveException.class,org/apache/commons/math3/exception/NotStrictlyPositiveException\$*.class,org/apache/commons/math3/exception/NullArgumentException.class,org/apache/commons/math3/exception/NullArgumentException\$*.class,org/apache/commons/math3/exception/NumberIsTooLargeException.class,org/apache/commons/math3/exception/NumberIsTooLargeException\$*.class,org/apache/commons/math3/exception/NumberIsTooSmallException.class,org/apache/commons/math3/exception/NumberIsTooSmallException\$*.class,org/apache/commons/math3/exception/OutOfRangeException.class,org/apache/commons/math3/exception/OutOfRangeException\$*.class,org/apache/commons/math3/exception/util/ExceptionContextProvider.class,org/apache/commons/math3/exception/util/ExceptionContextProvider\$*.class,org/apache/commons/math3/exception/util/Localizable.class,org/apache/commons/math3/exception/util/Localizable\$*.class,org/apache/commons/math3/genetics/AbstractListChromosome.class,org/apache/commons/math3/genetics/AbstractListChromosome\$*.class,org/apache/commons/math3/genetics/BinaryChromosome.class,org/apache/commons/math3/genetics/BinaryChromosome\$*.class,org/apache/commons/math3/genetics/Chromosome.class,org/apache/commons/math3/genetics/Chromosome\$*.class,org/apache/commons/math3/genetics/Fitness.class,org/apache/commons/math3/genetics/Fitness\$*.class,org/apache/commons/math3/genetics/GeneticAlgorithm.class,org/apache/commons/math3/genetics/GeneticAlgorithm\$*.class,org/apache/commons/math3/genetics/InvalidRepresentationException.class,org/apache/commons/math3/genetics/InvalidRepresentationException\$*.class,org/apache/commons/math3/genetics/ListPopulation.class,org/apache/commons/math3/genetics/ListPopulation\$*.class,org/apache/commons/math3/genetics/Population.class,org/apache/commons/math3/genetics/Population\$*.class,org/apache/commons/math3/random/JDKRandomGenerator.class,org/apache/commons/math3/random/JDKRandomGenerator\$*.class,org/apache/commons/math3/random/RandomGenerator.class,org/apache/commons/math3/random/RandomGenerator\$*.class,org/apache/commons/math3/util/MathArrays.class,org/apache/commons/math3/util/MathArrays\$*.class
 d4j.classes.modified=org.apache.commons.math3.genetics.ListPopulation
 d4j.classes.relevant=org.apache.commons.math3.exception.MathIllegalArgumentException,org.apache.commons.math3.exception.MathIllegalNumberException,org.apache.commons.math3.exception.NotPositiveException,org.apache.commons.math3.exception.NullArgumentException,org.apache.commons.math3.exception.NumberIsTooLargeException,org.apache.commons.math3.exception.NumberIsTooSmallException,org.apache.commons.math3.exception.OutOfRangeException,org.apache.commons.math3.exception.util.ExceptionContextProvider,org.apache.commons.math3.exception.util.Localizable,org.apache.commons.math3.genetics.AbstractListChromosome,org.apache.commons.math3.genetics.BinaryChromosome,org.apache.commons.math3.genetics.Chromosome,org.apache.commons.math3.genetics.Fitness,org.apache.commons.math3.genetics.GeneticAlgorithm,org.apache.commons.math3.genetics.InvalidRepresentationException,org.apache.commons.math3.genetics.ListPopulation,org.apache.commons.math3.genetics.Population,org.apache.commons.math3.random.JDKRandomGenerator,org.apache.commons.math3.random.RandomGenerator
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/math3/util/MathArraysTest.java b/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
index 5bdb7b4..7497b73 100644
--- a/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
+++ b/src/test/java/org/apache/commons/math3/util/MathArraysTest.java
@@ -648,4 +648,11 @@ public class MathArraysTest {
             Assert.fail("expecting MathIllegalArgumentException");
         } catch (MathIllegalArgumentException ex) {}
     }
+    @Test
+    public void testLinearCombinationWithSingleElementArray() {
+        final double[] a = { 1.23456789 };
+        final double[] b = { 98765432.1 };
+
+        Assert.assertEquals(a[0] * b[0], MathArrays.linearCombination(a, b), 0d);
+    }
 }
