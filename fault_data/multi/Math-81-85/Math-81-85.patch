diff --git a/defects4j.build.properties b/defects4j.build.properties
index cc3a568..0b68f04 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=85
+d4j.classes.instrument=org/apache/commons/math/ConvergenceException.class,org/apache/commons/math/ConvergenceException\$*.class,org/apache/commons/math/ConvergingAlgorithm.class,org/apache/commons/math/ConvergingAlgorithm\$*.class,org/apache/commons/math/ConvergingAlgorithmImpl.class,org/apache/commons/math/ConvergingAlgorithmImpl\$*.class,org/apache/commons/math/FunctionEvaluationException.class,org/apache/commons/math/FunctionEvaluationException\$*.class,org/apache/commons/math/MathException.class,org/apache/commons/math/MathException\$*.class,org/apache/commons/math/MathRuntimeException.class,org/apache/commons/math/MathRuntimeException\$*.class,org/apache/commons/math/MaxIterationsExceededException.class,org/apache/commons/math/MaxIterationsExceededException\$*.class,org/apache/commons/math/analysis/UnivariateRealFunction.class,org/apache/commons/math/analysis/UnivariateRealFunction\$*.class,org/apache/commons/math/analysis/solvers/BrentSolver.class,org/apache/commons/math/analysis/solvers/BrentSolver\$*.class,org/apache/commons/math/analysis/solvers/UnivariateRealSolver.class,org/apache/commons/math/analysis/solvers/UnivariateRealSolver\$*.class,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactory.class,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactory\$*.class,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl.class,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl\$*.class,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.class,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl\$*.class,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.class,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils\$*.class,org/apache/commons/math/distribution/AbstractContinuousDistribution.class,org/apache/commons/math/distribution/AbstractContinuousDistribution\$*.class,org/apache/commons/math/distribution/AbstractDistribution.class,org/apache/commons/math/distribution/AbstractDistribution\$*.class,org/apache/commons/math/distribution/ContinuousDistribution.class,org/apache/commons/math/distribution/ContinuousDistribution\$*.class,org/apache/commons/math/distribution/Distribution.class,org/apache/commons/math/distribution/Distribution\$*.class,org/apache/commons/math/distribution/HasDensity.class,org/apache/commons/math/distribution/HasDensity\$*.class,org/apache/commons/math/distribution/NormalDistribution.class,org/apache/commons/math/distribution/NormalDistribution\$*.class,org/apache/commons/math/distribution/NormalDistributionImpl.class,org/apache/commons/math/distribution/NormalDistributionImpl\$*.class,org/apache/commons/math/linear/AbstractFieldMatrix.class,org/apache/commons/math/linear/AbstractFieldMatrix\$*.class,org/apache/commons/math/linear/AbstractRealMatrix.class,org/apache/commons/math/linear/AbstractRealMatrix\$*.class,org/apache/commons/math/linear/AnyMatrix.class,org/apache/commons/math/linear/AnyMatrix\$*.class,org/apache/commons/math/linear/Array2DRowFieldMatrix.class,org/apache/commons/math/linear/Array2DRowFieldMatrix\$*.class,org/apache/commons/math/linear/Array2DRowRealMatrix.class,org/apache/commons/math/linear/Array2DRowRealMatrix\$*.class,org/apache/commons/math/linear/ArrayRealVector.class,org/apache/commons/math/linear/ArrayRealVector\$*.class,org/apache/commons/math/linear/BigMatrix.class,org/apache/commons/math/linear/BigMatrix\$*.class,org/apache/commons/math/linear/BlockFieldMatrix.class,org/apache/commons/math/linear/BlockFieldMatrix\$*.class,org/apache/commons/math/linear/BlockRealMatrix.class,org/apache/commons/math/linear/BlockRealMatrix\$*.class,org/apache/commons/math/linear/DecompositionSolver.class,org/apache/commons/math/linear/DecompositionSolver\$*.class,org/apache/commons/math/linear/DefaultRealMatrixPreservingVisitor.class,org/apache/commons/math/linear/DefaultRealMatrixPreservingVisitor\$*.class,org/apache/commons/math/linear/EigenDecomposition.class,org/apache/commons/math/linear/EigenDecomposition\$*.class,org/apache/commons/math/linear/EigenDecompositionImpl.class,org/apache/commons/math/linear/EigenDecompositionImpl\$*.class,org/apache/commons/math/linear/FieldMatrix.class,org/apache/commons/math/linear/FieldMatrix\$*.class,org/apache/commons/math/linear/FieldMatrixPreservingVisitor.class,org/apache/commons/math/linear/FieldMatrixPreservingVisitor\$*.class,org/apache/commons/math/linear/FieldVector.class,org/apache/commons/math/linear/FieldVector\$*.class,org/apache/commons/math/linear/InvalidMatrixException.class,org/apache/commons/math/linear/InvalidMatrixException\$*.class,org/apache/commons/math/linear/MatrixIndexException.class,org/apache/commons/math/linear/MatrixIndexException\$*.class,org/apache/commons/math/linear/MatrixUtils.class,org/apache/commons/math/linear/MatrixUtils\$*.class,org/apache/commons/math/linear/NonSquareMatrixException.class,org/apache/commons/math/linear/NonSquareMatrixException\$*.class,org/apache/commons/math/linear/RealMatrix.class,org/apache/commons/math/linear/RealMatrix\$*.class,org/apache/commons/math/linear/RealMatrixChangingVisitor.class,org/apache/commons/math/linear/RealMatrixChangingVisitor\$*.class,org/apache/commons/math/linear/RealMatrixPreservingVisitor.class,org/apache/commons/math/linear/RealMatrixPreservingVisitor\$*.class,org/apache/commons/math/linear/RealVector.class,org/apache/commons/math/linear/RealVector\$*.class,org/apache/commons/math/linear/RealVectorFormat.class,org/apache/commons/math/linear/RealVectorFormat\$*.class,org/apache/commons/math/special/Erf.class,org/apache/commons/math/special/Erf\$*.class,org/apache/commons/math/special/Gamma.class,org/apache/commons/math/special/Gamma\$*.class,org/apache/commons/math/util/CompositeFormat.class,org/apache/commons/math/util/CompositeFormat\$*.class,org/apache/commons/math/util/ContinuedFraction.class,org/apache/commons/math/util/ContinuedFraction\$*.class
 d4j.classes.modified=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
 d4j.classes.relevant=org.apache.commons.math.analysis.solvers.BrentSolver,org.apache.commons.math.analysis.solvers.UnivariateRealSolver,org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory,org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImpl,org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl,org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils,org.apache.commons.math.analysis.UnivariateRealFunction,org.apache.commons.math.ConvergenceException,org.apache.commons.math.ConvergingAlgorithm,org.apache.commons.math.ConvergingAlgorithmImpl,org.apache.commons.math.distribution.AbstractContinuousDistribution,org.apache.commons.math.distribution.AbstractDistribution,org.apache.commons.math.distribution.ContinuousDistribution,org.apache.commons.math.distribution.Distribution,org.apache.commons.math.distribution.HasDensity,org.apache.commons.math.distribution.NormalDistribution,org.apache.commons.math.distribution.NormalDistributionImpl,org.apache.commons.math.FunctionEvaluationException,org.apache.commons.math.MathException,org.apache.commons.math.MaxIterationsExceededException,org.apache.commons.math.special.Erf,org.apache.commons.math.special.Gamma,org.apache.commons.math.util.ContinuedFraction
 d4j.dir.src.classes=src/java
diff --git a/src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java b/src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java
index 4a56dba..fafa73c 100644
--- a/src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java
+++ b/src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java
@@ -386,5 +386,37 @@ public class EigenDecompositionImplTest extends TestCase {
         }
         return MatrixUtils.createRealMatrix(dData);
     }
+    public void testMath308() {
+
+        double[] mainTridiagonal = {
+            22.330154644539597, 46.65485522478641, 17.393672330044705, 54.46687435351116, 80.17800767709437
+        };
+        double[] secondaryTridiagonal = {
+            13.04450406501361, -5.977590941539671, 2.9040909856707517, 7.1570352792841225
+        };
+
+        // the reference values have been computed using routine DSTEMR
+        // from the fortran library LAPACK version 3.2.1
+        double[] refEigenValues = {
+            82.044413207204002, 53.456697699894512, 52.536278520113882, 18.847969733754262, 14.138204224043099
+        };
+        RealVector[] refEigenVectors = {
+            new ArrayRealVector(new double[] { -0.000462690386766, -0.002118073109055,  0.011530080757413,  0.252322434584915,  0.967572088232592 }),
+            new ArrayRealVector(new double[] {  0.314647769490148,  0.750806415553905, -0.167700312025760, -0.537092972407375,  0.143854968127780 }),
+            new ArrayRealVector(new double[] {  0.222368839324646,  0.514921891363332, -0.021377019336614,  0.801196801016305, -0.207446991247740 }),
+            new ArrayRealVector(new double[] {  0.713933751051495, -0.190582113553930,  0.671410443368332, -0.056056055955050,  0.006541576993581 }),
+            new ArrayRealVector(new double[] {  0.584677060845929, -0.367177264979103, -0.721453187784497,  0.052971054621812, -0.005740715188257 })
+        };
+
+        EigenDecomposition decomposition =
+            new EigenDecompositionImpl(mainTridiagonal, secondaryTridiagonal, MathUtils.SAFE_MIN);
+
+        double[] eigenValues = decomposition.getRealEigenvalues();
+        for (int i = 0; i < refEigenValues.length; ++i) {
+            assertEquals(refEigenValues[i], eigenValues[i], 1.0e-5);
+            assertEquals(0, refEigenVectors[i].subtract(decomposition.getEigenvector(i)).getNorm(), 2.0e-7);
+        }
+
+    }
 
 }
