diff --git a/defects4j.build.properties b/defects4j.build.properties
index 68771c5..096a4ec 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=84
+d4j.classes.instrument=org/apache/commons/math/ConvergenceException.class,org/apache/commons/math/ConvergenceException\$*.class,org/apache/commons/math/FunctionEvaluationException.class,org/apache/commons/math/FunctionEvaluationException\$*.class,org/apache/commons/math/MathException.class,org/apache/commons/math/MathException\$*.class,org/apache/commons/math/MaxEvaluationsExceededException.class,org/apache/commons/math/MaxEvaluationsExceededException\$*.class,org/apache/commons/math/MaxIterationsExceededException.class,org/apache/commons/math/MaxIterationsExceededException\$*.class,org/apache/commons/math/analysis/MultivariateRealFunction.class,org/apache/commons/math/analysis/MultivariateRealFunction\$*.class,org/apache/commons/math/optimization/GoalType.class,org/apache/commons/math/optimization/GoalType\$*.class,org/apache/commons/math/optimization/MultivariateRealOptimizer.class,org/apache/commons/math/optimization/MultivariateRealOptimizer\$*.class,org/apache/commons/math/optimization/OptimizationException.class,org/apache/commons/math/optimization/OptimizationException\$*.class,org/apache/commons/math/optimization/RealConvergenceChecker.class,org/apache/commons/math/optimization/RealConvergenceChecker\$*.class,org/apache/commons/math/optimization/RealPointValuePair.class,org/apache/commons/math/optimization/RealPointValuePair\$*.class,org/apache/commons/math/optimization/SimpleScalarValueChecker.class,org/apache/commons/math/optimization/SimpleScalarValueChecker\$*.class,org/apache/commons/math/optimization/direct/DirectSearchOptimizer.class,org/apache/commons/math/optimization/direct/DirectSearchOptimizer\$*.class,org/apache/commons/math/optimization/direct/MultiDirectional.class,org/apache/commons/math/optimization/direct/MultiDirectional\$*.class,org/apache/commons/math/stat/clustering/Cluster.class,org/apache/commons/math/stat/clustering/Cluster\$*.class,org/apache/commons/math/stat/clustering/Clusterable.class,org/apache/commons/math/stat/clustering/Clusterable\$*.class,org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.class,org/apache/commons/math/stat/clustering/EuclideanIntegerPoint\$*.class,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.class,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer\$*.class,org/apache/commons/math/util/MathUtils.class,org/apache/commons/math/util/MathUtils\$*.class
 d4j.classes.modified=org.apache.commons.math.optimization.direct.MultiDirectional
 d4j.classes.relevant=org.apache.commons.math.analysis.MultivariateRealFunction,org.apache.commons.math.ConvergenceException,org.apache.commons.math.FunctionEvaluationException,org.apache.commons.math.MathException,org.apache.commons.math.MaxEvaluationsExceededException,org.apache.commons.math.MaxIterationsExceededException,org.apache.commons.math.optimization.direct.DirectSearchOptimizer,org.apache.commons.math.optimization.direct.MultiDirectional,org.apache.commons.math.optimization.GoalType,org.apache.commons.math.optimization.MultivariateRealOptimizer,org.apache.commons.math.optimization.OptimizationException,org.apache.commons.math.optimization.RealConvergenceChecker,org.apache.commons.math.optimization.RealPointValuePair,org.apache.commons.math.optimization.SimpleScalarValueChecker
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClustererTest.java b/src/test/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClustererTest.java
index da1d8a9..73a1875 100644
--- a/src/test/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClustererTest.java
+++ b/src/test/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClustererTest.java
@@ -93,5 +93,21 @@ public class KMeansPlusPlusClustererTest {
         assertTrue(cluster3Found);
 
     }
+    @Test
+    public void testPerformClusterAnalysisDegenerate() {
+        KMeansPlusPlusClusterer<EuclideanIntegerPoint> transformer = new KMeansPlusPlusClusterer<EuclideanIntegerPoint>(
+                new Random(1746432956321l));
+        EuclideanIntegerPoint[] points = new EuclideanIntegerPoint[] {
+                new EuclideanIntegerPoint(new int[] { 1959, 325100 }),
+                new EuclideanIntegerPoint(new int[] { 1960, 373200 }), };
+        List<Cluster<EuclideanIntegerPoint>> clusters = transformer.cluster(Arrays.asList(points), 1, 1);
+        assertEquals(1, clusters.size());
+        assertEquals(2, (clusters.get(0).getPoints().size()));
+        EuclideanIntegerPoint pt1 = new EuclideanIntegerPoint(new int[] { 1959, 325100 });
+        EuclideanIntegerPoint pt2 = new EuclideanIntegerPoint(new int[] { 1960, 373200 });
+        assertTrue(clusters.get(0).getPoints().contains(pt1));
+        assertTrue(clusters.get(0).getPoints().contains(pt2));
+
+    } 
 
 }
