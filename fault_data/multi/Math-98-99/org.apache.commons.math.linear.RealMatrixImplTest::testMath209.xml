<coverage branch-rate="0.022970903522205207" branches-covered="15" branches-valid="653" complexity="2.256880733944954" line-rate="0.022900763358778626" lines-covered="24" lines-valid="1048" timestamp="1623862386668" version="2.0.3">
	<sources>
		<source>src/java</source>
	</sources>
	<packages>
		<package branch-rate="0.0" complexity="1.2857142857142858" line-rate="0.0" name="org.apache.commons.math">
			<classes>
				<class branch-rate="0.0" complexity="1.2857142857142858" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.2857142857142858" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$1">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.2857142857142858" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$2">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.2857142857142858" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$3">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.2857142857142858" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$4">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.2857142857142858" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$5">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.2857142857142858" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$6">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.2857142857142858" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$7">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.2857142857142858" filename="org/apache/commons/math/MathRuntimeException.java" line-rate="0.0" name="org.apache.commons.math.MathRuntimeException$8">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.04054054054054054" complexity="2.4" line-rate="0.03319502074688797" name="org.apache.commons.math.linear">
			<classes>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/BigMatrix.java" line-rate="1.0" name="org.apache.commons.math.linear.BigMatrix">
					<methods>
					</methods>
					</class>
				<class branch-rate="0.0" complexity="4.112903225806452" filename="org/apache/commons/math/linear/BigMatrixImpl.java" line-rate="0.0" name="org.apache.commons.math.linear.BigMatrixImpl">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/InvalidMatrixException.java" line-rate="0.0" name="org.apache.commons.math.linear.InvalidMatrixException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/MatrixIndexException.java" line-rate="0.0" name="org.apache.commons.math.linear.MatrixIndexException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/linear/RealMatrix.java" line-rate="1.0" name="org.apache.commons.math.linear.RealMatrix">
					<methods>
					</methods>
					</class>
				<class branch-rate="0.1595744680851064" complexity="3.1470588235294117" filename="org/apache/commons/math/linear/RealMatrixImpl.java" line-rate="0.11650485436893204" name="org.apache.commons.math.linear.RealMatrixImpl">
					<methods>
						<method branch-rate="0.5833333333333334" line-rate="0.6875" name="&lt;init&gt;" signature="([[DZ)V">
							<lines>
								<line branch="false" hits="1" number="114" />
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="115">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="118">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="121" />
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="122">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="126" />
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="127">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="true" condition-coverage="100% (2/2)" hits="3" number="131">
									<conditions>
										<condition coverage="100%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="true" condition-coverage="50% (1/2)" hits="2" number="132">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="138" />
								<line branch="false" hits="1" number="140" />
							</lines>
						</method>
						<method branch-rate="0.5" line-rate="1.0" name="getColumnDimension" signature="()I">
							<lines>
								<line branch="true" condition-coverage="50% (2/4)" hits="1" number="408">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
										<condition coverage="50%" number="1" type="jump" />
									</conditions>
								</line>
							</lines>
						</method>
						<method branch-rate="0.5" line-rate="1.0" name="getRowDimension" signature="()I">
							<lines>
								<line branch="true" condition-coverage="50% (1/2)" hits="2" number="403">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
							</lines>
						</method>
						<method branch-rate="0.8333333333333334" line-rate="0.9166666666666666" name="operate" signature="([D)[D">
							<lines>
								<line branch="false" hits="1" number="414" />
								<line branch="false" hits="1" number="415" />
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="416">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="423" />
								<line branch="true" condition-coverage="100% (2/2)" hits="4" number="424">
									<conditions>
										<condition coverage="100%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="3" number="425" />
								<line branch="false" hits="3" number="426" />
								<line branch="true" condition-coverage="100% (2/2)" hits="9" number="427">
									<conditions>
										<condition coverage="100%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="6" number="428" />
								<line branch="false" hits="3" number="430" />
								<line branch="false" hits="1" number="432" />
							</lines>
						</method>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="0.0" line-rate="0.0" name="org.apache.commons.math.util">
			<classes>
				<class branch-rate="0.0" complexity="0.0" filename="org/apache/commons/math/util/MathUtils.java" line-rate="0.0" name="org.apache.commons.math.util.MathUtils">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
	</packages>
</coverage>