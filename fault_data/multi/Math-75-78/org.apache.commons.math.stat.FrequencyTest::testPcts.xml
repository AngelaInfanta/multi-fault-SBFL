<coverage branch-rate="0.07766990291262135" branches-covered="16" branches-valid="206" complexity="1.8208092485549132" line-rate="0.08731466227347612" lines-covered="53" lines-valid="607" timestamp="1623855304252" version="2.0.3">
	<sources>
		<source>src/main/java</source>
	</sources>
	<packages>
		<package branch-rate="0.0" complexity="1.1224489795918366" line-rate="0.0" name="org.apache.commons.math">
			<classes>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ConvergenceException.java" line-rate="0.0" name="org.apache.commons.math.ConvergenceException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ConvergingAlgorithm.java" line-rate="1.0" name="org.apache.commons.math.ConvergingAlgorithm">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ConvergingAlgorithmImpl.java" line-rate="0.0" name="org.apache.commons.math.ConvergingAlgorithmImpl">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/FunctionEvaluationException.java" line-rate="0.0" name="org.apache.commons.math.FunctionEvaluationException">
					<methods>
						</methods>
					</class>
				<class branch-rate="0.0" complexity="1.5" filename="org/apache/commons/math/MathException.java" line-rate="0.0" name="org.apache.commons.math.MathException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/MaxIterationsExceededException.java" line-rate="0.0" name="org.apache.commons.math.MaxIterationsExceededException">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="1.0" complexity="1.0" line-rate="1.0" name="org.apache.commons.math.analysis">
			<classes>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/UnivariateRealFunction.java" line-rate="1.0" name="org.apache.commons.math.analysis.UnivariateRealFunction">
					<methods>
					</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="2.46875" line-rate="0.0" name="org.apache.commons.math.analysis.solvers">
			<classes>
				<class branch-rate="0.0" complexity="5.714285714285714" filename="org/apache/commons/math/analysis/solvers/BrentSolver.java" line-rate="0.0" name="org.apache.commons.math.analysis.solvers.BrentSolver">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java" line-rate="1.0" name="org.apache.commons.math.analysis.solvers.UnivariateRealSolver">
					<methods>
					</methods>
					</class>
				<class branch-rate="0.0" complexity="1.875" filename="org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java" line-rate="0.0" name="org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="1.0" complexity="1.0" line-rate="0.0" name="org.apache.commons.math.ode">
			<classes>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/DerivativeException.java" line-rate="0.0" name="org.apache.commons.math.ode.DerivativeException">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="2.823529411764706" line-rate="0.0" name="org.apache.commons.math.ode.events">
			<classes>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/events/EventException.java" line-rate="0.0" name="org.apache.commons.math.ode.events.EventException">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/events/EventHandler.java" line-rate="1.0" name="org.apache.commons.math.ode.events.EventHandler">
					<methods>
					</methods>
					</class>
				<class branch-rate="0.0" complexity="3.5833333333333335" filename="org/apache/commons/math/ode/events/EventState.java" line-rate="0.0" name="org.apache.commons.math.ode.events.EventState">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="3.5833333333333335" filename="org/apache/commons/math/ode/events/EventState.java" line-rate="0.0" name="org.apache.commons.math.ode.events.EventState$1">
					<methods>
						</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.0" complexity="1.4054054054054055" line-rate="0.0" name="org.apache.commons.math.ode.sampling">
			<classes>
				<class branch-rate="0.0" complexity="1.6818181818181819" filename="org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java" line-rate="0.0" name="org.apache.commons.math.ode.sampling.AbstractStepInterpolator">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/sampling/DummyStepInterpolator.java" line-rate="0.0" name="org.apache.commons.math.ode.sampling.DummyStepInterpolator">
					<methods>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="1.0" filename="org/apache/commons/math/ode/sampling/StepInterpolator.java" line-rate="1.0" name="org.apache.commons.math.ode.sampling.StepInterpolator">
					<methods>
					</methods>
					</class>
			</classes>
		</package>
		<package branch-rate="0.3333333333333333" complexity="2.2285714285714286" line-rate="0.40458015267175573" name="org.apache.commons.math.stat">
			<classes>
				<class branch-rate="0.3333333333333333" complexity="2.2285714285714286" filename="org/apache/commons/math/stat/Frequency.java" line-rate="0.3953488372093023" name="org.apache.commons.math.stat.Frequency">
					<methods>
						<method branch-rate="1.0" line-rate="1.0" name="&lt;init&gt;" signature="()V">
							<lines>
								<line branch="false" hits="1" number="59" />
								<line branch="false" hits="1" number="60" />
								<line branch="false" hits="1" number="61" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="addValue" signature="(I)V">
							<lines>
								<line branch="false" hits="4" number="158" />
								<line branch="false" hits="4" number="159" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="addValue" signature="(J)V">
							<lines>
								<line branch="false" hits="4" number="176" />
								<line branch="false" hits="4" number="177" />
							</lines>
						</method>
						<method branch-rate="0.75" line-rate="0.7272727272727273" name="addValue" signature="(Ljava/lang/Comparable;)V">
							<lines>
								<line branch="false" hits="8" number="133" />
								<line branch="true" condition-coverage="50% (1/2)" hits="8" number="134">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="8" number="138" />
								<line branch="true" condition-coverage="100% (2/2)" hits="8" number="139">
									<conditions>
										<condition coverage="100%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="3" number="140" />
								<line branch="false" hits="5" number="142" />
								<line branch="false" hits="8" number="149" />
								<line branch="false" hits="8" number="150" />
							</lines>
						</method>
						<method branch-rate="0.5" line-rate="0.7777777777777778" name="getCount" signature="(Ljava/lang/Comparable;)J">
							<lines>
								<line branch="true" condition-coverage="50% (1/2)" hits="3" number="243">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="3" number="246" />
								<line branch="false" hits="3" number="248" />
								<line branch="true" condition-coverage="50% (1/2)" hits="3" number="249">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="3" number="250" />
								<line branch="false" hits="3" number="254" />
								<line branch="false" hits="3" number="255" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="getCumFreq" signature="(J)J">
							<lines>
								<line branch="false" hits="1" number="443" />
							</lines>
						</method>
						<method branch-rate="0.4375" line-rate="0.5384615384615384" name="getCumFreq" signature="(Ljava/lang/Comparable;)J">
							<lines>
								<line branch="true" condition-coverage="50% (1/2)" hits="2" number="381">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="true" condition-coverage="100% (2/2)" hits="2" number="384">
									<conditions>
										<condition coverage="100%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="385" />
								<line branch="false" hits="1" number="387" />
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="388">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="389" />
								<line branch="false" hits="1" number="391" />
								<line branch="false" hits="1" number="394" />
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="395">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="396" />
								<line branch="false" hits="1" number="400" />
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="402">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="406">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="407" />
								</lines>
						</method>
						<method branch-rate="0.5" line-rate="0.75" name="getCumPct" signature="(Ljava/lang/Comparable;)D">
							<lines>
								<line branch="false" hits="1" number="490" />
								<line branch="true" condition-coverage="50% (1/2)" hits="1" number="491">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="1" number="494" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="getPct" signature="(I)D">
							<lines>
								<line branch="false" hits="1" number="330" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="getPct" signature="(J)D">
							<lines>
								<line branch="false" hits="1" number="341" />
							</lines>
						</method>
						<method branch-rate="0.5" line-rate="0.75" name="getPct" signature="(Ljava/lang/Comparable;)D">
							<lines>
								<line branch="false" hits="3" number="315" />
								<line branch="true" condition-coverage="50% (1/2)" hits="3" number="316">
									<conditions>
										<condition coverage="50%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="3" number="319" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="getPct" signature="(Ljava/lang/Object;)D">
							<lines>
								<line branch="false" hits="1" number="302" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="getSumFreq" signature="()J">
							<lines>
								<line branch="false" hits="7" number="214" />
								<line branch="false" hits="7" number="215" />
								<line branch="true" condition-coverage="100% (2/2)" hits="28" number="216">
									<conditions>
										<condition coverage="100%" number="0" type="jump" />
									</conditions>
								</line>
								<line branch="false" hits="21" number="217" />
								<line branch="false" hits="7" number="219" />
							</lines>
						</method>
						</methods>
					</class>
				<class branch-rate="1.0" complexity="2.2285714285714286" filename="org/apache/commons/math/stat/Frequency.java" line-rate="1.0" name="org.apache.commons.math.stat.Frequency$1">
					<methods>
					</methods>
					</class>
				<class branch-rate="1.0" complexity="2.2285714285714286" filename="org/apache/commons/math/stat/Frequency.java" line-rate="1.0" name="org.apache.commons.math.stat.Frequency$NaturalComparator">
					<methods>
						<method branch-rate="1.0" line-rate="1.0" name="&lt;init&gt;" signature="(Lorg/apache/commons/math/stat/Frequency$1;)V">
							<lines>
								<line branch="false" hits="4" number="540" />
							</lines>
						</method>
						<method branch-rate="1.0" line-rate="1.0" name="compare" signature="(Ljava/lang/Comparable;Ljava/lang/Comparable;)I">
							<lines>
								<line branch="false" hits="2" number="560" />
							</lines>
						</method>
						</methods>
					</class>
			</classes>
		</package>
	</packages>
</coverage>