diff --git a/defects4j.build.properties b/defects4j.build.properties
index f6c014e..1134f98 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=61
+d4j.classes.instrument=org/apache/commons/lang/text/StrBuilder.class,org/apache/commons/lang/text/StrBuilder\$*.class,org/apache/commons/lang/text/StrMatcher.class,org/apache/commons/lang/text/StrMatcher\$*.class,org/apache/commons/lang/text/StrTokenizer.class,org/apache/commons/lang/text/StrTokenizer\$*.class
 d4j.classes.modified=org.apache.commons.lang.text.StrBuilder
 d4j.classes.relevant=org.apache.commons.lang.text.StrBuilder,org.apache.commons.lang.text.StrMatcher,org.apache.commons.lang.text.StrTokenizer
 d4j.dir.src.classes=src/java
diff --git a/src/test/org/apache/commons/lang/text/StrBuilderTest.java b/src/test/org/apache/commons/lang/text/StrBuilderTest.java
index 900b922..da29b6f 100644
--- a/src/test/org/apache/commons/lang/text/StrBuilderTest.java
+++ b/src/test/org/apache/commons/lang/text/StrBuilderTest.java
@@ -1740,5 +1740,11 @@ public class StrBuilderTest extends TestCase {
         sb.deleteFirst("three");
         assertEquals(-1, sb.indexOf("three"));
     }
+    public void testLang295() {
+        StrBuilder sb = new StrBuilder("onetwothree");
+        sb.deleteFirst("three");
+        assertFalse( "The contains(char) method is looking beyond the end of the string", sb.contains('h'));
+        assertEquals( "The indexOf(char) method is looking beyond the end of the string", -1, sb.indexOf('h'));
+    }
 
 }
