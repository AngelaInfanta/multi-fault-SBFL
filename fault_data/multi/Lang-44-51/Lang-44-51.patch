diff --git a/defects4j.build.properties b/defects4j.build.properties
index 560aee5..9699d4e 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=51
+d4j.classes.instrument=org/apache/commons/lang/BooleanUtils.class,org/apache/commons/lang/BooleanUtils\$*.class,org/apache/commons/lang/NumberUtils.class,org/apache/commons/lang/NumberUtils\$*.class
 d4j.classes.modified=org.apache.commons.lang.BooleanUtils
 d4j.classes.relevant=org.apache.commons.lang.BooleanUtils
 d4j.dir.src.classes=src/java
diff --git a/src/test/org/apache/commons/lang/NumberUtilsTest.java b/src/test/org/apache/commons/lang/NumberUtilsTest.java
index f95727b..e357210 100644
--- a/src/test/org/apache/commons/lang/NumberUtilsTest.java
+++ b/src/test/org/apache/commons/lang/NumberUtilsTest.java
@@ -520,5 +520,16 @@ public class NumberUtilsTest extends TestCase {
             fail( "Error calling public no-arg constructor" );
         }
     }
+    public void testLang457() {
+        String[] badInputs = new String[] { "l", "L", "f", "F", "junk", "bobL"};
+        for(int i=0; i<badInputs.length; i++) {
+            try {
+                NumberUtils.createNumber(badInputs[i]);
+                fail("NumberFormatException was expected for " + badInputs[i]);
+            } catch (NumberFormatException e) {
+                return; // expected
+            }
+        }
+    }
     
 }
