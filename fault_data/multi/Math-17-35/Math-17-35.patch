diff --git a/defects4j.build.properties b/defects4j.build.properties
index 9397f37..0535725 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=35
+d4j.classes.instrument=org/apache/commons/math3/Field.class,org/apache/commons/math3/Field\$*.class,org/apache/commons/math3/FieldElement.class,org/apache/commons/math3/FieldElement\$*.class,org/apache/commons/math3/dfp/Dfp.class,org/apache/commons/math3/dfp/Dfp\$*.class,org/apache/commons/math3/dfp/DfpField.class,org/apache/commons/math3/dfp/DfpField\$*.class,org/apache/commons/math3/exception/MathIllegalArgumentException.class,org/apache/commons/math3/exception/MathIllegalArgumentException\$*.class,org/apache/commons/math3/exception/MathIllegalNumberException.class,org/apache/commons/math3/exception/MathIllegalNumberException\$*.class,org/apache/commons/math3/exception/NotPositiveException.class,org/apache/commons/math3/exception/NotPositiveException\$*.class,org/apache/commons/math3/exception/NumberIsTooLargeException.class,org/apache/commons/math3/exception/NumberIsTooLargeException\$*.class,org/apache/commons/math3/exception/NumberIsTooSmallException.class,org/apache/commons/math3/exception/NumberIsTooSmallException\$*.class,org/apache/commons/math3/exception/OutOfRangeException.class,org/apache/commons/math3/exception/OutOfRangeException\$*.class,org/apache/commons/math3/exception/util/ArgUtils.class,org/apache/commons/math3/exception/util/ArgUtils\$*.class,org/apache/commons/math3/exception/util/ExceptionContext.class,org/apache/commons/math3/exception/util/ExceptionContext\$*.class,org/apache/commons/math3/exception/util/ExceptionContextProvider.class,org/apache/commons/math3/exception/util/ExceptionContextProvider\$*.class,org/apache/commons/math3/exception/util/Localizable.class,org/apache/commons/math3/exception/util/Localizable\$*.class,org/apache/commons/math3/exception/util/LocalizedFormats.class,org/apache/commons/math3/exception/util/LocalizedFormats\$*.class,org/apache/commons/math3/genetics/Chromosome.class,org/apache/commons/math3/genetics/Chromosome\$*.class,org/apache/commons/math3/genetics/ElitisticListPopulation.class,org/apache/commons/math3/genetics/ElitisticListPopulation\$*.class,org/apache/commons/math3/genetics/Fitness.class,org/apache/commons/math3/genetics/Fitness\$*.class,org/apache/commons/math3/genetics/ListPopulation.class,org/apache/commons/math3/genetics/ListPopulation\$*.class,org/apache/commons/math3/genetics/Population.class,org/apache/commons/math3/genetics/Population\$*.class
 d4j.classes.modified=org.apache.commons.math3.genetics.ElitisticListPopulation
 d4j.classes.relevant=org.apache.commons.math3.exception.MathIllegalArgumentException,org.apache.commons.math3.exception.MathIllegalNumberException,org.apache.commons.math3.exception.NotPositiveException,org.apache.commons.math3.exception.NumberIsTooLargeException,org.apache.commons.math3.exception.NumberIsTooSmallException,org.apache.commons.math3.exception.OutOfRangeException,org.apache.commons.math3.exception.util.ArgUtils,org.apache.commons.math3.exception.util.ExceptionContext,org.apache.commons.math3.exception.util.ExceptionContextProvider,org.apache.commons.math3.exception.util.Localizable,org.apache.commons.math3.exception.util.LocalizedFormats,org.apache.commons.math3.genetics.Chromosome,org.apache.commons.math3.genetics.ElitisticListPopulation,org.apache.commons.math3.genetics.Fitness,org.apache.commons.math3.genetics.ListPopulation,org.apache.commons.math3.genetics.Population
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/math3/dfp/DfpTest.java b/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
index f754976..6f22466 100644
--- a/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
+++ b/src/test/java/org/apache/commons/math3/dfp/DfpTest.java
@@ -906,13 +906,17 @@ public class DfpTest {
              nan,
              0, "Multiply #36");
 
-        test(field.newDfp("1").multiply(10000),  // out of range
-             nan,
-             DfpField.FLAG_INVALID, "Multiply #37");
+        test(field.newDfp("1").multiply(10000),
+             field.newDfp("10000"),
+             0, "Multiply #37");
 
-        test(field.newDfp("1").multiply(-1),  // out of range
-             nan,
-             DfpField.FLAG_INVALID, "Multiply #38");
+        test(field.newDfp("2").multiply(1000000),
+             field.newDfp("2000000"),
+             0, "Multiply #38");
+
+        test(field.newDfp("1").multiply(-1),
+             field.newDfp("-1"),
+             0, "Multiply #39");
     }
 
     @Test
