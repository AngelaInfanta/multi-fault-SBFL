diff --git a/defects4j.build.properties b/defects4j.build.properties
index 202faa6..88900e9 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=13
+d4j.classes.instrument=org/jfree/chart/Drawable.class,org/jfree/chart/Drawable\$*.class,org/jfree/chart/block/AbstractBlock.class,org/jfree/chart/block/AbstractBlock\$*.class,org/jfree/chart/block/Arrangement.class,org/jfree/chart/block/Arrangement\$*.class,org/jfree/chart/block/Block.class,org/jfree/chart/block/Block\$*.class,org/jfree/chart/block/BlockBorder.class,org/jfree/chart/block/BlockBorder\$*.class,org/jfree/chart/block/BlockContainer.class,org/jfree/chart/block/BlockContainer\$*.class,org/jfree/chart/block/BlockFrame.class,org/jfree/chart/block/BlockFrame\$*.class,org/jfree/chart/block/BorderArrangement.class,org/jfree/chart/block/BorderArrangement\$*.class,org/jfree/chart/block/EmptyBlock.class,org/jfree/chart/block/EmptyBlock\$*.class,org/jfree/chart/block/LengthConstraintType.class,org/jfree/chart/block/LengthConstraintType\$*.class,org/jfree/chart/block/RectangleConstraint.class,org/jfree/chart/block/RectangleConstraint\$*.class,org/jfree/chart/entity/EntityCollection.class,org/jfree/chart/entity/EntityCollection\$*.class,org/jfree/chart/util/PublicCloneable.class,org/jfree/chart/util/PublicCloneable\$*.class,org/jfree/chart/util/RectangleEdge.class,org/jfree/chart/util/RectangleEdge\$*.class,org/jfree/chart/util/RectangleInsets.class,org/jfree/chart/util/RectangleInsets\$*.class,org/jfree/chart/util/Size2D.class,org/jfree/chart/util/Size2D\$*.class,org/jfree/chart/util/UnitType.class,org/jfree/chart/util/UnitType\$*.class,org/jfree/data/Range.class,org/jfree/data/Range\$*.class,org/jfree/data/time/MonthConstants.class,org/jfree/data/time/MonthConstants\$*.class,org/jfree/data/time/RegularTimePeriod.class,org/jfree/data/time/RegularTimePeriod\$*.class,org/jfree/data/time/TimePeriod.class,org/jfree/data/time/TimePeriod\$*.class,org/jfree/data/time/TimePeriodFormatException.class,org/jfree/data/time/TimePeriodFormatException\$*.class,org/jfree/data/time/Week.class,org/jfree/data/time/Week\$*.class
 d4j.classes.modified=org.jfree.chart.block.BorderArrangement
 d4j.classes.relevant=org.jfree.chart.block.AbstractBlock,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Block,org.jfree.chart.block.BlockBorder,org.jfree.chart.block.BlockContainer,org.jfree.chart.block.BlockFrame,org.jfree.chart.block.BorderArrangement,org.jfree.chart.block.EmptyBlock,org.jfree.chart.block.LengthConstraintType,org.jfree.chart.block.RectangleConstraint,org.jfree.chart.Drawable,org.jfree.chart.entity.EntityCollection,org.jfree.chart.util.PublicCloneable,org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.Size2D,org.jfree.chart.util.UnitType,org.jfree.data.Range
 d4j.dir.src.classes=source
diff --git a/tests/org/jfree/data/time/junit/WeekTests.java b/tests/org/jfree/data/time/junit/WeekTests.java
index 6076c3d..46f16ae 100644
--- a/tests/org/jfree/data/time/junit/WeekTests.java
+++ b/tests/org/jfree/data/time/junit/WeekTests.java
@@ -475,7 +475,40 @@ public class WeekTests extends TestCase {
     /**
      * A test for a problem in constructing a new Week instance.
      */
-    public void testConstructor() {}
+    public void testConstructor() {
+        Locale savedLocale = Locale.getDefault();
+        TimeZone savedZone = TimeZone.getDefault();
+        Locale.setDefault(new Locale("da", "DK"));
+        TimeZone.setDefault(TimeZone.getTimeZone("Europe/Copenhagen"));
+        GregorianCalendar cal = (GregorianCalendar) Calendar.getInstance(
+                TimeZone.getDefault(), Locale.getDefault());
+
+        // first day of week is monday
+        assertEquals(Calendar.MONDAY, cal.getFirstDayOfWeek());
+        cal.set(2007, Calendar.AUGUST, 26, 1, 0, 0);
+        cal.set(Calendar.MILLISECOND, 0);
+        Date t = cal.getTime();
+        Week w = new Week(t, TimeZone.getTimeZone("Europe/Copenhagen"));
+        assertEquals(34, w.getWeek());
+
+        Locale.setDefault(Locale.US);
+        TimeZone.setDefault(TimeZone.getTimeZone("US/Detroit"));
+        cal = (GregorianCalendar) Calendar.getInstance(TimeZone.getDefault());
+        // first day of week is Sunday
+        assertEquals(Calendar.SUNDAY, cal.getFirstDayOfWeek());
+        cal.set(2007, Calendar.AUGUST, 26, 1, 0, 0);
+        cal.set(Calendar.MILLISECOND, 0);
+
+        t = cal.getTime();
+        w = new Week(t, TimeZone.getTimeZone("Europe/Copenhagen"));
+        assertEquals(35, w.getWeek());
+        w = new Week(t, TimeZone.getTimeZone("Europe/Copenhagen"),
+                new Locale("da", "DK"));
+        assertEquals(34, w.getWeek());
+
+        Locale.setDefault(savedLocale);
+        TimeZone.setDefault(savedZone);
+    }
 // Defects4J: flaky method
 //     public void testConstructor() {
 //         Locale savedLocale = Locale.getDefault();
