diff --git a/defects4j.build.properties b/defects4j.build.properties
index dd817cf..7c1c8ee 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=96
+d4j.classes.instrument=org/apache/commons/math/complex/Complex.class,org/apache/commons/math/complex/Complex\$*.class,org/apache/commons/math/stat/Frequency.class,org/apache/commons/math/stat/Frequency\$*.class
 d4j.classes.modified=org.apache.commons.math.complex.Complex
 d4j.classes.relevant=org.apache.commons.math.complex.Complex
 d4j.dir.src.classes=src/java
diff --git a/src/test/org/apache/commons/math/stat/FrequencyTest.java b/src/test/org/apache/commons/math/stat/FrequencyTest.java
index 31c6bbb..cabd1cb 100644
--- a/src/test/org/apache/commons/math/stat/FrequencyTest.java
+++ b/src/test/org/apache/commons/math/stat/FrequencyTest.java
@@ -234,5 +234,19 @@ public final class FrequencyTest extends TestCase {
             assertTrue(it.next() instanceof Long);
         }     
     }
+    public void testAddNonComparable(){
+        try {
+            f.addValue(new Object()); // This was OK
+            fail("Expected ClassCastException");
+        } catch (ClassCastException expected) {
+        }
+        f.clear();
+        f.addValue(1);
+        try {
+            f.addValue(new Object());
+            fail("Expected ClassCastException"); // Previously would have been IllegalArgument
+        } catch (ClassCastException expected) {
+        }
+    }
 }
 
