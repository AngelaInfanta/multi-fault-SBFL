diff --git a/defects4j.build.properties b/defects4j.build.properties
index 5731ef9..f1f506d 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=10
+d4j.classes.instrument=org/jfree/chart/imagemap/ImageMapUtilities.class,org/jfree/chart/imagemap/ImageMapUtilities\$*.class,org/jfree/chart/imagemap/OverLIBToolTipTagFragmentGenerator.class,org/jfree/chart/imagemap/OverLIBToolTipTagFragmentGenerator\$*.class,org/jfree/chart/imagemap/StandardToolTipTagFragmentGenerator.class,org/jfree/chart/imagemap/StandardToolTipTagFragmentGenerator\$*.class,org/jfree/chart/imagemap/ToolTipTagFragmentGenerator.class,org/jfree/chart/imagemap/ToolTipTagFragmentGenerator\$*.class,org/jfree/chart/imagemap/URLTagFragmentGenerator.class,org/jfree/chart/imagemap/URLTagFragmentGenerator\$*.class,org/jfree/data/time/MonthConstants.class,org/jfree/data/time/MonthConstants\$*.class,org/jfree/data/time/RegularTimePeriod.class,org/jfree/data/time/RegularTimePeriod\$*.class,org/jfree/data/time/TimePeriod.class,org/jfree/data/time/TimePeriod\$*.class,org/jfree/data/time/TimePeriodFormatException.class,org/jfree/data/time/TimePeriodFormatException\$*.class,org/jfree/data/time/Week.class,org/jfree/data/time/Week\$*.class
 d4j.classes.modified=org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator
 d4j.classes.relevant=org.jfree.chart.imagemap.ImageMapUtilities,org.jfree.chart.imagemap.OverLIBToolTipTagFragmentGenerator,org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator,org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,org.jfree.chart.imagemap.URLTagFragmentGenerator
 d4j.dir.src.classes=source
diff --git a/tests/org/jfree/data/time/junit/WeekTests.java b/tests/org/jfree/data/time/junit/WeekTests.java
index 6076c3d..46f16ae 100644
--- a/tests/org/jfree/data/time/junit/WeekTests.java
+++ b/tests/org/jfree/data/time/junit/WeekTests.java
@@ -475,7 +475,40 @@ public class WeekTests extends TestCase {
     /**
      * A test for a problem in constructing a new Week instance.
      */
-    public void testConstructor() {}
+    public void testConstructor() {
+        Locale savedLocale = Locale.getDefault();
+        TimeZone savedZone = TimeZone.getDefault();
+        Locale.setDefault(new Locale("da", "DK"));
+        TimeZone.setDefault(TimeZone.getTimeZone("Europe/Copenhagen"));
+        GregorianCalendar cal = (GregorianCalendar) Calendar.getInstance(
+                TimeZone.getDefault(), Locale.getDefault());
+
+        // first day of week is monday
+        assertEquals(Calendar.MONDAY, cal.getFirstDayOfWeek());
+        cal.set(2007, Calendar.AUGUST, 26, 1, 0, 0);
+        cal.set(Calendar.MILLISECOND, 0);
+        Date t = cal.getTime();
+        Week w = new Week(t, TimeZone.getTimeZone("Europe/Copenhagen"));
+        assertEquals(34, w.getWeek());
+
+        Locale.setDefault(Locale.US);
+        TimeZone.setDefault(TimeZone.getTimeZone("US/Detroit"));
+        cal = (GregorianCalendar) Calendar.getInstance(TimeZone.getDefault());
+        // first day of week is Sunday
+        assertEquals(Calendar.SUNDAY, cal.getFirstDayOfWeek());
+        cal.set(2007, Calendar.AUGUST, 26, 1, 0, 0);
+        cal.set(Calendar.MILLISECOND, 0);
+
+        t = cal.getTime();
+        w = new Week(t, TimeZone.getTimeZone("Europe/Copenhagen"));
+        assertEquals(35, w.getWeek());
+        w = new Week(t, TimeZone.getTimeZone("Europe/Copenhagen"),
+                new Locale("da", "DK"));
+        assertEquals(34, w.getWeek());
+
+        Locale.setDefault(savedLocale);
+        TimeZone.setDefault(savedZone);
+    }
 // Defects4J: flaky method
 //     public void testConstructor() {
 //         Locale savedLocale = Locale.getDefault();
