diff --git a/defects4j.build.properties b/defects4j.build.properties
index af58301..95d663b 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=69
+d4j.classes.instrument=org/apache/commons/math/ConvergenceException.class,org/apache/commons/math/ConvergenceException\$*.class,org/apache/commons/math/MathException.class,org/apache/commons/math/MathException\$*.class,org/apache/commons/math/MathRuntimeException.class,org/apache/commons/math/MathRuntimeException\$*.class,org/apache/commons/math/MaxIterationsExceededException.class,org/apache/commons/math/MaxIterationsExceededException\$*.class,org/apache/commons/math/analysis/UnivariateRealFunction.class,org/apache/commons/math/analysis/UnivariateRealFunction\$*.class,org/apache/commons/math/distribution/AbstractContinuousDistribution.class,org/apache/commons/math/distribution/AbstractContinuousDistribution\$*.class,org/apache/commons/math/distribution/AbstractDistribution.class,org/apache/commons/math/distribution/AbstractDistribution\$*.class,org/apache/commons/math/distribution/ContinuousDistribution.class,org/apache/commons/math/distribution/ContinuousDistribution\$*.class,org/apache/commons/math/distribution/DiscreteDistribution.class,org/apache/commons/math/distribution/DiscreteDistribution\$*.class,org/apache/commons/math/distribution/Distribution.class,org/apache/commons/math/distribution/Distribution\$*.class,org/apache/commons/math/distribution/IntegerDistribution.class,org/apache/commons/math/distribution/IntegerDistribution\$*.class,org/apache/commons/math/distribution/NormalDistribution.class,org/apache/commons/math/distribution/NormalDistribution\$*.class,org/apache/commons/math/distribution/NormalDistributionImpl.class,org/apache/commons/math/distribution/NormalDistributionImpl\$*.class,org/apache/commons/math/distribution/TDistribution.class,org/apache/commons/math/distribution/TDistribution\$*.class,org/apache/commons/math/distribution/TDistributionImpl.class,org/apache/commons/math/distribution/TDistributionImpl\$*.class,org/apache/commons/math/exception/MathIllegalArgumentException.class,org/apache/commons/math/exception/MathIllegalArgumentException\$*.class,org/apache/commons/math/exception/MathIllegalNumberException.class,org/apache/commons/math/exception/MathIllegalNumberException\$*.class,org/apache/commons/math/exception/MathThrowable.class,org/apache/commons/math/exception/MathThrowable\$*.class,org/apache/commons/math/exception/NotStrictlyPositiveException.class,org/apache/commons/math/exception/NotStrictlyPositiveException\$*.class,org/apache/commons/math/exception/NumberIsTooLargeException.class,org/apache/commons/math/exception/NumberIsTooLargeException\$*.class,org/apache/commons/math/exception/NumberIsTooSmallException.class,org/apache/commons/math/exception/NumberIsTooSmallException\$*.class,org/apache/commons/math/exception/OutOfRangeException.class,org/apache/commons/math/exception/OutOfRangeException\$*.class,org/apache/commons/math/exception/util/Localizable.class,org/apache/commons/math/exception/util/Localizable\$*.class,org/apache/commons/math/linear/AbstractFieldMatrix.class,org/apache/commons/math/linear/AbstractFieldMatrix\$*.class,org/apache/commons/math/linear/AbstractRealMatrix.class,org/apache/commons/math/linear/AbstractRealMatrix\$*.class,org/apache/commons/math/linear/AnyMatrix.class,org/apache/commons/math/linear/AnyMatrix\$*.class,org/apache/commons/math/linear/Array2DRowFieldMatrix.class,org/apache/commons/math/linear/Array2DRowFieldMatrix\$*.class,org/apache/commons/math/linear/Array2DRowRealMatrix.class,org/apache/commons/math/linear/Array2DRowRealMatrix\$*.class,org/apache/commons/math/linear/BigMatrix.class,org/apache/commons/math/linear/BigMatrix\$*.class,org/apache/commons/math/linear/BlockFieldMatrix.class,org/apache/commons/math/linear/BlockFieldMatrix\$*.class,org/apache/commons/math/linear/BlockRealMatrix.class,org/apache/commons/math/linear/BlockRealMatrix\$*.class,org/apache/commons/math/linear/FieldMatrix.class,org/apache/commons/math/linear/FieldMatrix\$*.class,org/apache/commons/math/linear/FieldMatrixPreservingVisitor.class,org/apache/commons/math/linear/FieldMatrixPreservingVisitor\$*.class,org/apache/commons/math/linear/FieldVector.class,org/apache/commons/math/linear/FieldVector\$*.class,org/apache/commons/math/linear/InvalidMatrixException.class,org/apache/commons/math/linear/InvalidMatrixException\$*.class,org/apache/commons/math/linear/MatrixIndexException.class,org/apache/commons/math/linear/MatrixIndexException\$*.class,org/apache/commons/math/linear/MatrixUtils.class,org/apache/commons/math/linear/MatrixUtils\$*.class,org/apache/commons/math/linear/NonSquareMatrixException.class,org/apache/commons/math/linear/NonSquareMatrixException\$*.class,org/apache/commons/math/linear/RealMatrix.class,org/apache/commons/math/linear/RealMatrix\$*.class,org/apache/commons/math/linear/RealMatrixChangingVisitor.class,org/apache/commons/math/linear/RealMatrixChangingVisitor\$*.class,org/apache/commons/math/linear/RealMatrixPreservingVisitor.class,org/apache/commons/math/linear/RealMatrixPreservingVisitor\$*.class,org/apache/commons/math/linear/RealVector.class,org/apache/commons/math/linear/RealVector\$*.class,org/apache/commons/math/random/RandomData.class,org/apache/commons/math/random/RandomData\$*.class,org/apache/commons/math/random/RandomDataImpl.class,org/apache/commons/math/random/RandomDataImpl\$*.class,org/apache/commons/math/random/RandomGenerator.class,org/apache/commons/math/random/RandomGenerator\$*.class,org/apache/commons/math/special/Beta.class,org/apache/commons/math/special/Beta\$*.class,org/apache/commons/math/special/Erf.class,org/apache/commons/math/special/Erf\$*.class,org/apache/commons/math/special/Gamma.class,org/apache/commons/math/special/Gamma\$*.class,org/apache/commons/math/stat/correlation/PearsonsCorrelation.class,org/apache/commons/math/stat/correlation/PearsonsCorrelation\$*.class,org/apache/commons/math/stat/regression/SimpleRegression.class,org/apache/commons/math/stat/regression/SimpleRegression\$*.class,org/apache/commons/math/util/ContinuedFraction.class,org/apache/commons/math/util/ContinuedFraction\$*.class,org/apache/commons/math/util/FastMath.class,org/apache/commons/math/util/FastMath\$*.class
 d4j.classes.modified=org.apache.commons.math.stat.correlation.PearsonsCorrelation
 d4j.classes.relevant=org.apache.commons.math.analysis.UnivariateRealFunction,org.apache.commons.math.ConvergenceException,org.apache.commons.math.distribution.AbstractContinuousDistribution,org.apache.commons.math.distribution.AbstractDistribution,org.apache.commons.math.distribution.ContinuousDistribution,org.apache.commons.math.distribution.Distribution,org.apache.commons.math.distribution.TDistribution,org.apache.commons.math.distribution.TDistributionImpl,org.apache.commons.math.linear.AbstractFieldMatrix,org.apache.commons.math.linear.AbstractRealMatrix,org.apache.commons.math.linear.AnyMatrix,org.apache.commons.math.linear.Array2DRowFieldMatrix,org.apache.commons.math.linear.Array2DRowRealMatrix,org.apache.commons.math.linear.BigMatrix,org.apache.commons.math.linear.BlockFieldMatrix,org.apache.commons.math.linear.BlockRealMatrix,org.apache.commons.math.linear.FieldMatrix,org.apache.commons.math.linear.FieldMatrixPreservingVisitor,org.apache.commons.math.linear.FieldVector,org.apache.commons.math.linear.InvalidMatrixException,org.apache.commons.math.linear.MatrixIndexException,org.apache.commons.math.linear.MatrixUtils,org.apache.commons.math.linear.NonSquareMatrixException,org.apache.commons.math.linear.RealMatrix,org.apache.commons.math.linear.RealMatrixChangingVisitor,org.apache.commons.math.linear.RealMatrixPreservingVisitor,org.apache.commons.math.linear.RealVector,org.apache.commons.math.MathException,org.apache.commons.math.MathRuntimeException,org.apache.commons.math.MaxIterationsExceededException,org.apache.commons.math.special.Beta,org.apache.commons.math.special.Gamma,org.apache.commons.math.stat.correlation.PearsonsCorrelation,org.apache.commons.math.stat.regression.SimpleRegression,org.apache.commons.math.util.ContinuedFraction
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java b/src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java
index b1e9980..0281cab 100644
--- a/src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java
+++ b/src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java
@@ -166,13 +166,13 @@ public class NormalDistributionTest extends ContinuousDistributionAbstractTest
      * Verifies fix for JIRA MATH-167
      */
     public void testExtremeValues() throws Exception {
-        NormalDistribution distribution = (NormalDistribution) getDistribution();
-        distribution.setMean(0);
-        distribution.setStandardDeviation(1);
-        for (int i = 0; i < 100; i+=5) { // make sure no convergence exception
+        NormalDistribution distribution = new NormalDistributionImpl(0, 1);
+        for (int i = 0; i < 100; i++) { // make sure no convergence exception
             double lowerTail = distribution.cumulativeProbability(-i);
             double upperTail = distribution.cumulativeProbability(i);
-            if (i < 10) { // make sure not top-coded
+            if (i < 9) { // make sure not top-coded 
+                // For i = 10, due to bad tail precision in erf (MATH-364), 1 is returned
+                // TODO: once MATH-364 is resolved, replace 9 with 30
                 assertTrue(lowerTail > 0.0d);
                 assertTrue(upperTail < 1.0d);
             }
@@ -181,6 +181,12 @@ public class NormalDistributionTest extends ContinuousDistributionAbstractTest
                 assertTrue(upperTail > 0.99999);
             }
         }
+        
+        assertEquals(distribution.cumulativeProbability(Double.MAX_VALUE), 1, 0);
+        assertEquals(distribution.cumulativeProbability(-Double.MAX_VALUE), 0, 0);
+        assertEquals(distribution.cumulativeProbability(Double.POSITIVE_INFINITY), 1, 0);
+        assertEquals(distribution.cumulativeProbability(Double.NEGATIVE_INFINITY), 0, 0);
+        
    }
 
     public void testMath280() throws MathException {
