diff --git a/defects4j.build.properties b/defects4j.build.properties
index f89ec9a..c034929 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=9
+d4j.classes.instrument=org/joda/time/Chronology.class,org/joda/time/Chronology\$*.class,org/joda/time/DateTimeField.class,org/joda/time/DateTimeField\$*.class,org/joda/time/DateTimeUtils.class,org/joda/time/DateTimeUtils\$*.class,org/joda/time/DateTimeZone.class,org/joda/time/DateTimeZone\$*.class,org/joda/time/DurationField.class,org/joda/time/DurationField\$*.class,org/joda/time/IllegalFieldValueException.class,org/joda/time/IllegalFieldValueException\$*.class,org/joda/time/IllegalInstantException.class,org/joda/time/IllegalInstantException\$*.class,org/joda/time/JodaTimePermission.class,org/joda/time/JodaTimePermission\$*.class,org/joda/time/ReadableInstant.class,org/joda/time/ReadableInstant\$*.class,org/joda/time/ReadableInterval.class,org/joda/time/ReadableInterval\$*.class,org/joda/time/ReadablePeriod.class,org/joda/time/ReadablePeriod\$*.class,org/joda/time/chrono/AssembledChronology.class,org/joda/time/chrono/AssembledChronology\$*.class,org/joda/time/chrono/BaseChronology.class,org/joda/time/chrono/BaseChronology\$*.class,org/joda/time/chrono/ISOChronology.class,org/joda/time/chrono/ISOChronology\$*.class,org/joda/time/field/FieldUtils.class,org/joda/time/field/FieldUtils\$*.class,org/joda/time/field/UnsupportedDateTimeField.class,org/joda/time/field/UnsupportedDateTimeField\$*.class,org/joda/time/field/UnsupportedDurationField.class,org/joda/time/field/UnsupportedDurationField\$*.class,org/joda/time/format/DateTimeFormatter.class,org/joda/time/format/DateTimeFormatter\$*.class,org/joda/time/format/DateTimeFormatterBuilder.class,org/joda/time/format/DateTimeFormatterBuilder\$*.class,org/joda/time/format/DateTimeParser.class,org/joda/time/format/DateTimeParser\$*.class,org/joda/time/format/DateTimeParserBucket.class,org/joda/time/format/DateTimeParserBucket\$*.class,org/joda/time/format/DateTimePrinter.class,org/joda/time/format/DateTimePrinter\$*.class,org/joda/time/format/FormatUtils.class,org/joda/time/format/FormatUtils\$*.class,org/joda/time/tz/CachedDateTimeZone.class,org/joda/time/tz/CachedDateTimeZone\$*.class,org/joda/time/tz/DateTimeZoneBuilder.class,org/joda/time/tz/DateTimeZoneBuilder\$*.class,org/joda/time/tz/DefaultNameProvider.class,org/joda/time/tz/DefaultNameProvider\$*.class,org/joda/time/tz/FixedDateTimeZone.class,org/joda/time/tz/FixedDateTimeZone\$*.class,org/joda/time/tz/NameProvider.class,org/joda/time/tz/NameProvider\$*.class,org/joda/time/tz/Provider.class,org/joda/time/tz/Provider\$*.class,org/joda/time/tz/ZoneInfoProvider.class,org/joda/time/tz/ZoneInfoProvider\$*.class
 d4j.classes.modified=org.joda.time.DateTimeZone
 d4j.classes.relevant=org.joda.time.chrono.AssembledChronology,org.joda.time.chrono.BaseChronology,org.joda.time.chrono.ISOChronology,org.joda.time.Chronology,org.joda.time.DateTimeField,org.joda.time.DateTimeUtils,org.joda.time.DateTimeZone,org.joda.time.DurationField,org.joda.time.field.FieldUtils,org.joda.time.field.UnsupportedDateTimeField,org.joda.time.field.UnsupportedDurationField,org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeParser,org.joda.time.format.DateTimeParserBucket,org.joda.time.format.DateTimePrinter,org.joda.time.format.FormatUtils,org.joda.time.IllegalFieldValueException,org.joda.time.IllegalInstantException,org.joda.time.JodaTimePermission,org.joda.time.ReadableInstant,org.joda.time.ReadableInterval,org.joda.time.tz.CachedDateTimeZone,org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.tz.DefaultNameProvider,org.joda.time.tz.FixedDateTimeZone,org.joda.time.tz.NameProvider,org.joda.time.tz.Provider,org.joda.time.tz.ZoneInfoProvider
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/joda/time/TestPeriod_Basics.java b/src/test/java/org/joda/time/TestPeriod_Basics.java
index f291c9b..fdd9dbf 100644
--- a/src/test/java/org/joda/time/TestPeriod_Basics.java
+++ b/src/test/java/org/joda/time/TestPeriod_Basics.java
@@ -1515,5 +1515,27 @@ public class TestPeriod_Basics extends TestCase {
         assertEquals(new Period(1, 15, 0, 36, 27, 0, 0, 0), test);
         assertEquals(new Period(2, 3, 0, 37, 3, 0, 0, 0, PeriodType.yearMonthDayTime()), result);
     }
+    public void testNormalizedStandard_periodType_months1() {
+        Period test = new Period(1, 15, 0, 0, 0, 0, 0, 0);
+        Period result = test.normalizedStandard(PeriodType.months());
+        assertEquals(new Period(1, 15, 0, 0, 0, 0, 0, 0), test);
+        assertEquals(new Period(0, 27, 0, 0, 0, 0, 0, 0, PeriodType.months()), result);
+    }
+    public void testNormalizedStandard_periodType_months2() {
+        Period test = new Period(-2, 15, 0, 0, 0, 0, 0, 0);
+        Period result = test.normalizedStandard(PeriodType.months());
+        assertEquals(new Period(-2, 15, 0, 0, 0, 0, 0, 0), test);
+        assertEquals(new Period(0, -9, 0, 0, 0, 0, 0, 0, PeriodType.months()), result);
+    }
+    public void testNormalizedStandard_periodType_monthsWeeks() {
+        PeriodType type = PeriodType.forFields(new DurationFieldType[]{
+                        DurationFieldType.months(),
+                        DurationFieldType.weeks(),
+                        DurationFieldType.days()});
+        Period test = new Period(2, 4, 6, 0, 0, 0, 0, 0);
+        Period result = test.normalizedStandard(type);
+        assertEquals(new Period(2, 4, 6, 0, 0, 0, 0, 0), test);
+        assertEquals(new Period(0, 28, 6, 0, 0, 0, 0, 0, type), result);
+    }
 
 }
