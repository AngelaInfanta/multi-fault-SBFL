diff --git a/defects4j.build.properties b/defects4j.build.properties
index adfd5a4..1cf9396 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=23
+d4j.classes.instrument=org/joda/time/Chronology.class,org/joda/time/Chronology\$*.class,org/joda/time/DateTimeZone.class,org/joda/time/DateTimeZone\$*.class,org/joda/time/IllegalFieldValueException.class,org/joda/time/IllegalFieldValueException\$*.class,org/joda/time/JodaTimePermission.class,org/joda/time/JodaTimePermission\$*.class,org/joda/time/ReadableInstant.class,org/joda/time/ReadableInstant\$*.class,org/joda/time/chrono/AssembledChronology.class,org/joda/time/chrono/AssembledChronology\$*.class,org/joda/time/chrono/BaseChronology.class,org/joda/time/chrono/BaseChronology\$*.class,org/joda/time/chrono/ISOChronology.class,org/joda/time/chrono/ISOChronology\$*.class,org/joda/time/field/FieldUtils.class,org/joda/time/field/FieldUtils\$*.class,org/joda/time/tz/CachedDateTimeZone.class,org/joda/time/tz/CachedDateTimeZone\$*.class,org/joda/time/tz/DateTimeZoneBuilder.class,org/joda/time/tz/DateTimeZoneBuilder\$*.class,org/joda/time/tz/DefaultNameProvider.class,org/joda/time/tz/DefaultNameProvider\$*.class,org/joda/time/tz/FixedDateTimeZone.class,org/joda/time/tz/FixedDateTimeZone\$*.class,org/joda/time/tz/NameProvider.class,org/joda/time/tz/NameProvider\$*.class,org/joda/time/tz/Provider.class,org/joda/time/tz/Provider\$*.class,org/joda/time/tz/ZoneInfoProvider.class,org/joda/time/tz/ZoneInfoProvider\$*.class
 d4j.classes.modified=org.joda.time.DateTimeZone
 d4j.classes.relevant=org.joda.time.chrono.AssembledChronology,org.joda.time.chrono.BaseChronology,org.joda.time.chrono.ISOChronology,org.joda.time.Chronology,org.joda.time.DateTimeZone,org.joda.time.JodaTimePermission,org.joda.time.ReadableInstant,org.joda.time.tz.CachedDateTimeZone,org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.tz.DefaultNameProvider,org.joda.time.tz.FixedDateTimeZone,org.joda.time.tz.NameProvider,org.joda.time.tz.Provider,org.joda.time.tz.ZoneInfoProvider
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/joda/time/field/TestFieldUtils.java b/src/test/java/org/joda/time/field/TestFieldUtils.java
index e01fdef..30b5fc4 100644
--- a/src/test/java/org/joda/time/field/TestFieldUtils.java
+++ b/src/test/java/org/joda/time/field/TestFieldUtils.java
@@ -188,4 +188,46 @@ public class TestFieldUtils extends TestCase {
         } catch (ArithmeticException e) {
         }
     }
+    public void testSafeMultiplyLongInt() {
+        assertEquals(0L, FieldUtils.safeMultiply(0L, 0));
+        
+        assertEquals(1L, FieldUtils.safeMultiply(1L, 1));
+        assertEquals(3L, FieldUtils.safeMultiply(1L, 3));
+        assertEquals(3L, FieldUtils.safeMultiply(3L, 1));
+        
+        assertEquals(6L, FieldUtils.safeMultiply(2L, 3));
+        assertEquals(-6L, FieldUtils.safeMultiply(2L, -3));
+        assertEquals(-6L, FieldUtils.safeMultiply(-2L, 3));
+        assertEquals(6L, FieldUtils.safeMultiply(-2L, -3));
+        
+        assertEquals(-1L * Integer.MIN_VALUE, FieldUtils.safeMultiply(-1L, Integer.MIN_VALUE));
+        
+        assertEquals(Long.MAX_VALUE, FieldUtils.safeMultiply(Long.MAX_VALUE, 1));
+        assertEquals(Long.MIN_VALUE, FieldUtils.safeMultiply(Long.MIN_VALUE, 1));
+        assertEquals(-Long.MAX_VALUE, FieldUtils.safeMultiply(Long.MAX_VALUE, -1));
+        
+        try {
+            FieldUtils.safeMultiply(Long.MIN_VALUE, -1);
+            fail();
+        } catch (ArithmeticException e) {
+        }
+        
+        try {
+            FieldUtils.safeMultiply(Long.MIN_VALUE, 100);
+            fail();
+        } catch (ArithmeticException e) {
+        }
+        
+        try {
+            FieldUtils.safeMultiply(Long.MIN_VALUE, Integer.MAX_VALUE);
+            fail();
+        } catch (ArithmeticException e) {
+        }
+        
+        try {
+            FieldUtils.safeMultiply(Long.MAX_VALUE, Integer.MIN_VALUE);
+            fail();
+        } catch (ArithmeticException e) {
+        }
+    }
 }
