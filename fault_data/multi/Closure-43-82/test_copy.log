--- Insert: testLends10
8464a8465,8475
>   public void testLends10() throws Exception {
>     testTypes(
>         "function defineClass(x) { return function() {}; } " +
>         "/** @constructor */" +
>         "var Foo = defineClass(" +
>         "    /** @lends {Foo.prototype} */ ({/** @type {number} */ bar: 1}));" +
>         "/** @return {string} */ function f() { return (new Foo()).bar; }",
>         "inconsistent return type\n" +
>         "found   : number\n" +
>         "required: string");
>   }
--- Insert: testLends11
8475a8476,8493
>   public void testLends11() throws Exception {
>     testTypes(
>         "function defineClass(x, y) { return function() {}; } " +
>         "/** @constructor */" +
>         "var Foo = function() {};" +
>         "/** @return {*} */ Foo.prototype.bar = function() { return 3; };" +
>         "/**\n" +
>         " * @constructor\n" +
>         " * @extends {Foo}\n" +
>         " */\n" +
>         "var SubFoo = defineClass(Foo, " +
>         "    /** @lends {SubFoo.prototype} */ ({\n" +
>         "      /** @return {number} */ bar: function() { return 3; }}));" +
>         "/** @return {string} */ function f() { return (new SubFoo()).bar(); }",
>         "inconsistent return type\n" +
>         "found   : number\n" +
>         "required: string");
>   }
