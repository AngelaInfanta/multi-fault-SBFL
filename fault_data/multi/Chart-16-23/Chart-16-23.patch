diff --git a/defects4j.build.properties b/defects4j.build.properties
index 8b666a6..9976489 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=23
+d4j.classes.instrument=org/jfree/chart/LegendItemSource.class,org/jfree/chart/LegendItemSource\$*.class,org/jfree/chart/axis/Axis.class,org/jfree/chart/axis/Axis\$*.class,org/jfree/chart/axis/NumberAxis.class,org/jfree/chart/axis/NumberAxis\$*.class,org/jfree/chart/axis/ValueAxis.class,org/jfree/chart/axis/ValueAxis\$*.class,org/jfree/chart/entity/CategoryItemEntity.class,org/jfree/chart/entity/CategoryItemEntity\$*.class,org/jfree/chart/entity/ChartEntity.class,org/jfree/chart/entity/ChartEntity\$*.class,org/jfree/chart/event/AxisChangeListener.class,org/jfree/chart/event/AxisChangeListener\$*.class,org/jfree/chart/event/ChartChangeEvent.class,org/jfree/chart/event/ChartChangeEvent\$*.class,org/jfree/chart/event/ChartChangeEventType.class,org/jfree/chart/event/ChartChangeEventType\$*.class,org/jfree/chart/event/MarkerChangeListener.class,org/jfree/chart/event/MarkerChangeListener\$*.class,org/jfree/chart/event/RendererChangeEvent.class,org/jfree/chart/event/RendererChangeEvent\$*.class,org/jfree/chart/event/RendererChangeListener.class,org/jfree/chart/event/RendererChangeListener\$*.class,org/jfree/chart/labels/CategorySeriesLabelGenerator.class,org/jfree/chart/labels/CategorySeriesLabelGenerator\$*.class,org/jfree/chart/labels/ItemLabelAnchor.class,org/jfree/chart/labels/ItemLabelAnchor\$*.class,org/jfree/chart/labels/ItemLabelPosition.class,org/jfree/chart/labels/ItemLabelPosition\$*.class,org/jfree/chart/labels/StandardCategorySeriesLabelGenerator.class,org/jfree/chart/labels/StandardCategorySeriesLabelGenerator\$*.class,org/jfree/chart/plot/CategoryPlot.class,org/jfree/chart/plot/CategoryPlot\$*.class,org/jfree/chart/plot/Plot.class,org/jfree/chart/plot/Plot\$*.class,org/jfree/chart/plot/ValueAxisPlot.class,org/jfree/chart/plot/ValueAxisPlot\$*.class,org/jfree/chart/plot/Zoomable.class,org/jfree/chart/plot/Zoomable\$*.class,org/jfree/chart/renderer/AbstractRenderer.class,org/jfree/chart/renderer/AbstractRenderer\$*.class,org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.class,org/jfree/chart/renderer/category/AbstractCategoryItemRenderer\$*.class,org/jfree/chart/renderer/category/CategoryItemRenderer.class,org/jfree/chart/renderer/category/CategoryItemRenderer\$*.class,org/jfree/chart/renderer/category/MinMaxCategoryRenderer.class,org/jfree/chart/renderer/category/MinMaxCategoryRenderer\$*.class,org/jfree/chart/text/TextAnchor.class,org/jfree/chart/text/TextAnchor\$*.class,org/jfree/chart/util/AbstractObjectList.class,org/jfree/chart/util/AbstractObjectList\$*.class,org/jfree/chart/util/BooleanList.class,org/jfree/chart/util/BooleanList\$*.class,org/jfree/chart/util/ObjectList.class,org/jfree/chart/util/ObjectList\$*.class,org/jfree/chart/util/ObjectUtilities.class,org/jfree/chart/util/ObjectUtilities\$*.class,org/jfree/chart/util/PaintList.class,org/jfree/chart/util/PaintList\$*.class,org/jfree/chart/util/PaintUtilities.class,org/jfree/chart/util/PaintUtilities\$*.class,org/jfree/chart/util/PublicCloneable.class,org/jfree/chart/util/PublicCloneable\$*.class,org/jfree/chart/util/ShapeList.class,org/jfree/chart/util/ShapeList\$*.class,org/jfree/chart/util/StrokeList.class,org/jfree/chart/util/StrokeList\$*.class,org/jfree/data/DataUtilities.class,org/jfree/data/DataUtilities\$*.class,org/jfree/data/KeyedValues.class,org/jfree/data/KeyedValues\$*.class,org/jfree/data/KeyedValues2D.class,org/jfree/data/KeyedValues2D\$*.class,org/jfree/data/UnknownKeyException.class,org/jfree/data/UnknownKeyException\$*.class,org/jfree/data/Values.class,org/jfree/data/Values\$*.class,org/jfree/data/Values2D.class,org/jfree/data/Values2D\$*.class,org/jfree/data/category/CategoryDataset.class,org/jfree/data/category/CategoryDataset\$*.class,org/jfree/data/category/DefaultCategoryDataset.class,org/jfree/data/category/DefaultCategoryDataset\$*.class,org/jfree/data/category/DefaultIntervalCategoryDataset.class,org/jfree/data/category/DefaultIntervalCategoryDataset\$*.class,org/jfree/data/category/IntervalCategoryDataset.class,org/jfree/data/category/IntervalCategoryDataset\$*.class,org/jfree/data/general/AbstractDataset.class,org/jfree/data/general/AbstractDataset\$*.class,org/jfree/data/general/AbstractSeriesDataset.class,org/jfree/data/general/AbstractSeriesDataset\$*.class,org/jfree/data/general/Dataset.class,org/jfree/data/general/Dataset\$*.class,org/jfree/data/general/DatasetChangeEvent.class,org/jfree/data/general/DatasetChangeEvent\$*.class,org/jfree/data/general/DatasetChangeListener.class,org/jfree/data/general/DatasetChangeListener\$*.class,org/jfree/data/general/DatasetGroup.class,org/jfree/data/general/DatasetGroup\$*.class,org/jfree/data/general/SeriesChangeListener.class,org/jfree/data/general/SeriesChangeListener\$*.class,org/jfree/data/general/SeriesDataset.class,org/jfree/data/general/SeriesDataset\$*.class,org/jfree/data/resources/DataPackageResources.class,org/jfree/data/resources/DataPackageResources\$*.class
 d4j.classes.modified=org.jfree.chart.renderer.category.MinMaxCategoryRenderer
 d4j.classes.relevant=org.jfree.chart.axis.Axis,org.jfree.chart.axis.NumberAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.entity.CategoryItemEntity,org.jfree.chart.entity.ChartEntity,org.jfree.chart.event.AxisChangeListener,org.jfree.chart.event.ChartChangeEvent,org.jfree.chart.event.ChartChangeEventType,org.jfree.chart.event.MarkerChangeListener,org.jfree.chart.event.RendererChangeEvent,org.jfree.chart.event.RendererChangeListener,org.jfree.chart.labels.CategorySeriesLabelGenerator,org.jfree.chart.labels.ItemLabelAnchor,org.jfree.chart.labels.ItemLabelPosition,org.jfree.chart.labels.StandardCategorySeriesLabelGenerator,org.jfree.chart.LegendItemSource,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.plot.Plot,org.jfree.chart.plot.ValueAxisPlot,org.jfree.chart.plot.Zoomable,org.jfree.chart.renderer.AbstractRenderer,org.jfree.chart.renderer.category.AbstractCategoryItemRenderer,org.jfree.chart.renderer.category.CategoryItemRenderer,org.jfree.chart.renderer.category.MinMaxCategoryRenderer,org.jfree.chart.text.TextAnchor,org.jfree.chart.util.AbstractObjectList,org.jfree.chart.util.BooleanList,org.jfree.chart.util.ObjectList,org.jfree.chart.util.ObjectUtilities,org.jfree.chart.util.PaintList,org.jfree.chart.util.PaintUtilities,org.jfree.chart.util.PublicCloneable,org.jfree.chart.util.ShapeList,org.jfree.chart.util.StrokeList,org.jfree.data.category.CategoryDataset,org.jfree.data.category.DefaultCategoryDataset,org.jfree.data.general.AbstractDataset,org.jfree.data.general.Dataset,org.jfree.data.general.DatasetChangeListener,org.jfree.data.KeyedValues2D,org.jfree.data.Values2D
 d4j.dir.src.classes=source
diff --git a/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java
index 9cc5da8..24b8c5e 100644
--- a/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java
+++ b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java
@@ -313,4 +313,75 @@ public class DefaultIntervalCategoryDatasetTests extends TestCase {
         }
         assertTrue(pass);
     }
+    public void testGetCategoryIndex() {
+    	// check an empty dataset
+    	DefaultIntervalCategoryDataset empty 
+    	        = new DefaultIntervalCategoryDataset(new double[0][0], 
+    	        		new double[0][0]);
+    	assertEquals(-1, empty.getCategoryIndex("ABC"));
+    }
+    public void testSetCategoryKeys() {
+    	// check an empty dataset
+    	DefaultIntervalCategoryDataset empty 
+    	        = new DefaultIntervalCategoryDataset(new double[0][0], 
+    	        		new double[0][0]);
+    	boolean pass = true;
+    	try {
+    		empty.setCategoryKeys(new String[0]);
+    	}
+    	catch (RuntimeException e) {
+    		pass = false;
+    	}
+    	assertTrue(pass);
+    }
+    public void testGetSeriesIndex() {
+    	// check an empty dataset
+    	DefaultIntervalCategoryDataset empty 
+    	        = new DefaultIntervalCategoryDataset(new double[0][0], 
+    	        		new double[0][0]);
+    	assertEquals(-1, empty.getSeriesIndex("ABC"));
+    }
+    public void testGetRowCount() {
+    	// check an empty dataset
+    	DefaultIntervalCategoryDataset empty 
+    	        = new DefaultIntervalCategoryDataset(new double[0][0], 
+    	        		new double[0][0]);
+        assertEquals(0, empty.getColumnCount());
+    }
+    public void testGetRowIndex() {
+    	// check an empty dataset
+    	DefaultIntervalCategoryDataset empty 
+    	        = new DefaultIntervalCategoryDataset(new double[0][0], 
+    	        		new double[0][0]);
+    	assertEquals(-1, empty.getRowIndex("ABC"));
+    }
+    public void testGetColumnCount() {
+    	// check an empty dataset
+    	DefaultIntervalCategoryDataset empty 
+    	        = new DefaultIntervalCategoryDataset(new double[0][0], 
+    	        		new double[0][0]);
+        assertEquals(0, empty.getColumnCount());
+    }
+    public void testGetColumnIndex() {
+    	// check an empty dataset
+    	DefaultIntervalCategoryDataset empty 
+    	        = new DefaultIntervalCategoryDataset(new double[0][0], 
+    	        		new double[0][0]);
+    	assertEquals(-1, empty.getColumnIndex("ABC"));
+    }
+    public void testCloning2() {
+    	DefaultIntervalCategoryDataset d1 
+                = new DefaultIntervalCategoryDataset(new double[0][0], 
+        		    new double[0][0]);
+        DefaultIntervalCategoryDataset d2 = null;
+        try {
+            d2 = (DefaultIntervalCategoryDataset) d1.clone();
+        }
+        catch (CloneNotSupportedException e) {
+            e.printStackTrace();
+        }
+        assertTrue(d1 != d2);
+        assertTrue(d1.getClass() == d2.getClass());
+        assertTrue(d1.equals(d2));	
+    }
 }
