diff --git a/defects4j.build.properties b/defects4j.build.properties
index b8a8aa6..a170241 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=50
+d4j.classes.instrument=org/apache/commons/lang/text/StrBuilder.class,org/apache/commons/lang/text/StrBuilder\$*.class,org/apache/commons/lang/text/StrMatcher.class,org/apache/commons/lang/text/StrMatcher\$*.class,org/apache/commons/lang/text/StrTokenizer.class,org/apache/commons/lang/text/StrTokenizer\$*.class,org/apache/commons/lang/time/FastDateFormat.class,org/apache/commons/lang/time/FastDateFormat\$*.class
 d4j.classes.modified=org.apache.commons.lang.time.FastDateFormat
 d4j.classes.relevant=org.apache.commons.lang.time.FastDateFormat
 d4j.dir.src.classes=src/java
diff --git a/src/test/org/apache/commons/lang/text/StrBuilderTest.java b/src/test/org/apache/commons/lang/text/StrBuilderTest.java
index 67e1ce1..a872bec 100644
--- a/src/test/org/apache/commons/lang/text/StrBuilderTest.java
+++ b/src/test/org/apache/commons/lang/text/StrBuilderTest.java
@@ -1748,5 +1748,15 @@ public class StrBuilderTest extends TestCase {
         assertFalse( "The contains(char) method is looking beyond the end of the string", sb.contains('h'));
         assertEquals( "The indexOf(char) method is looking beyond the end of the string", -1, sb.indexOf('h'));
     }
+    public void testLang412Left() {
+        StrBuilder sb = new StrBuilder();
+        sb.appendFixedWidthPadLeft(null, 10, '*');
+        assertEquals( "Failed to invoke appendFixedWidthPadLeft correctly", "**********", sb.toString());
+    }
+    public void testLang412Right() {
+        StrBuilder sb = new StrBuilder();
+        sb.appendFixedWidthPadRight(null, 10, '*');
+        assertEquals( "Failed to invoke appendFixedWidthPadRight correctly", "**********", sb.toString());
+    }
 
 }
