diff --git a/defects4j.build.properties b/defects4j.build.properties
index 07a9a97..7277780 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=10
+d4j.classes.instrument=org/apache/commons/math3/Field.class,org/apache/commons/math3/Field\$*.class,org/apache/commons/math3/FieldElement.class,org/apache/commons/math3/FieldElement\$*.class,org/apache/commons/math3/analysis/differentiation/DSCompiler.class,org/apache/commons/math3/analysis/differentiation/DSCompiler\$*.class,org/apache/commons/math3/analysis/differentiation/DerivativeStructure.class,org/apache/commons/math3/analysis/differentiation/DerivativeStructure\$*.class,org/apache/commons/math3/exception/DimensionMismatchException.class,org/apache/commons/math3/exception/DimensionMismatchException\$*.class,org/apache/commons/math3/exception/MathArithmeticException.class,org/apache/commons/math3/exception/MathArithmeticException\$*.class,org/apache/commons/math3/exception/MathIllegalArgumentException.class,org/apache/commons/math3/exception/MathIllegalArgumentException\$*.class,org/apache/commons/math3/exception/MathIllegalNumberException.class,org/apache/commons/math3/exception/MathIllegalNumberException\$*.class,org/apache/commons/math3/exception/MathIllegalStateException.class,org/apache/commons/math3/exception/MathIllegalStateException\$*.class,org/apache/commons/math3/exception/MathInternalError.class,org/apache/commons/math3/exception/MathInternalError\$*.class,org/apache/commons/math3/exception/NoDataException.class,org/apache/commons/math3/exception/NoDataException\$*.class,org/apache/commons/math3/exception/NonMonotonicSequenceException.class,org/apache/commons/math3/exception/NonMonotonicSequenceException\$*.class,org/apache/commons/math3/exception/NotPositiveException.class,org/apache/commons/math3/exception/NotPositiveException\$*.class,org/apache/commons/math3/exception/NotStrictlyPositiveException.class,org/apache/commons/math3/exception/NotStrictlyPositiveException\$*.class,org/apache/commons/math3/exception/NullArgumentException.class,org/apache/commons/math3/exception/NullArgumentException\$*.class,org/apache/commons/math3/exception/NumberIsTooLargeException.class,org/apache/commons/math3/exception/NumberIsTooLargeException\$*.class,org/apache/commons/math3/exception/NumberIsTooSmallException.class,org/apache/commons/math3/exception/NumberIsTooSmallException\$*.class,org/apache/commons/math3/exception/util/ExceptionContextProvider.class,org/apache/commons/math3/exception/util/ExceptionContextProvider\$*.class,org/apache/commons/math3/exception/util/Localizable.class,org/apache/commons/math3/exception/util/Localizable\$*.class,org/apache/commons/math3/geometry/Space.class,org/apache/commons/math3/geometry/Space\$*.class,org/apache/commons/math3/geometry/Vector.class,org/apache/commons/math3/geometry/Vector\$*.class,org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.class,org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet\$*.class,org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.class,org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint\$*.class,org/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint.class,org/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint\$*.class,org/apache/commons/math3/geometry/euclidean/oned/Vector1D.class,org/apache/commons/math3/geometry/euclidean/oned/Vector1D\$*.class,org/apache/commons/math3/geometry/euclidean/threed/Line.class,org/apache/commons/math3/geometry/euclidean/threed/Line\$*.class,org/apache/commons/math3/geometry/euclidean/threed/SubLine.class,org/apache/commons/math3/geometry/euclidean/threed/SubLine\$*.class,org/apache/commons/math3/geometry/euclidean/threed/Vector3D.class,org/apache/commons/math3/geometry/euclidean/threed/Vector3D\$*.class,org/apache/commons/math3/geometry/euclidean/twod/Line.class,org/apache/commons/math3/geometry/euclidean/twod/Line\$*.class,org/apache/commons/math3/geometry/euclidean/twod/SubLine.class,org/apache/commons/math3/geometry/euclidean/twod/SubLine\$*.class,org/apache/commons/math3/geometry/euclidean/twod/Vector2D.class,org/apache/commons/math3/geometry/euclidean/twod/Vector2D\$*.class,org/apache/commons/math3/geometry/partitioning/AbstractRegion.class,org/apache/commons/math3/geometry/partitioning/AbstractRegion\$*.class,org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane.class,org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane\$*.class,org/apache/commons/math3/geometry/partitioning/BSPTree.class,org/apache/commons/math3/geometry/partitioning/BSPTree\$*.class,org/apache/commons/math3/geometry/partitioning/BSPTreeVisitor.class,org/apache/commons/math3/geometry/partitioning/BSPTreeVisitor\$*.class,org/apache/commons/math3/geometry/partitioning/Embedding.class,org/apache/commons/math3/geometry/partitioning/Embedding\$*.class,org/apache/commons/math3/geometry/partitioning/Hyperplane.class,org/apache/commons/math3/geometry/partitioning/Hyperplane\$*.class,org/apache/commons/math3/geometry/partitioning/Region.class,org/apache/commons/math3/geometry/partitioning/Region\$*.class,org/apache/commons/math3/geometry/partitioning/SubHyperplane.class,org/apache/commons/math3/geometry/partitioning/SubHyperplane\$*.class,org/apache/commons/math3/geometry/partitioning/Transform.class,org/apache/commons/math3/geometry/partitioning/Transform\$*.class,org/apache/commons/math3/util/FastMath.class,org/apache/commons/math3/util/FastMath\$*.class,org/apache/commons/math3/util/MathArrays.class,org/apache/commons/math3/util/MathArrays\$*.class,org/apache/commons/math3/util/Precision.class,org/apache/commons/math3/util/Precision\$*.class
 d4j.classes.modified=org.apache.commons.math3.analysis.differentiation.DSCompiler
 d4j.classes.relevant=org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.exception.DimensionMismatchException,org.apache.commons.math3.exception.MathIllegalArgumentException,org.apache.commons.math3.exception.MathIllegalNumberException,org.apache.commons.math3.exception.NumberIsTooLargeException,org.apache.commons.math3.exception.util.ExceptionContextProvider,org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement,org.apache.commons.math3.util.FastMath
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java b/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
index f060cfb..fbbab4b 100644
--- a/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
+++ b/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java
@@ -152,5 +152,12 @@ public class SubLineTest {
         Assert.assertNull(sub1.intersection(sub2, true));
         Assert.assertNull(sub1.intersection(sub2, false));
     }
+    @Test
+    public void testIntersectionNotIntersecting() throws MathIllegalArgumentException {
+        SubLine sub1 = new SubLine(new Vector3D(1, 1, 1), new Vector3D(1.5, 1, 1));
+        SubLine sub2 = new SubLine(new Vector3D(2, 3, 0), new Vector3D(2, 3, 0.5));
+        Assert.assertNull(sub1.intersection(sub2, true));
+        Assert.assertNull(sub1.intersection(sub2, false));
+    }
 
 }
diff --git a/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java b/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
index bc276d1..f063e00 100644
--- a/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
+++ b/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java
@@ -143,5 +143,12 @@ public class SubLineTest {
         Assert.assertNull(sub1.intersection(sub2, true));
         Assert.assertNull(sub1.intersection(sub2, false));
     }
+    @Test
+    public void testIntersectionParallel() {
+        final SubLine sub1 = new SubLine(new Vector2D(0, 1), new Vector2D(0, 2));
+        final SubLine sub2 = new SubLine(new Vector2D(66, 3), new Vector2D(66, 4));
+        Assert.assertNull(sub1.intersection(sub2, true));
+        Assert.assertNull(sub1.intersection(sub2, false));
+    }
 
 }
