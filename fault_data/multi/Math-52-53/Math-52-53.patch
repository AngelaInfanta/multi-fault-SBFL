diff --git a/defects4j.build.properties b/defects4j.build.properties
index ce132e5..6e7dbd5 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=53
+d4j.classes.instrument=org/apache/commons/math/Field.class,org/apache/commons/math/Field\$*.class,org/apache/commons/math/FieldElement.class,org/apache/commons/math/FieldElement\$*.class,org/apache/commons/math/MathException.class,org/apache/commons/math/MathException\$*.class,org/apache/commons/math/complex/Complex.class,org/apache/commons/math/complex/Complex\$*.class,org/apache/commons/math/exception/DimensionMismatchException.class,org/apache/commons/math/exception/DimensionMismatchException\$*.class,org/apache/commons/math/exception/MathArithmeticException.class,org/apache/commons/math/exception/MathArithmeticException\$*.class,org/apache/commons/math/exception/MathIllegalArgumentException.class,org/apache/commons/math/exception/MathIllegalArgumentException\$*.class,org/apache/commons/math/exception/MathIllegalNumberException.class,org/apache/commons/math/exception/MathIllegalNumberException\$*.class,org/apache/commons/math/exception/MathThrowable.class,org/apache/commons/math/exception/MathThrowable\$*.class,org/apache/commons/math/exception/NonMonotonousSequenceException.class,org/apache/commons/math/exception/NonMonotonousSequenceException\$*.class,org/apache/commons/math/exception/NotFiniteNumberException.class,org/apache/commons/math/exception/NotFiniteNumberException\$*.class,org/apache/commons/math/exception/NotPositiveException.class,org/apache/commons/math/exception/NotPositiveException\$*.class,org/apache/commons/math/exception/NullArgumentException.class,org/apache/commons/math/exception/NullArgumentException\$*.class,org/apache/commons/math/exception/NumberIsTooLargeException.class,org/apache/commons/math/exception/NumberIsTooLargeException\$*.class,org/apache/commons/math/exception/NumberIsTooSmallException.class,org/apache/commons/math/exception/NumberIsTooSmallException\$*.class,org/apache/commons/math/exception/util/ExceptionContextProvider.class,org/apache/commons/math/exception/util/ExceptionContextProvider\$*.class,org/apache/commons/math/exception/util/Localizable.class,org/apache/commons/math/exception/util/Localizable\$*.class,org/apache/commons/math/geometry/Space.class,org/apache/commons/math/geometry/Space\$*.class,org/apache/commons/math/geometry/Vector.class,org/apache/commons/math/geometry/Vector\$*.class,org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException.class,org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException\$*.class,org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException.class,org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException\$*.class,org/apache/commons/math/geometry/euclidean/threed/Rotation.class,org/apache/commons/math/geometry/euclidean/threed/Rotation\$*.class,org/apache/commons/math/geometry/euclidean/threed/Vector3D.class,org/apache/commons/math/geometry/euclidean/threed/Vector3D\$*.class,org/apache/commons/math/util/FastMath.class,org/apache/commons/math/util/FastMath\$*.class,org/apache/commons/math/util/MathUtils.class,org/apache/commons/math/util/MathUtils\$*.class
 d4j.classes.modified=org.apache.commons.math.complex.Complex
 d4j.classes.relevant=org.apache.commons.math.complex.Complex,org.apache.commons.math.exception.DimensionMismatchException,org.apache.commons.math.exception.MathArithmeticException,org.apache.commons.math.exception.MathIllegalArgumentException,org.apache.commons.math.exception.MathIllegalNumberException,org.apache.commons.math.exception.NonMonotonousSequenceException,org.apache.commons.math.exception.NotFiniteNumberException,org.apache.commons.math.exception.NotPositiveException,org.apache.commons.math.exception.NullArgumentException,org.apache.commons.math.exception.NumberIsTooLargeException,org.apache.commons.math.exception.NumberIsTooSmallException,org.apache.commons.math.exception.util.ExceptionContextProvider,org.apache.commons.math.exception.util.Localizable,org.apache.commons.math.Field,org.apache.commons.math.FieldElement,org.apache.commons.math.util.MathUtils
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java b/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
index b8c11c3..f68ed54 100644
--- a/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
+++ b/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
@@ -492,5 +492,19 @@ public class RotationTest {
   private void checkRotation(Rotation r, double q0, double q1, double q2, double q3) {
     Assert.assertEquals(0, Rotation.distance(r, new Rotation(q0, q1, q2, q3, false)), 1.0e-12);
   }
+  @Test
+  public void testIssue639(){
+      Vector3D u1 = new Vector3D(-1321008684645961.0 /  268435456.0,
+                                 -5774608829631843.0 /  268435456.0,
+                                 -3822921525525679.0 / 4294967296.0);
+      Vector3D u2 =new Vector3D( -5712344449280879.0 /    2097152.0,
+                                 -2275058564560979.0 /    1048576.0,
+                                  4423475992255071.0 /      65536.0);
+      Rotation rot = new Rotation(u1, u2, Vector3D.PLUS_I,Vector3D.PLUS_K);
+      Assert.assertEquals( 0.6228370359608200639829222, rot.getQ0(), 1.0e-15);
+      Assert.assertEquals( 0.0257707621456498790029987, rot.getQ1(), 1.0e-15);
+      Assert.assertEquals(-0.0000000002503012255839931, rot.getQ2(), 1.0e-15);
+      Assert.assertEquals(-0.7819270390861109450724902, rot.getQ3(), 1.0e-15);
+  }
 
 }
