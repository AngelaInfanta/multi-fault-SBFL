--- Insert: testOverrideMeanWithMathClass
305a306,315
>     @Test
>     public void testOverrideMeanWithMathClass() throws Exception {
>         double[] scores = {1, 2, 3, 4};
>         SummaryStatistics stats = new SummaryStatistics();
>         stats.setMeanImpl(new Mean()); 
>         for(double i : scores) {
>           stats.addValue(i);
>         }
>         Assert.assertEquals((new Mean()).evaluate(scores),stats.getMean(), 0); 
>     }
--- Insert: testOverrideGeoMeanWithMathClass
315a316,325
>     @Test
>     public void testOverrideGeoMeanWithMathClass() throws Exception {
>         double[] scores = {1, 2, 3, 4};
>         SummaryStatistics stats = new SummaryStatistics();
>         stats.setGeoMeanImpl(new GeometricMean()); 
>         for(double i : scores) {
>           stats.addValue(i);
>         }
>         Assert.assertEquals((new GeometricMean()).evaluate(scores),stats.getGeometricMean(), 0); 
>     }
--- Insert: testOverrideVarianceWithMathClass
325a326,335
>     @Test
>     public void testOverrideVarianceWithMathClass() throws Exception {
>         double[] scores = {1, 2, 3, 4};
>         SummaryStatistics stats = new SummaryStatistics();
>         stats.setVarianceImpl(new Variance(false)); //use "population variance"
>         for(double i : scores) {
>           stats.addValue(i);
>         }
>         Assert.assertEquals((new Variance(false)).evaluate(scores),stats.getVariance(), 0); 
>     }
