diff --git a/defects4j.build.properties b/defects4j.build.properties
index 714eec8..7aba7f9 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=13
+d4j.classes.instrument=org/apache/commons/lang3/RandomStringUtils.class,org/apache/commons/lang3/RandomStringUtils\$*.class,org/apache/commons/lang3/SerializationException.class,org/apache/commons/lang3/SerializationException\$*.class,org/apache/commons/lang3/SerializationUtils.class,org/apache/commons/lang3/SerializationUtils\$*.class
 d4j.classes.modified=org.apache.commons.lang3.SerializationUtils
 d4j.classes.relevant=org.apache.commons.lang3.SerializationException,org.apache.commons.lang3.SerializationUtils
 d4j.dir.src.classes=src/main/java
diff --git a/src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java b/src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java
index 134aa54..07333ca 100644
--- a/src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java
+++ b/src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java
@@ -329,5 +329,15 @@ public class RandomStringUtilsTest extends junit.framework.TestCase {
         // just to be complete
         assertEquals(orig, copy);
     }
+    public void testLANG807() {
+        try {
+            RandomStringUtils.random(3,5,5,false,false);
+            fail("Expected IllegalArgumentException");
+        } catch (IllegalArgumentException ex) { // distinguish from Random#nextInt message
+            final String msg = ex.getMessage();
+            assertTrue("Message (" + msg + ") must contain 'start'", msg.contains("start"));
+            assertTrue("Message (" + msg + ") must contain 'end'", msg.contains("end"));
+        }
+    }
 }
 
