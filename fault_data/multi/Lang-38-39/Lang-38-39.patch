diff --git a/defects4j.build.properties b/defects4j.build.properties
index 319ed4d..0245f8b 100644
--- a/defects4j.build.properties
+++ b/defects4j.build.properties
@@ -1,5 +1,6 @@
 #File automatically generated by Defects4J
 d4j.bug.id=39
+d4j.classes.instrument=org/apache/commons/lang3/StringUtils.class,org/apache/commons/lang3/StringUtils\$*.class,org/apache/commons/lang3/Validate.class,org/apache/commons/lang3/Validate\$*.class,org/apache/commons/lang3/time/FastDateFormat.class,org/apache/commons/lang3/time/FastDateFormat\$*.class
 d4j.classes.modified=org.apache.commons.lang3.StringUtils
 d4j.classes.relevant=org.apache.commons.lang3.StringUtils
 d4j.dir.src.classes=src/java
diff --git a/src/test/org/apache/commons/lang3/time/FastDateFormatTest.java b/src/test/org/apache/commons/lang3/time/FastDateFormatTest.java
index 419e0b1..83ab0a0 100644
--- a/src/test/org/apache/commons/lang3/time/FastDateFormatTest.java
+++ b/src/test/org/apache/commons/lang3/time/FastDateFormatTest.java
@@ -335,4 +335,16 @@ public class FastDateFormatTest extends TestCase {
         format = (FastDateFormat) SerializationUtils.deserialize( SerializationUtils.serialize( format ) );
         assertEquals(output, format.format(cal));
     }
+    public void testLang538() {
+        final String dateTime = "2009-10-16T16:42:16.000Z";
+
+        // more commonly constructed with: cal = new GregorianCalendar(2009, 9, 16, 8, 42, 16)
+        // for the unit test to work in any time zone, constructing with GMT-8 rather than default locale time zone
+        GregorianCalendar cal = new GregorianCalendar(TimeZone.getTimeZone("GMT-8"));
+        cal.clear();
+        cal.set(2009, 9, 16, 8, 42, 16);
+
+        FastDateFormat format = FastDateFormat.getInstance("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", TimeZone.getTimeZone("GMT"));
+        assertEquals("dateTime", dateTime, format.format(cal));
+    }
 }
